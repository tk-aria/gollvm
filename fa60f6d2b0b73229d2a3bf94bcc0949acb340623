{
  "comments": [
    {
      "key": {
        "uuid": "dae62541_a791422a",
        "filename": "driver/GnuTools.cpp",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 5206
      },
      "writtenOn": "2018-05-01T22:00:20Z",
      "side": 1,
      "message": "This code is ELF-specific, which is likely fine for now.  For example, Darwin support would require some changes.",
      "revId": "fa60f6d2b0b73229d2a3bf94bcc0949acb340623",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33cd6596_e497e633",
        "filename": "driver/GnuTools.cpp",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 14020
      },
      "writtenOn": "2018-05-02T11:47:42Z",
      "side": 1,
      "message": "Agreed. Clang has a whole separate Tool subclass for handling linking on Darwin, FWIW.",
      "parentUuid": "dae62541_a791422a",
      "revId": "fa60f6d2b0b73229d2a3bf94bcc0949acb340623",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfd72f4e_28272746",
        "filename": "driver/GnuTools.cpp",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 5206
      },
      "writtenOn": "2018-05-01T22:00:20Z",
      "side": 1,
      "message": "There should be a way to set the dynamic linker from the gollvm command line.",
      "revId": "fa60f6d2b0b73229d2a3bf94bcc0949acb340623",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b517b13_6aaad614",
        "filename": "driver/GnuTools.cpp",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 14020
      },
      "writtenOn": "2018-05-02T11:47:42Z",
      "side": 1,
      "message": "Yes, that is on my list. I will see about putting it in now.",
      "parentUuid": "dfd72f4e_28272746",
      "revId": "fa60f6d2b0b73229d2a3bf94bcc0949acb340623",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abc75a0e_ece6dd7d",
        "filename": "driver/GnuTools.cpp",
        "patchSetId": 3
      },
      "lineNbr": 221,
      "author": {
        "id": 14020
      },
      "writtenOn": "2018-05-02T12:38:19Z",
      "side": 1,
      "message": "OK, on second thought I think things should be ok as is. Clang and GCC provide top-level options for setting the dynamic linker path, but from what I can tell on linux it\u0027s simply a matter of using -Wl,-dynamic-linker,XXX -- the way things are constructed the -Wl override will be placed onto the command line after the one here in Linker::addSharedAndOrStaticFlags, so I think this will work.",
      "parentUuid": "1b517b13_6aaad614",
      "revId": "fa60f6d2b0b73229d2a3bf94bcc0949acb340623",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ffcb0a9_6b84e289",
        "filename": "driver/LinuxToolChain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 5206
      },
      "writtenOn": "2018-05-01T22:00:20Z",
      "side": 1,
      "message": "Note that the go tool now expects the driver to support the -### option.  You should implement that if you haven\u0027t already.  See gccgoToolID in cmd/go/internal/work/buildid.go.",
      "revId": "fa60f6d2b0b73229d2a3bf94bcc0949acb340623",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f446a311_db350af9",
        "filename": "driver/LinuxToolChain.cpp",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 14020
      },
      "writtenOn": "2018-05-02T11:47:42Z",
      "side": 1,
      "message": "Yes, -### support is part of this collection of patches.",
      "parentUuid": "4ffcb0a9_6b84e289",
      "revId": "fa60f6d2b0b73229d2a3bf94bcc0949acb340623",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}