// unknowndefine __SIZE_TYPE__ long unsigned int
// unknowndefine __PTRDIFF_TYPE__ long int
// unknowndefine __WCHAR_TYPE__ int
// unknowndefine __WINT_TYPE__ unsigned int
// unknowndefine __INTMAX_TYPE__ long int
// unknowndefine __UINTMAX_TYPE__ long unsigned int
// unknowndefine __CHAR16_TYPE__ short unsigned int
// unknowndefine __CHAR32_TYPE__ unsigned int
// unknowndefine __SIG_ATOMIC_TYPE__ int
// unknowndefine __INT8_TYPE__ signed char
// unknowndefine __INT16_TYPE__ short int
// unknowndefine __INT32_TYPE__ int
// unknowndefine __INT64_TYPE__ long int
// unknowndefine __UINT8_TYPE__ unsigned char
// unknowndefine __UINT16_TYPE__ short unsigned int
// unknowndefine __UINT32_TYPE__ unsigned int
// unknowndefine __UINT64_TYPE__ long unsigned int
// unknowndefine __INT_LEAST8_TYPE__ signed char
// unknowndefine __INT_LEAST16_TYPE__ short int
// unknowndefine __INT_LEAST32_TYPE__ int
// unknowndefine __INT_LEAST64_TYPE__ long int
// unknowndefine __UINT_LEAST8_TYPE__ unsigned char
// unknowndefine __UINT_LEAST16_TYPE__ short unsigned int
// unknowndefine __UINT_LEAST32_TYPE__ unsigned int
// unknowndefine __UINT_LEAST64_TYPE__ long unsigned int
// unknowndefine __INT_FAST8_TYPE__ signed char
// unknowndefine __INT_FAST16_TYPE__ long int
// unknowndefine __INT_FAST32_TYPE__ long int
// unknowndefine __INT_FAST64_TYPE__ long int
// unknowndefine __UINT_FAST8_TYPE__ unsigned char
// unknowndefine __UINT_FAST16_TYPE__ long unsigned int
// unknowndefine __UINT_FAST32_TYPE__ long unsigned int
// unknowndefine __UINT_FAST64_TYPE__ long unsigned int
// unknowndefine __INTPTR_TYPE__ long int
// unknowndefine __UINTPTR_TYPE__ long unsigned int
// unknowndefine __DBL_MAX__ ((double)1.1)
// unknowndefine __DBL_MIN__ ((double)1.1)
// unknowndefine __DBL_EPSILON__ ((double)1.1)
// unknowndefine __DBL_DENORM_MIN__ ((double)1.1)
// unknowndefine __FLT32X_MAX__ 1.79769313486231570814527423731704357e+308F32x
// unknowndefine __FLT32X_MIN__ 2.22507385850720138309023271733240406e-308F32x
// unknowndefine __FLT32X_EPSILON__ 2.22044604925031308084726333618164062e-16F32x
// unknowndefine __FLT32X_DENORM_MIN__ 4.94065645841246544176568792868221372e-324F32x
// unknowndefine __FLT64X_MAX__ 1.18973149535723176502126385303097021e+4932F64x
// unknowndefine __FLT64X_MIN__ 3.36210314311209350626267781732175260e-4932F64x
// unknowndefine __FLT64X_EPSILON__ 1.08420217248550443400745280086994171e-19F64x
// unknowndefine __FLT64X_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951F64x
// unknowndefine NULL ((void *)0)
// unknowndefine __LEAF , __leaf__
// unknowndefine __LEAF_ATTR __attribute__ ((__leaf__))
// unknowndefine __THROW __attribute__ ((__nothrow__ __LEAF))
// unknowndefine __THROWNL __attribute__ ((__nothrow__))
// unknowndefine __ptr_t void *
// unknowndefine __long_double_t long double
// unknowndefine __flexarr []
// unknowndefine __attribute_malloc__ __attribute__ ((__malloc__))
// unknowndefine __attribute_pure__ __attribute__ ((__pure__))
// unknowndefine __attribute_const__ __attribute__ ((__const__))
// unknowndefine __attribute_used__ __attribute__ ((__used__))
// unknowndefine __attribute_noinline__ __attribute__ ((__noinline__))
// unknowndefine __attribute_deprecated__ __attribute__ ((__deprecated__))
// unknowndefine __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))
// unknowndefine __always_inline __inline __attribute__ ((__always_inline__))
// unknowndefine __attribute_artificial__ __attribute__ ((__artificial__))
// unknowndefine __extern_inline extern __inline __attribute__ ((__gnu_inline__))
// unknowndefine __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))
// unknowndefine __fortify_function __extern_always_inline __attribute_artificial__
// unknowndefine __restrict_arr __restrict
// unknowndefine __S16_TYPE short int
// unknowndefine __U16_TYPE unsigned short int
// unknowndefine __S32_TYPE int
// unknowndefine __U32_TYPE unsigned int
// unknowndefine __SLONGWORD_TYPE long int
// unknowndefine __ULONGWORD_TYPE unsigned long int
// unknowndefine __SQUAD_TYPE long int
// unknowndefine __UQUAD_TYPE unsigned long int
// unknowndefine __SWORD_TYPE long int
// unknowndefine __UWORD_TYPE unsigned long int
// unknowndefine __SLONG32_TYPE int
// unknowndefine __ULONG32_TYPE unsigned int
// unknowndefine __S64_TYPE long int
// unknowndefine __U64_TYPE unsigned long int
// unknowndefine __STD_TYPE typedef
// unknowndefine __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE
// unknowndefine __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE
// unknowndefine __DEV_T_TYPE __UQUAD_TYPE
// unknowndefine __UID_T_TYPE __U32_TYPE
// unknowndefine __GID_T_TYPE __U32_TYPE
// unknowndefine __INO_T_TYPE __SYSCALL_ULONG_TYPE
// unknowndefine __INO64_T_TYPE __UQUAD_TYPE
// unknowndefine __MODE_T_TYPE __U32_TYPE
// unknowndefine __NLINK_T_TYPE __SYSCALL_ULONG_TYPE
// unknowndefine __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE
// unknowndefine __OFF_T_TYPE __SYSCALL_SLONG_TYPE
// unknowndefine __OFF64_T_TYPE __SQUAD_TYPE
// unknowndefine __PID_T_TYPE __S32_TYPE
// unknowndefine __RLIM_T_TYPE __SYSCALL_ULONG_TYPE
// unknowndefine __RLIM64_T_TYPE __UQUAD_TYPE
// unknowndefine __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE
// unknowndefine __BLKCNT64_T_TYPE __SQUAD_TYPE
// unknowndefine __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE
// unknowndefine __FSBLKCNT64_T_TYPE __UQUAD_TYPE
// unknowndefine __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE
// unknowndefine __FSFILCNT64_T_TYPE __UQUAD_TYPE
// unknowndefine __ID_T_TYPE __U32_TYPE
// unknowndefine __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE
// unknowndefine __TIME_T_TYPE __SYSCALL_SLONG_TYPE
// unknowndefine __USECONDS_T_TYPE __U32_TYPE
// unknowndefine __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE
// unknowndefine __DADDR_T_TYPE __S32_TYPE
// unknowndefine __KEY_T_TYPE __S32_TYPE
// unknowndefine __CLOCKID_T_TYPE __S32_TYPE
// unknowndefine __TIMER_T_TYPE void *
// unknowndefine __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE
// unknowndefine __FSID_T_TYPE struct { int __val[2]; }
// unknowndefine __SSIZE_T_TYPE __SWORD_TYPE
// unknowndefine __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE
// unknowndefine NULL ((void *)0)
// unknowndefine _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))
// unknowndefine __NFDBITS (8 * (int) sizeof (__fd_mask))
// unknowndefine NFDBITS __NFDBITS
// unknowndefine __PTHREAD_SPINS 0, 0
// unknowndefine __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0, 0, 0, 0, 0 }
// unknowndefine d_fileno d_ino
// unknowndefine DT_UNKNOWN DT_UNKNOWN
// unknowndefine DT_FIFO DT_FIFO
// unknowndefine DT_CHR DT_CHR
// unknowndefine DT_DIR DT_DIR
// unknowndefine DT_BLK DT_BLK
// unknowndefine DT_REG DT_REG
// unknowndefine DT_LNK DT_LNK
// unknowndefine DT_SOCK DT_SOCK
// unknowndefine DT_WHT DT_WHT
// unknowndefine SSIZE_MAX LONG_MAX
// unknowndefine NULL ((void *)0)
// unknowndefine errno (*__errno_location ())
// unknowndefine st_atime st_atim.tv_sec
// unknowndefine st_mtime st_mtim.tv_sec
// unknowndefine st_ctime st_ctim.tv_sec
// unknowndefine _EXTERN_INLINE __extern_inline
// unknowndefine SIG_ERR ((__sighandler_t) -1)
// unknowndefine SIG_DFL ((__sighandler_t) 0)
// unknowndefine SIG_IGN ((__sighandler_t) 1)
// unknowndefine SIG_HOLD ((__sighandler_t) 2)
// unknowndefine SIGCLD SIGCHLD
// unknowndefine SIGPOLL SIGIO
// unknowndefine SIGRTMIN (__libc_current_sigrtmin ())
// unknowndefine SIGRTMAX (__libc_current_sigrtmax ())
// unknowndefine __SI_PAD_SIZE ((__SI_MAX_SIZE / sizeof (int)) - 4)
// unknowndefine si_pid _sifields._kill.si_pid
// unknowndefine si_uid _sifields._kill.si_uid
// unknowndefine si_timerid _sifields._timer.si_tid
// unknowndefine si_overrun _sifields._timer.si_overrun
// unknowndefine si_status _sifields._sigchld.si_status
// unknowndefine si_utime _sifields._sigchld.si_utime
// unknowndefine si_stime _sifields._sigchld.si_stime
// unknowndefine si_value _sifields._rt.si_sigval
// unknowndefine si_int _sifields._rt.si_sigval.sival_int
// unknowndefine si_ptr _sifields._rt.si_sigval.sival_ptr
// unknowndefine si_addr _sifields._sigfault.si_addr
// unknowndefine si_addr_lsb _sifields._sigfault.si_addr_lsb
// unknowndefine si_lower _sifields._sigfault.si_addr_bnd._lower
// unknowndefine si_upper _sifields._sigfault.si_addr_bnd._upper
// unknowndefine si_band _sifields._sigpoll.si_band
// unknowndefine si_fd _sifields._sigpoll.si_fd
// unknowndefine si_call_addr _sifields._sigsys._call_addr
// unknowndefine si_syscall _sifields._sigsys._syscall
// unknowndefine si_arch _sifields._sigsys._arch
// unknowndefine SI_ASYNCNL SI_ASYNCNL
// unknowndefine SI_TKILL SI_TKILL
// unknowndefine SI_SIGIO SI_SIGIO
// unknowndefine SI_ASYNCIO SI_ASYNCIO
// unknowndefine SI_MESGQ SI_MESGQ
// unknowndefine SI_TIMER SI_TIMER
// unknowndefine SI_QUEUE SI_QUEUE
// unknowndefine SI_USER SI_USER
// unknowndefine SI_KERNEL SI_KERNEL
// unknowndefine ILL_ILLOPC ILL_ILLOPC
// unknowndefine ILL_ILLOPN ILL_ILLOPN
// unknowndefine ILL_ILLADR ILL_ILLADR
// unknowndefine ILL_ILLTRP ILL_ILLTRP
// unknowndefine ILL_PRVOPC ILL_PRVOPC
// unknowndefine ILL_PRVREG ILL_PRVREG
// unknowndefine ILL_COPROC ILL_COPROC
// unknowndefine ILL_BADSTK ILL_BADSTK
// unknowndefine FPE_INTDIV FPE_INTDIV
// unknowndefine FPE_INTOVF FPE_INTOVF
// unknowndefine FPE_FLTDIV FPE_FLTDIV
// unknowndefine FPE_FLTOVF FPE_FLTOVF
// unknowndefine FPE_FLTUND FPE_FLTUND
// unknowndefine FPE_FLTRES FPE_FLTRES
// unknowndefine FPE_FLTINV FPE_FLTINV
// unknowndefine FPE_FLTSUB FPE_FLTSUB
// unknowndefine SEGV_MAPERR SEGV_MAPERR
// unknowndefine SEGV_ACCERR SEGV_ACCERR
// unknowndefine BUS_ADRALN BUS_ADRALN
// unknowndefine BUS_ADRERR BUS_ADRERR
// unknowndefine BUS_OBJERR BUS_OBJERR
// unknowndefine BUS_MCEERR_AR BUS_MCEERR_AR
// unknowndefine BUS_MCEERR_AO BUS_MCEERR_AO
// unknowndefine TRAP_BRKPT TRAP_BRKPT
// unknowndefine TRAP_TRACE TRAP_TRACE
// unknowndefine CLD_EXITED CLD_EXITED
// unknowndefine CLD_KILLED CLD_KILLED
// unknowndefine CLD_DUMPED CLD_DUMPED
// unknowndefine CLD_TRAPPED CLD_TRAPPED
// unknowndefine CLD_STOPPED CLD_STOPPED
// unknowndefine CLD_CONTINUED CLD_CONTINUED
// unknowndefine POLL_IN POLL_IN
// unknowndefine POLL_OUT POLL_OUT
// unknowndefine POLL_MSG POLL_MSG
// unknowndefine POLL_ERR POLL_ERR
// unknowndefine POLL_PRI POLL_PRI
// unknowndefine POLL_HUP POLL_HUP
// unknowndefine __SIGEV_PAD_SIZE ((__SIGEV_MAX_SIZE / sizeof (int)) - 4)
// unknowndefine sigev_notify_function _sigev_un._sigev_thread._function
// unknowndefine sigev_notify_attributes _sigev_un._sigev_thread._attribute
// unknowndefine SIGEV_SIGNAL SIGEV_SIGNAL
// unknowndefine SIGEV_NONE SIGEV_NONE
// unknowndefine SIGEV_THREAD SIGEV_THREAD
// unknowndefine SIGEV_THREAD_ID SIGEV_THREAD_ID
// unknowndefine sa_handler __sigaction_handler.sa_handler
// unknowndefine sa_sigaction __sigaction_handler.sa_sigaction
// unknowndefine FP_XSTATE_MAGIC2_SIZE sizeof(FP_XSTATE_MAGIC2)
// unknowndefine NULL ((void *)0)
// unknowndefine SS_ONSTACK SS_ONSTACK
// unknowndefine SS_DISABLE SS_DISABLE
// unknowndefine REG_R8 REG_R8
// unknowndefine REG_R9 REG_R9
// unknowndefine REG_R10 REG_R10
// unknowndefine REG_R11 REG_R11
// unknowndefine REG_R12 REG_R12
// unknowndefine REG_R13 REG_R13
// unknowndefine REG_R14 REG_R14
// unknowndefine REG_R15 REG_R15
// unknowndefine REG_RDI REG_RDI
// unknowndefine REG_RSI REG_RSI
// unknowndefine REG_RBP REG_RBP
// unknowndefine REG_RBX REG_RBX
// unknowndefine REG_RDX REG_RDX
// unknowndefine REG_RAX REG_RAX
// unknowndefine REG_RCX REG_RCX
// unknowndefine REG_RSP REG_RSP
// unknowndefine REG_RIP REG_RIP
// unknowndefine REG_EFL REG_EFL
// unknowndefine REG_CSGSFS REG_CSGSFS
// unknowndefine REG_ERR REG_ERR
// unknowndefine REG_TRAPNO REG_TRAPNO
// unknowndefine REG_OLDMASK REG_OLDMASK
// unknowndefine REG_CR2 REG_CR2
// unknowndefine INT64_MIN (-__INT64_C(9223372036854775807)-1)
// unknowndefine INT64_MAX (__INT64_C(9223372036854775807))
// unknowndefine UINT64_MAX (__UINT64_C(18446744073709551615))
// unknowndefine INT_LEAST64_MIN (-__INT64_C(9223372036854775807)-1)
// unknowndefine INT_LEAST64_MAX (__INT64_C(9223372036854775807))
// unknowndefine UINT_LEAST64_MAX (__UINT64_C(18446744073709551615))
// unknowndefine INT_FAST64_MIN (-__INT64_C(9223372036854775807)-1)
// unknowndefine INT_FAST64_MAX (__INT64_C(9223372036854775807))
// unknowndefine UINT_FAST64_MAX (__UINT64_C(18446744073709551615))
// unknowndefine INTMAX_MIN (-__INT64_C(9223372036854775807)-1)
// unknowndefine INTMAX_MAX (__INT64_C(9223372036854775807))
// unknowndefine UINTMAX_MAX (__UINT64_C(18446744073709551615))
// unknowndefine NULL ((void *)0)
// unknowndefine NULL ((void *)0)
// unknowndefine SOCK_STREAM SOCK_STREAM
// unknowndefine SOCK_DGRAM SOCK_DGRAM
// unknowndefine SOCK_RAW SOCK_RAW
// unknowndefine SOCK_RDM SOCK_RDM
// unknowndefine SOCK_SEQPACKET SOCK_SEQPACKET
// unknowndefine SOCK_DCCP SOCK_DCCP
// unknowndefine SOCK_PACKET SOCK_PACKET
// unknowndefine SOCK_CLOEXEC SOCK_CLOEXEC
// unknowndefine SOCK_NONBLOCK SOCK_NONBLOCK
// unknowndefine __SOCKADDR_COMMON_SIZE (sizeof (unsigned short int))
// unknowndefine __ss_aligntype unsigned long int
// unknowndefine _SS_PADSIZE (_SS_SIZE - __SOCKADDR_COMMON_SIZE - sizeof (__ss_aligntype))
// unknowndefine MSG_OOB MSG_OOB
// unknowndefine MSG_PEEK MSG_PEEK
// unknowndefine MSG_DONTROUTE MSG_DONTROUTE
// unknowndefine MSG_TRYHARD MSG_DONTROUTE
// unknowndefine MSG_CTRUNC MSG_CTRUNC
// unknowndefine MSG_PROXY MSG_PROXY
// unknowndefine MSG_TRUNC MSG_TRUNC
// unknowndefine MSG_DONTWAIT MSG_DONTWAIT
// unknowndefine MSG_EOR MSG_EOR
// unknowndefine MSG_WAITALL MSG_WAITALL
// unknowndefine MSG_FIN MSG_FIN
// unknowndefine MSG_SYN MSG_SYN
// unknowndefine MSG_CONFIRM MSG_CONFIRM
// unknowndefine MSG_RST MSG_RST
// unknowndefine MSG_ERRQUEUE MSG_ERRQUEUE
// unknowndefine MSG_NOSIGNAL MSG_NOSIGNAL
// unknowndefine MSG_MORE MSG_MORE
// unknowndefine MSG_WAITFORONE MSG_WAITFORONE
// unknowndefine MSG_BATCH MSG_BATCH
// unknowndefine MSG_FASTOPEN MSG_FASTOPEN
// unknowndefine MSG_CMSG_CLOEXEC MSG_CMSG_CLOEXEC
// unknowndefine SCM_RIGHTS SCM_RIGHTS
// unknowndefine SCM_CREDENTIALS SCM_CREDENTIALS
// unknowndefine SHUT_RD SHUT_RD
// unknowndefine SHUT_WR SHUT_WR
// unknowndefine SHUT_RDWR SHUT_RDWR
// unknowndefine __SOCKADDR_ALLTYPES __SOCKADDR_ONETYPE (sockaddr) __SOCKADDR_ONETYPE (sockaddr_at) __SOCKADDR_ONETYPE (sockaddr_ax25) __SOCKADDR_ONETYPE (sockaddr_dl) __SOCKADDR_ONETYPE (sockaddr_eon) __SOCKADDR_ONETYPE (sockaddr_in) __SOCKADDR_ONETYPE (sockaddr_in6) __SOCKADDR_ONETYPE (sockaddr_inarp) __SOCKADDR_ONETYPE (sockaddr_ipx) __SOCKADDR_ONETYPE (sockaddr_iso) __SOCKADDR_ONETYPE (sockaddr_ns) __SOCKADDR_ONETYPE (sockaddr_un) __SOCKADDR_ONETYPE (sockaddr_x25)
// unknowndefine IP_RECVRETOPTS IP_RETOPTS
// unknowndefine SCM_SRCRT IPV6_RXSRCRT
// unknowndefine IPPROTO_IP IPPROTO_IP
// unknowndefine IPPROTO_ICMP IPPROTO_ICMP
// unknowndefine IPPROTO_IGMP IPPROTO_IGMP
// unknowndefine IPPROTO_IPIP IPPROTO_IPIP
// unknowndefine IPPROTO_TCP IPPROTO_TCP
// unknowndefine IPPROTO_EGP IPPROTO_EGP
// unknowndefine IPPROTO_PUP IPPROTO_PUP
// unknowndefine IPPROTO_UDP IPPROTO_UDP
// unknowndefine IPPROTO_IDP IPPROTO_IDP
// unknowndefine IPPROTO_TP IPPROTO_TP
// unknowndefine IPPROTO_DCCP IPPROTO_DCCP
// unknowndefine IPPROTO_IPV6 IPPROTO_IPV6
// unknowndefine IPPROTO_RSVP IPPROTO_RSVP
// unknowndefine IPPROTO_GRE IPPROTO_GRE
// unknowndefine IPPROTO_ESP IPPROTO_ESP
// unknowndefine IPPROTO_AH IPPROTO_AH
// unknowndefine IPPROTO_MTP IPPROTO_MTP
// unknowndefine IPPROTO_BEETPH IPPROTO_BEETPH
// unknowndefine IPPROTO_ENCAP IPPROTO_ENCAP
// unknowndefine IPPROTO_PIM IPPROTO_PIM
// unknowndefine IPPROTO_COMP IPPROTO_COMP
// unknowndefine IPPROTO_SCTP IPPROTO_SCTP
// unknowndefine IPPROTO_UDPLITE IPPROTO_UDPLITE
// unknowndefine IPPROTO_MPLS IPPROTO_MPLS
// unknowndefine IPPROTO_RAW IPPROTO_RAW
// unknowndefine IPPROTO_HOPOPTS IPPROTO_HOPOPTS
// unknowndefine IPPROTO_ROUTING IPPROTO_ROUTING
// unknowndefine IPPROTO_FRAGMENT IPPROTO_FRAGMENT
// unknowndefine IPPROTO_ICMPV6 IPPROTO_ICMPV6
// unknowndefine IPPROTO_NONE IPPROTO_NONE
// unknowndefine IPPROTO_DSTOPTS IPPROTO_DSTOPTS
// unknowndefine IPPROTO_MH IPPROTO_MH
// unknowndefine INADDR_ANY ((in_addr_t) 0x00000000)
// unknowndefine INADDR_BROADCAST ((in_addr_t) 0xffffffff)
// unknowndefine INADDR_NONE ((in_addr_t) 0xffffffff)
// unknowndefine INADDR_LOOPBACK ((in_addr_t) 0x7f000001)
// unknowndefine INADDR_UNSPEC_GROUP ((in_addr_t) 0xe0000000)
// unknowndefine INADDR_ALLHOSTS_GROUP ((in_addr_t) 0xe0000001)
// unknowndefine INADDR_ALLRTRS_GROUP ((in_addr_t) 0xe0000002)
// unknowndefine INADDR_MAX_LOCAL_GROUP ((in_addr_t) 0xe00000ff)
// unknowndefine s6_addr __in6_u.__u6_addr8
// unknowndefine s6_addr16 __in6_u.__u6_addr16
// unknowndefine s6_addr32 __in6_u.__u6_addr32
// unknowndefine IN6ADDR_ANY_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }
// unknowndefine IN6ADDR_LOOPBACK_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }
// unknowndefine __kernel_old_uid_t __kernel_old_uid_t
// unknowndefine __kernel_old_dev_t __kernel_old_dev_t
// unknowndefine __aligned_u64 __u64 __attribute__((aligned(8)))
// unknowndefine __aligned_be64 __be64 __attribute__((aligned(8)))
// unknowndefine __aligned_le64 __le64 __attribute__((aligned(8)))
// unknowndefine arp_hrd ea_hdr.ar_hrd
// unknowndefine arp_pro ea_hdr.ar_pro
// unknowndefine arp_hln ea_hdr.ar_hln
// unknowndefine arp_pln ea_hdr.ar_pln
// unknowndefine arp_op ea_hdr.ar_op
// unknowndefine TCGETS2 _IOR('T', 0x2A, struct termios2)
// unknowndefine TCSETS2 _IOW('T', 0x2B, struct termios2)
// unknowndefine TCSETSW2 _IOW('T', 0x2C, struct termios2)
// unknowndefine TCSETSF2 _IOW('T', 0x2D, struct termios2)
// unknowndefine TIOCGPTN _IOR('T', 0x30, unsigned int)
// unknowndefine TIOCSPTLCK _IOW('T', 0x31, int)
// unknowndefine TIOCGDEV _IOR('T', 0x32, unsigned int)
// unknowndefine TIOCSIG _IOW('T', 0x36, int)
// unknowndefine TIOCGPKT _IOR('T', 0x38, int)
// unknowndefine TIOCGPTLCK _IOR('T', 0x39, int)
// unknowndefine TIOCGEXCL _IOR('T', 0x40, int)
// unknowndefine TTYDEF_IFLAG (BRKINT | ISTRIP | ICRNL | IMAXBEL | IXON | IXANY)
// unknowndefine TTYDEF_OFLAG (OPOST | ONLCR | XTABS)
// unknowndefine TTYDEF_LFLAG (ECHO | ICANON | ISIG | IEXTEN | ECHOE|ECHOKE|ECHOCTL)
// unknowndefine TTYDEF_CFLAG (CREAD | CS7 | PARENB | HUPCL)
// unknowndefine TTYDEF_SPEED (B9600)
// unknowndefine CEOF CTRL('d')
// unknowndefine CEOL '\0'
// unknowndefine CINTR CTRL('c')
// unknowndefine CSTATUS '\0'
// unknowndefine CKILL CTRL('u')
// unknowndefine CSUSP CTRL('z')
// unknowndefine CDSUSP CTRL('y')
// unknowndefine CSTART CTRL('q')
// unknowndefine CSTOP CTRL('s')
// unknowndefine CLNEXT CTRL('v')
// unknowndefine CDISCARD CTRL('o')
// unknowndefine CWERASE CTRL('w')
// unknowndefine CREPRINT CTRL('r')
// unknowndefine CEOT CEOF
// unknowndefine CBRK CEOL
// unknowndefine CRPRNT CREPRINT
// unknowndefine CFLUSH CDISCARD
// unknowndefine _IOT_termios _IOT (_IOTS (cflag_t), 4, _IOTS (cc_t), NCCS, _IOTS (speed_t), 2)
// unknowndefine EPOLL_CLOEXEC EPOLL_CLOEXEC
// unknowndefine __EPOLL_PACKED __attribute__ ((__packed__))
// unknowndefine EPOLLIN EPOLLIN
// unknowndefine EPOLLPRI EPOLLPRI
// unknowndefine EPOLLOUT EPOLLOUT
// unknowndefine EPOLLRDNORM EPOLLRDNORM
// unknowndefine EPOLLRDBAND EPOLLRDBAND
// unknowndefine EPOLLWRNORM EPOLLWRNORM
// unknowndefine EPOLLWRBAND EPOLLWRBAND
// unknowndefine EPOLLMSG EPOLLMSG
// unknowndefine EPOLLERR EPOLLERR
// unknowndefine EPOLLHUP EPOLLHUP
// unknowndefine EPOLLRDHUP EPOLLRDHUP
// unknowndefine EPOLLEXCLUSIVE EPOLLEXCLUSIVE
// unknowndefine EPOLLWAKEUP EPOLLWAKEUP
// unknowndefine EPOLLONESHOT EPOLLONESHOT
// unknowndefine EPOLLET EPOLLET
// unknowndefine NULL ((void *)0)
// unknowndefine MAP_FAILED ((void *) -1)
// unknowndefine PR_SET_PTRACER_ANY ((unsigned long)-1)
// unknowndefine PT_TRACE_ME PTRACE_TRACEME
// unknowndefine PT_READ_I PTRACE_PEEKTEXT
// unknowndefine PT_READ_D PTRACE_PEEKDATA
// unknowndefine PT_READ_U PTRACE_PEEKUSER
// unknowndefine PT_WRITE_I PTRACE_POKETEXT
// unknowndefine PT_WRITE_D PTRACE_POKEDATA
// unknowndefine PT_WRITE_U PTRACE_POKEUSER
// unknowndefine PT_CONTINUE PTRACE_CONT
// unknowndefine PT_KILL PTRACE_KILL
// unknowndefine PT_STEP PTRACE_SINGLESTEP
// unknowndefine PT_GETREGS PTRACE_GETREGS
// unknowndefine PT_SETREGS PTRACE_SETREGS
// unknowndefine PT_GETFPREGS PTRACE_GETFPREGS
// unknowndefine PT_SETFPREGS PTRACE_SETFPREGS
// unknowndefine PT_ATTACH PTRACE_ATTACH
// unknowndefine PT_DETACH PTRACE_DETACH
// unknowndefine PT_GETFPXREGS PTRACE_GETFPXREGS
// unknowndefine PT_SETFPXREGS PTRACE_SETFPXREGS
// unknowndefine PT_SYSCALL PTRACE_SYSCALL
// unknowndefine PT_SETOPTIONS PTRACE_SETOPTIONS
// unknowndefine PT_GETEVENTMSG PTRACE_GETEVENTMSG
// unknowndefine PT_GETSIGINFO PTRACE_GETSIGINFO
// unknowndefine PT_SETSIGINFO PTRACE_SETSIGINFO
// unknowndefine PTRACE_GETREGSET PTRACE_GETREGSET
// unknowndefine PTRACE_SETREGSET PTRACE_SETREGSET
// unknowndefine PTRACE_SEIZE PTRACE_SEIZE
// unknowndefine PTRACE_INTERRUPT PTRACE_INTERRUPT
// unknowndefine PTRACE_LISTEN PTRACE_LISTEN
// unknowndefine PTRACE_PEEKSIGINFO PTRACE_PEEKSIGINFO
// unknowndefine PTRACE_GETSIGMASK PTRACE_GETSIGMASK
// unknowndefine PTRACE_SETSIGMASK PTRACE_SETSIGMASK
// unknowndefine PTRACE_SECCOMP_GET_FILTER PTRACE_SECCOMP_GET_FILTER
// unknowndefine RLIMIT_CPU RLIMIT_CPU
// unknowndefine RLIMIT_FSIZE RLIMIT_FSIZE
// unknowndefine RLIMIT_DATA RLIMIT_DATA
// unknowndefine RLIMIT_STACK RLIMIT_STACK
// unknowndefine RLIMIT_CORE RLIMIT_CORE
// unknowndefine RLIMIT_RSS __RLIMIT_RSS
// unknowndefine RLIMIT_NOFILE RLIMIT_NOFILE
// unknowndefine RLIMIT_OFILE __RLIMIT_OFILE
// unknowndefine RLIMIT_AS RLIMIT_AS
// unknowndefine RLIMIT_NPROC __RLIMIT_NPROC
// unknowndefine RLIMIT_MEMLOCK __RLIMIT_MEMLOCK
// unknowndefine RLIMIT_LOCKS __RLIMIT_LOCKS
// unknowndefine RLIMIT_SIGPENDING __RLIMIT_SIGPENDING
// unknowndefine RLIMIT_MSGQUEUE __RLIMIT_MSGQUEUE
// unknowndefine RLIMIT_NICE __RLIMIT_NICE
// unknowndefine RLIMIT_RTPRIO __RLIMIT_RTPRIO
// unknowndefine RLIMIT_RTTIME __RLIMIT_RTTIME
// unknowndefine RLIMIT_NLIMITS __RLIMIT_NLIMITS
// unknowndefine RLIM_NLIMITS __RLIM_NLIMITS
// unknowndefine RUSAGE_SELF RUSAGE_SELF
// unknowndefine RUSAGE_CHILDREN RUSAGE_CHILDREN
// unknowndefine RUSAGE_THREAD RUSAGE_THREAD
// unknowndefine RUSAGE_LWP RUSAGE_THREAD
// unknowndefine PRIO_PROCESS PRIO_PROCESS
// unknowndefine PRIO_PGRP PRIO_PGRP
// unknowndefine PRIO_USER PRIO_USER
// unknowndefine ITIMER_REAL ITIMER_REAL
// unknowndefine ITIMER_VIRTUAL ITIMER_VIRTUAL
// unknowndefine ITIMER_PROF ITIMER_PROF
// unknowndefine NULL ((void *)0)
// unknowndefine __STRING_INLINE __extern_inline
// unknowndefine NULL ((void *)0)
// unknowndefine HOST_TEXT_START_ADDR (u.start_code)
// unknowndefine HOST_STACK_END_ADDR (u.start_stack + u.u_ssize * NBPG)
// unknowndefine NULL ((void *)0)
// unknowndefine CLOCKS_PER_SEC ((clock_t) 1000000)
// unknowndefine _POSIX_VDISABLE '\0'
// unknowndefine NULL ((void *)0)
// unknowndefine _PC_LINK_MAX _PC_LINK_MAX
// unknowndefine _PC_MAX_CANON _PC_MAX_CANON
// unknowndefine _PC_MAX_INPUT _PC_MAX_INPUT
// unknowndefine _PC_NAME_MAX _PC_NAME_MAX
// unknowndefine _PC_PATH_MAX _PC_PATH_MAX
// unknowndefine _PC_PIPE_BUF _PC_PIPE_BUF
// unknowndefine _PC_CHOWN_RESTRICTED _PC_CHOWN_RESTRICTED
// unknowndefine _PC_NO_TRUNC _PC_NO_TRUNC
// unknowndefine _PC_VDISABLE _PC_VDISABLE
// unknowndefine _PC_SYNC_IO _PC_SYNC_IO
// unknowndefine _PC_ASYNC_IO _PC_ASYNC_IO
// unknowndefine _PC_PRIO_IO _PC_PRIO_IO
// unknowndefine _PC_SOCK_MAXBUF _PC_SOCK_MAXBUF
// unknowndefine _PC_FILESIZEBITS _PC_FILESIZEBITS
// unknowndefine _PC_REC_INCR_XFER_SIZE _PC_REC_INCR_XFER_SIZE
// unknowndefine _PC_REC_MAX_XFER_SIZE _PC_REC_MAX_XFER_SIZE
// unknowndefine _PC_REC_MIN_XFER_SIZE _PC_REC_MIN_XFER_SIZE
// unknowndefine _PC_REC_XFER_ALIGN _PC_REC_XFER_ALIGN
// unknowndefine _PC_ALLOC_SIZE_MIN _PC_ALLOC_SIZE_MIN
// unknowndefine _PC_SYMLINK_MAX _PC_SYMLINK_MAX
// unknowndefine _PC_2_SYMLINKS _PC_2_SYMLINKS
// unknowndefine _SC_ARG_MAX _SC_ARG_MAX
// unknowndefine _SC_CHILD_MAX _SC_CHILD_MAX
// unknowndefine _SC_CLK_TCK _SC_CLK_TCK
// unknowndefine _SC_NGROUPS_MAX _SC_NGROUPS_MAX
// unknowndefine _SC_OPEN_MAX _SC_OPEN_MAX
// unknowndefine _SC_STREAM_MAX _SC_STREAM_MAX
// unknowndefine _SC_TZNAME_MAX _SC_TZNAME_MAX
// unknowndefine _SC_JOB_CONTROL _SC_JOB_CONTROL
// unknowndefine _SC_SAVED_IDS _SC_SAVED_IDS
// unknowndefine _SC_REALTIME_SIGNALS _SC_REALTIME_SIGNALS
// unknowndefine _SC_PRIORITY_SCHEDULING _SC_PRIORITY_SCHEDULING
// unknowndefine _SC_TIMERS _SC_TIMERS
// unknowndefine _SC_ASYNCHRONOUS_IO _SC_ASYNCHRONOUS_IO
// unknowndefine _SC_PRIORITIZED_IO _SC_PRIORITIZED_IO
// unknowndefine _SC_SYNCHRONIZED_IO _SC_SYNCHRONIZED_IO
// unknowndefine _SC_FSYNC _SC_FSYNC
// unknowndefine _SC_MAPPED_FILES _SC_MAPPED_FILES
// unknowndefine _SC_MEMLOCK _SC_MEMLOCK
// unknowndefine _SC_MEMLOCK_RANGE _SC_MEMLOCK_RANGE
// unknowndefine _SC_MEMORY_PROTECTION _SC_MEMORY_PROTECTION
// unknowndefine _SC_MESSAGE_PASSING _SC_MESSAGE_PASSING
// unknowndefine _SC_SEMAPHORES _SC_SEMAPHORES
// unknowndefine _SC_SHARED_MEMORY_OBJECTS _SC_SHARED_MEMORY_OBJECTS
// unknowndefine _SC_AIO_LISTIO_MAX _SC_AIO_LISTIO_MAX
// unknowndefine _SC_AIO_MAX _SC_AIO_MAX
// unknowndefine _SC_AIO_PRIO_DELTA_MAX _SC_AIO_PRIO_DELTA_MAX
// unknowndefine _SC_DELAYTIMER_MAX _SC_DELAYTIMER_MAX
// unknowndefine _SC_MQ_OPEN_MAX _SC_MQ_OPEN_MAX
// unknowndefine _SC_MQ_PRIO_MAX _SC_MQ_PRIO_MAX
// unknowndefine _SC_VERSION _SC_VERSION
// unknowndefine _SC_PAGESIZE _SC_PAGESIZE
// unknowndefine _SC_PAGE_SIZE _SC_PAGESIZE
// unknowndefine _SC_RTSIG_MAX _SC_RTSIG_MAX
// unknowndefine _SC_SEM_NSEMS_MAX _SC_SEM_NSEMS_MAX
// unknowndefine _SC_SEM_VALUE_MAX _SC_SEM_VALUE_MAX
// unknowndefine _SC_SIGQUEUE_MAX _SC_SIGQUEUE_MAX
// unknowndefine _SC_TIMER_MAX _SC_TIMER_MAX
// unknowndefine _SC_BC_BASE_MAX _SC_BC_BASE_MAX
// unknowndefine _SC_BC_DIM_MAX _SC_BC_DIM_MAX
// unknowndefine _SC_BC_SCALE_MAX _SC_BC_SCALE_MAX
// unknowndefine _SC_BC_STRING_MAX _SC_BC_STRING_MAX
// unknowndefine _SC_COLL_WEIGHTS_MAX _SC_COLL_WEIGHTS_MAX
// unknowndefine _SC_EQUIV_CLASS_MAX _SC_EQUIV_CLASS_MAX
// unknowndefine _SC_EXPR_NEST_MAX _SC_EXPR_NEST_MAX
// unknowndefine _SC_LINE_MAX _SC_LINE_MAX
// unknowndefine _SC_RE_DUP_MAX _SC_RE_DUP_MAX
// unknowndefine _SC_CHARCLASS_NAME_MAX _SC_CHARCLASS_NAME_MAX
// unknowndefine _SC_2_VERSION _SC_2_VERSION
// unknowndefine _SC_2_C_BIND _SC_2_C_BIND
// unknowndefine _SC_2_C_DEV _SC_2_C_DEV
// unknowndefine _SC_2_FORT_DEV _SC_2_FORT_DEV
// unknowndefine _SC_2_FORT_RUN _SC_2_FORT_RUN
// unknowndefine _SC_2_SW_DEV _SC_2_SW_DEV
// unknowndefine _SC_2_LOCALEDEF _SC_2_LOCALEDEF
// unknowndefine _SC_PII _SC_PII
// unknowndefine _SC_PII_XTI _SC_PII_XTI
// unknowndefine _SC_PII_SOCKET _SC_PII_SOCKET
// unknowndefine _SC_PII_INTERNET _SC_PII_INTERNET
// unknowndefine _SC_PII_OSI _SC_PII_OSI
// unknowndefine _SC_POLL _SC_POLL
// unknowndefine _SC_SELECT _SC_SELECT
// unknowndefine _SC_UIO_MAXIOV _SC_UIO_MAXIOV
// unknowndefine _SC_IOV_MAX _SC_IOV_MAX
// unknowndefine _SC_PII_INTERNET_STREAM _SC_PII_INTERNET_STREAM
// unknowndefine _SC_PII_INTERNET_DGRAM _SC_PII_INTERNET_DGRAM
// unknowndefine _SC_PII_OSI_COTS _SC_PII_OSI_COTS
// unknowndefine _SC_PII_OSI_CLTS _SC_PII_OSI_CLTS
// unknowndefine _SC_PII_OSI_M _SC_PII_OSI_M
// unknowndefine _SC_T_IOV_MAX _SC_T_IOV_MAX
// unknowndefine _SC_THREADS _SC_THREADS
// unknowndefine _SC_THREAD_SAFE_FUNCTIONS _SC_THREAD_SAFE_FUNCTIONS
// unknowndefine _SC_GETGR_R_SIZE_MAX _SC_GETGR_R_SIZE_MAX
// unknowndefine _SC_GETPW_R_SIZE_MAX _SC_GETPW_R_SIZE_MAX
// unknowndefine _SC_LOGIN_NAME_MAX _SC_LOGIN_NAME_MAX
// unknowndefine _SC_TTY_NAME_MAX _SC_TTY_NAME_MAX
// unknowndefine _SC_THREAD_DESTRUCTOR_ITERATIONS _SC_THREAD_DESTRUCTOR_ITERATIONS
// unknowndefine _SC_THREAD_KEYS_MAX _SC_THREAD_KEYS_MAX
// unknowndefine _SC_THREAD_STACK_MIN _SC_THREAD_STACK_MIN
// unknowndefine _SC_THREAD_THREADS_MAX _SC_THREAD_THREADS_MAX
// unknowndefine _SC_THREAD_ATTR_STACKADDR _SC_THREAD_ATTR_STACKADDR
// unknowndefine _SC_THREAD_ATTR_STACKSIZE _SC_THREAD_ATTR_STACKSIZE
// unknowndefine _SC_THREAD_PRIORITY_SCHEDULING _SC_THREAD_PRIORITY_SCHEDULING
// unknowndefine _SC_THREAD_PRIO_INHERIT _SC_THREAD_PRIO_INHERIT
// unknowndefine _SC_THREAD_PRIO_PROTECT _SC_THREAD_PRIO_PROTECT
// unknowndefine _SC_THREAD_PROCESS_SHARED _SC_THREAD_PROCESS_SHARED
// unknowndefine _SC_NPROCESSORS_CONF _SC_NPROCESSORS_CONF
// unknowndefine _SC_NPROCESSORS_ONLN _SC_NPROCESSORS_ONLN
// unknowndefine _SC_PHYS_PAGES _SC_PHYS_PAGES
// unknowndefine _SC_AVPHYS_PAGES _SC_AVPHYS_PAGES
// unknowndefine _SC_ATEXIT_MAX _SC_ATEXIT_MAX
// unknowndefine _SC_PASS_MAX _SC_PASS_MAX
// unknowndefine _SC_XOPEN_VERSION _SC_XOPEN_VERSION
// unknowndefine _SC_XOPEN_XCU_VERSION _SC_XOPEN_XCU_VERSION
// unknowndefine _SC_XOPEN_UNIX _SC_XOPEN_UNIX
// unknowndefine _SC_XOPEN_CRYPT _SC_XOPEN_CRYPT
// unknowndefine _SC_XOPEN_ENH_I18N _SC_XOPEN_ENH_I18N
// unknowndefine _SC_XOPEN_SHM _SC_XOPEN_SHM
// unknowndefine _SC_2_CHAR_TERM _SC_2_CHAR_TERM
// unknowndefine _SC_2_C_VERSION _SC_2_C_VERSION
// unknowndefine _SC_2_UPE _SC_2_UPE
// unknowndefine _SC_XOPEN_XPG2 _SC_XOPEN_XPG2
// unknowndefine _SC_XOPEN_XPG3 _SC_XOPEN_XPG3
// unknowndefine _SC_XOPEN_XPG4 _SC_XOPEN_XPG4
// unknowndefine _SC_CHAR_BIT _SC_CHAR_BIT
// unknowndefine _SC_CHAR_MAX _SC_CHAR_MAX
// unknowndefine _SC_CHAR_MIN _SC_CHAR_MIN
// unknowndefine _SC_INT_MAX _SC_INT_MAX
// unknowndefine _SC_INT_MIN _SC_INT_MIN
// unknowndefine _SC_LONG_BIT _SC_LONG_BIT
// unknowndefine _SC_WORD_BIT _SC_WORD_BIT
// unknowndefine _SC_MB_LEN_MAX _SC_MB_LEN_MAX
// unknowndefine _SC_NZERO _SC_NZERO
// unknowndefine _SC_SSIZE_MAX _SC_SSIZE_MAX
// unknowndefine _SC_SCHAR_MAX _SC_SCHAR_MAX
// unknowndefine _SC_SCHAR_MIN _SC_SCHAR_MIN
// unknowndefine _SC_SHRT_MAX _SC_SHRT_MAX
// unknowndefine _SC_SHRT_MIN _SC_SHRT_MIN
// unknowndefine _SC_UCHAR_MAX _SC_UCHAR_MAX
// unknowndefine _SC_UINT_MAX _SC_UINT_MAX
// unknowndefine _SC_ULONG_MAX _SC_ULONG_MAX
// unknowndefine _SC_USHRT_MAX _SC_USHRT_MAX
// unknowndefine _SC_NL_ARGMAX _SC_NL_ARGMAX
// unknowndefine _SC_NL_LANGMAX _SC_NL_LANGMAX
// unknowndefine _SC_NL_MSGMAX _SC_NL_MSGMAX
// unknowndefine _SC_NL_NMAX _SC_NL_NMAX
// unknowndefine _SC_NL_SETMAX _SC_NL_SETMAX
// unknowndefine _SC_NL_TEXTMAX _SC_NL_TEXTMAX
// unknowndefine _SC_XBS5_ILP32_OFF32 _SC_XBS5_ILP32_OFF32
// unknowndefine _SC_XBS5_ILP32_OFFBIG _SC_XBS5_ILP32_OFFBIG
// unknowndefine _SC_XBS5_LP64_OFF64 _SC_XBS5_LP64_OFF64
// unknowndefine _SC_XBS5_LPBIG_OFFBIG _SC_XBS5_LPBIG_OFFBIG
// unknowndefine _SC_XOPEN_LEGACY _SC_XOPEN_LEGACY
// unknowndefine _SC_XOPEN_REALTIME _SC_XOPEN_REALTIME
// unknowndefine _SC_XOPEN_REALTIME_THREADS _SC_XOPEN_REALTIME_THREADS
// unknowndefine _SC_ADVISORY_INFO _SC_ADVISORY_INFO
// unknowndefine _SC_BARRIERS _SC_BARRIERS
// unknowndefine _SC_BASE _SC_BASE
// unknowndefine _SC_C_LANG_SUPPORT _SC_C_LANG_SUPPORT
// unknowndefine _SC_C_LANG_SUPPORT_R _SC_C_LANG_SUPPORT_R
// unknowndefine _SC_CLOCK_SELECTION _SC_CLOCK_SELECTION
// unknowndefine _SC_CPUTIME _SC_CPUTIME
// unknowndefine _SC_THREAD_CPUTIME _SC_THREAD_CPUTIME
// unknowndefine _SC_DEVICE_IO _SC_DEVICE_IO
// unknowndefine _SC_DEVICE_SPECIFIC _SC_DEVICE_SPECIFIC
// unknowndefine _SC_DEVICE_SPECIFIC_R _SC_DEVICE_SPECIFIC_R
// unknowndefine _SC_FD_MGMT _SC_FD_MGMT
// unknowndefine _SC_FIFO _SC_FIFO
// unknowndefine _SC_PIPE _SC_PIPE
// unknowndefine _SC_FILE_ATTRIBUTES _SC_FILE_ATTRIBUTES
// unknowndefine _SC_FILE_LOCKING _SC_FILE_LOCKING
// unknowndefine _SC_FILE_SYSTEM _SC_FILE_SYSTEM
// unknowndefine _SC_MONOTONIC_CLOCK _SC_MONOTONIC_CLOCK
// unknowndefine _SC_MULTI_PROCESS _SC_MULTI_PROCESS
// unknowndefine _SC_SINGLE_PROCESS _SC_SINGLE_PROCESS
// unknowndefine _SC_NETWORKING _SC_NETWORKING
// unknowndefine _SC_READER_WRITER_LOCKS _SC_READER_WRITER_LOCKS
// unknowndefine _SC_SPIN_LOCKS _SC_SPIN_LOCKS
// unknowndefine _SC_REGEXP _SC_REGEXP
// unknowndefine _SC_REGEX_VERSION _SC_REGEX_VERSION
// unknowndefine _SC_SHELL _SC_SHELL
// unknowndefine _SC_SIGNALS _SC_SIGNALS
// unknowndefine _SC_SPAWN _SC_SPAWN
// unknowndefine _SC_SPORADIC_SERVER _SC_SPORADIC_SERVER
// unknowndefine _SC_THREAD_SPORADIC_SERVER _SC_THREAD_SPORADIC_SERVER
// unknowndefine _SC_SYSTEM_DATABASE _SC_SYSTEM_DATABASE
// unknowndefine _SC_SYSTEM_DATABASE_R _SC_SYSTEM_DATABASE_R
// unknowndefine _SC_TIMEOUTS _SC_TIMEOUTS
// unknowndefine _SC_TYPED_MEMORY_OBJECTS _SC_TYPED_MEMORY_OBJECTS
// unknowndefine _SC_USER_GROUPS _SC_USER_GROUPS
// unknowndefine _SC_USER_GROUPS_R _SC_USER_GROUPS_R
// unknowndefine _SC_2_PBS _SC_2_PBS
// unknowndefine _SC_2_PBS_ACCOUNTING _SC_2_PBS_ACCOUNTING
// unknowndefine _SC_2_PBS_LOCATE _SC_2_PBS_LOCATE
// unknowndefine _SC_2_PBS_MESSAGE _SC_2_PBS_MESSAGE
// unknowndefine _SC_2_PBS_TRACK _SC_2_PBS_TRACK
// unknowndefine _SC_SYMLOOP_MAX _SC_SYMLOOP_MAX
// unknowndefine _SC_STREAMS _SC_STREAMS
// unknowndefine _SC_2_PBS_CHECKPOINT _SC_2_PBS_CHECKPOINT
// unknowndefine _SC_V6_ILP32_OFF32 _SC_V6_ILP32_OFF32
// unknowndefine _SC_V6_ILP32_OFFBIG _SC_V6_ILP32_OFFBIG
// unknowndefine _SC_V6_LP64_OFF64 _SC_V6_LP64_OFF64
// unknowndefine _SC_V6_LPBIG_OFFBIG _SC_V6_LPBIG_OFFBIG
// unknowndefine _SC_HOST_NAME_MAX _SC_HOST_NAME_MAX
// unknowndefine _SC_TRACE _SC_TRACE
// unknowndefine _SC_TRACE_EVENT_FILTER _SC_TRACE_EVENT_FILTER
// unknowndefine _SC_TRACE_INHERIT _SC_TRACE_INHERIT
// unknowndefine _SC_TRACE_LOG _SC_TRACE_LOG
// unknowndefine _SC_LEVEL1_ICACHE_SIZE _SC_LEVEL1_ICACHE_SIZE
// unknowndefine _SC_LEVEL1_ICACHE_ASSOC _SC_LEVEL1_ICACHE_ASSOC
// unknowndefine _SC_LEVEL1_ICACHE_LINESIZE _SC_LEVEL1_ICACHE_LINESIZE
// unknowndefine _SC_LEVEL1_DCACHE_SIZE _SC_LEVEL1_DCACHE_SIZE
// unknowndefine _SC_LEVEL1_DCACHE_ASSOC _SC_LEVEL1_DCACHE_ASSOC
// unknowndefine _SC_LEVEL1_DCACHE_LINESIZE _SC_LEVEL1_DCACHE_LINESIZE
// unknowndefine _SC_LEVEL2_CACHE_SIZE _SC_LEVEL2_CACHE_SIZE
// unknowndefine _SC_LEVEL2_CACHE_ASSOC _SC_LEVEL2_CACHE_ASSOC
// unknowndefine _SC_LEVEL2_CACHE_LINESIZE _SC_LEVEL2_CACHE_LINESIZE
// unknowndefine _SC_LEVEL3_CACHE_SIZE _SC_LEVEL3_CACHE_SIZE
// unknowndefine _SC_LEVEL3_CACHE_ASSOC _SC_LEVEL3_CACHE_ASSOC
// unknowndefine _SC_LEVEL3_CACHE_LINESIZE _SC_LEVEL3_CACHE_LINESIZE
// unknowndefine _SC_LEVEL4_CACHE_SIZE _SC_LEVEL4_CACHE_SIZE
// unknowndefine _SC_LEVEL4_CACHE_ASSOC _SC_LEVEL4_CACHE_ASSOC
// unknowndefine _SC_LEVEL4_CACHE_LINESIZE _SC_LEVEL4_CACHE_LINESIZE
// unknowndefine _SC_IPV6 _SC_IPV6
// unknowndefine _SC_RAW_SOCKETS _SC_RAW_SOCKETS
// unknowndefine _SC_V7_ILP32_OFF32 _SC_V7_ILP32_OFF32
// unknowndefine _SC_V7_ILP32_OFFBIG _SC_V7_ILP32_OFFBIG
// unknowndefine _SC_V7_LP64_OFF64 _SC_V7_LP64_OFF64
// unknowndefine _SC_V7_LPBIG_OFFBIG _SC_V7_LPBIG_OFFBIG
// unknowndefine _SC_SS_REPL_MAX _SC_SS_REPL_MAX
// unknowndefine _SC_TRACE_EVENT_NAME_MAX _SC_TRACE_EVENT_NAME_MAX
// unknowndefine _SC_TRACE_NAME_MAX _SC_TRACE_NAME_MAX
// unknowndefine _SC_TRACE_SYS_MAX _SC_TRACE_SYS_MAX
// unknowndefine _SC_TRACE_USER_EVENT_MAX _SC_TRACE_USER_EVENT_MAX
// unknowndefine _SC_XOPEN_STREAMS _SC_XOPEN_STREAMS
// unknowndefine _SC_THREAD_ROBUST_PRIO_INHERIT _SC_THREAD_ROBUST_PRIO_INHERIT
// unknowndefine _SC_THREAD_ROBUST_PRIO_PROTECT _SC_THREAD_ROBUST_PRIO_PROTECT
// unknowndefine _CS_PATH _CS_PATH
// unknowndefine _CS_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS
// unknowndefine _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS
// unknowndefine _CS_GNU_LIBC_VERSION _CS_GNU_LIBC_VERSION
// unknowndefine _CS_GNU_LIBPTHREAD_VERSION _CS_GNU_LIBPTHREAD_VERSION
// unknowndefine _CS_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS
// unknowndefine _CS_POSIX_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS
// unknowndefine _CS_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS
// unknowndefine _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS
// unknowndefine _CS_LFS_CFLAGS _CS_LFS_CFLAGS
// unknowndefine _CS_LFS_LDFLAGS _CS_LFS_LDFLAGS
// unknowndefine _CS_LFS_LIBS _CS_LFS_LIBS
// unknowndefine _CS_LFS_LINTFLAGS _CS_LFS_LINTFLAGS
// unknowndefine _CS_LFS64_CFLAGS _CS_LFS64_CFLAGS
// unknowndefine _CS_LFS64_LDFLAGS _CS_LFS64_LDFLAGS
// unknowndefine _CS_LFS64_LIBS _CS_LFS64_LIBS
// unknowndefine _CS_LFS64_LINTFLAGS _CS_LFS64_LINTFLAGS
// unknowndefine _CS_XBS5_ILP32_OFF32_CFLAGS _CS_XBS5_ILP32_OFF32_CFLAGS
// unknowndefine _CS_XBS5_ILP32_OFF32_LDFLAGS _CS_XBS5_ILP32_OFF32_LDFLAGS
// unknowndefine _CS_XBS5_ILP32_OFF32_LIBS _CS_XBS5_ILP32_OFF32_LIBS
// unknowndefine _CS_XBS5_ILP32_OFF32_LINTFLAGS _CS_XBS5_ILP32_OFF32_LINTFLAGS
// unknowndefine _CS_XBS5_ILP32_OFFBIG_CFLAGS _CS_XBS5_ILP32_OFFBIG_CFLAGS
// unknowndefine _CS_XBS5_ILP32_OFFBIG_LDFLAGS _CS_XBS5_ILP32_OFFBIG_LDFLAGS
// unknowndefine _CS_XBS5_ILP32_OFFBIG_LIBS _CS_XBS5_ILP32_OFFBIG_LIBS
// unknowndefine _CS_XBS5_ILP32_OFFBIG_LINTFLAGS _CS_XBS5_ILP32_OFFBIG_LINTFLAGS
// unknowndefine _CS_XBS5_LP64_OFF64_CFLAGS _CS_XBS5_LP64_OFF64_CFLAGS
// unknowndefine _CS_XBS5_LP64_OFF64_LDFLAGS _CS_XBS5_LP64_OFF64_LDFLAGS
// unknowndefine _CS_XBS5_LP64_OFF64_LIBS _CS_XBS5_LP64_OFF64_LIBS
// unknowndefine _CS_XBS5_LP64_OFF64_LINTFLAGS _CS_XBS5_LP64_OFF64_LINTFLAGS
// unknowndefine _CS_XBS5_LPBIG_OFFBIG_CFLAGS _CS_XBS5_LPBIG_OFFBIG_CFLAGS
// unknowndefine _CS_XBS5_LPBIG_OFFBIG_LDFLAGS _CS_XBS5_LPBIG_OFFBIG_LDFLAGS
// unknowndefine _CS_XBS5_LPBIG_OFFBIG_LIBS _CS_XBS5_LPBIG_OFFBIG_LIBS
// unknowndefine _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
// unknowndefine _CS_POSIX_V6_ILP32_OFF32_CFLAGS _CS_POSIX_V6_ILP32_OFF32_CFLAGS
// unknowndefine _CS_POSIX_V6_ILP32_OFF32_LDFLAGS _CS_POSIX_V6_ILP32_OFF32_LDFLAGS
// unknowndefine _CS_POSIX_V6_ILP32_OFF32_LIBS _CS_POSIX_V6_ILP32_OFF32_LIBS
// unknowndefine _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
// unknowndefine _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
// unknowndefine _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
// unknowndefine _CS_POSIX_V6_ILP32_OFFBIG_LIBS _CS_POSIX_V6_ILP32_OFFBIG_LIBS
// unknowndefine _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
// unknowndefine _CS_POSIX_V6_LP64_OFF64_CFLAGS _CS_POSIX_V6_LP64_OFF64_CFLAGS
// unknowndefine _CS_POSIX_V6_LP64_OFF64_LDFLAGS _CS_POSIX_V6_LP64_OFF64_LDFLAGS
// unknowndefine _CS_POSIX_V6_LP64_OFF64_LIBS _CS_POSIX_V6_LP64_OFF64_LIBS
// unknowndefine _CS_POSIX_V6_LP64_OFF64_LINTFLAGS _CS_POSIX_V6_LP64_OFF64_LINTFLAGS
// unknowndefine _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
// unknowndefine _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
// unknowndefine _CS_POSIX_V6_LPBIG_OFFBIG_LIBS _CS_POSIX_V6_LPBIG_OFFBIG_LIBS
// unknowndefine _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
// unknowndefine _CS_POSIX_V7_ILP32_OFF32_CFLAGS _CS_POSIX_V7_ILP32_OFF32_CFLAGS
// unknowndefine _CS_POSIX_V7_ILP32_OFF32_LDFLAGS _CS_POSIX_V7_ILP32_OFF32_LDFLAGS
// unknowndefine _CS_POSIX_V7_ILP32_OFF32_LIBS _CS_POSIX_V7_ILP32_OFF32_LIBS
// unknowndefine _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
// unknowndefine _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
// unknowndefine _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
// unknowndefine _CS_POSIX_V7_ILP32_OFFBIG_LIBS _CS_POSIX_V7_ILP32_OFFBIG_LIBS
// unknowndefine _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
// unknowndefine _CS_POSIX_V7_LP64_OFF64_CFLAGS _CS_POSIX_V7_LP64_OFF64_CFLAGS
// unknowndefine _CS_POSIX_V7_LP64_OFF64_LDFLAGS _CS_POSIX_V7_LP64_OFF64_LDFLAGS
// unknowndefine _CS_POSIX_V7_LP64_OFF64_LIBS _CS_POSIX_V7_LP64_OFF64_LIBS
// unknowndefine _CS_POSIX_V7_LP64_OFF64_LINTFLAGS _CS_POSIX_V7_LP64_OFF64_LINTFLAGS
// unknowndefine _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
// unknowndefine _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
// unknowndefine _CS_POSIX_V7_LPBIG_OFFBIG_LIBS _CS_POSIX_V7_LPBIG_OFFBIG_LIBS
// unknowndefine _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
// unknowndefine _CS_V6_ENV _CS_V6_ENV
// unknowndefine _CS_V7_ENV _CS_V7_ENV
// unknowndefine NULL ((void *)0)
// unknowndefine h_errno (*__h_errno_location ())
// unknowndefine h_addr h_addr_list[0]
// unknowndefine NULL ((void *)0)
// unknowndefine NULL ((void *)0)
// unknowndefine NULL ((void *)0)
// unknowndefine _K_SS_ALIGNSIZE (__alignof__ (struct sockaddr *))
// unknowndefine NLMSG_HDRLEN ((int) NLMSG_ALIGN(sizeof(struct nlmsghdr)))
// unknowndefine NL_MMAP_HDRLEN NL_MMAP_MSG_ALIGN(sizeof(struct nl_mmap_hdr))
// unknowndefine NLA_HDRLEN ((int) NLA_ALIGN(sizeof(struct nlattr)))
// unknowndefine IFA_MAX (__IFA_MAX - 1)
// unknowndefine TUN_TUN_DEV IFF_TUN
// unknowndefine TUN_TAP_DEV IFF_TAP
// unknowndefine TUNSETNOCSUM _IOW('T', 200, int)
// unknowndefine TUNSETDEBUG _IOW('T', 201, int)
// unknowndefine TUNSETIFF _IOW('T', 202, int)
// unknowndefine TUNSETPERSIST _IOW('T', 203, int)
// unknowndefine TUNSETOWNER _IOW('T', 204, int)
// unknowndefine TUNSETLINK _IOW('T', 205, int)
// unknowndefine TUNSETGROUP _IOW('T', 206, int)
// unknowndefine TUNGETFEATURES _IOR('T', 207, unsigned int)
// unknowndefine TUNSETOFFLOAD _IOW('T', 208, unsigned int)
// unknowndefine TUNSETTXFILTER _IOW('T', 209, unsigned int)
// unknowndefine TUNGETIFF _IOR('T', 210, unsigned int)
// unknowndefine TUNGETSNDBUF _IOR('T', 211, int)
// unknowndefine TUNSETSNDBUF _IOW('T', 212, int)
// unknowndefine TUNATTACHFILTER _IOW('T', 213, struct sock_fprog)
// unknowndefine TUNDETACHFILTER _IOW('T', 214, struct sock_fprog)
// unknowndefine TUNGETVNETHDRSZ _IOR('T', 215, int)
// unknowndefine TUNSETVNETHDRSZ _IOW('T', 216, int)
// unknowndefine TUNSETQUEUE _IOW('T', 217, int)
// unknowndefine TUNSETIFINDEX _IOW('T', 218, unsigned int)
// unknowndefine TUNGETFILTER _IOR('T', 219, struct sock_fprog)
// unknowndefine TUNSETVNETLE _IOW('T', 220, int)
// unknowndefine TUNGETVNETLE _IOR('T', 221, int)
// unknowndefine TUNSETVNETBE _IOW('T', 222, int)
// unknowndefine TUNGETVNETBE _IOR('T', 223, int)
// unknowndefine ia64_fpreg pt_ia64_fpreg
// unknowndefine pt_all_user_regs pt_ia64_all_user_regs
// unknowndefine ptrace_peeksiginfo_args ignore_ptrace_peeksiginfo_args
// unknowndefine X86_EFLAGS_CF _BITUL(X86_EFLAGS_CF_BIT)
// unknowndefine X86_EFLAGS_FIXED _BITUL(X86_EFLAGS_FIXED_BIT)
// unknowndefine X86_EFLAGS_PF _BITUL(X86_EFLAGS_PF_BIT)
// unknowndefine X86_EFLAGS_AF _BITUL(X86_EFLAGS_AF_BIT)
// unknowndefine X86_EFLAGS_ZF _BITUL(X86_EFLAGS_ZF_BIT)
// unknowndefine X86_EFLAGS_SF _BITUL(X86_EFLAGS_SF_BIT)
// unknowndefine X86_EFLAGS_TF _BITUL(X86_EFLAGS_TF_BIT)
// unknowndefine X86_EFLAGS_IF _BITUL(X86_EFLAGS_IF_BIT)
// unknowndefine X86_EFLAGS_DF _BITUL(X86_EFLAGS_DF_BIT)
// unknowndefine X86_EFLAGS_OF _BITUL(X86_EFLAGS_OF_BIT)
// unknowndefine X86_EFLAGS_IOPL (_AC(3,UL) << X86_EFLAGS_IOPL_BIT)
// unknowndefine X86_EFLAGS_NT _BITUL(X86_EFLAGS_NT_BIT)
// unknowndefine X86_EFLAGS_RF _BITUL(X86_EFLAGS_RF_BIT)
// unknowndefine X86_EFLAGS_VM _BITUL(X86_EFLAGS_VM_BIT)
// unknowndefine X86_EFLAGS_AC _BITUL(X86_EFLAGS_AC_BIT)
// unknowndefine X86_EFLAGS_VIF _BITUL(X86_EFLAGS_VIF_BIT)
// unknowndefine X86_EFLAGS_VIP _BITUL(X86_EFLAGS_VIP_BIT)
// unknowndefine X86_EFLAGS_ID _BITUL(X86_EFLAGS_ID_BIT)
// unknowndefine X86_CR0_PE _BITUL(X86_CR0_PE_BIT)
// unknowndefine X86_CR0_MP _BITUL(X86_CR0_MP_BIT)
// unknowndefine X86_CR0_EM _BITUL(X86_CR0_EM_BIT)
// unknowndefine X86_CR0_TS _BITUL(X86_CR0_TS_BIT)
// unknowndefine X86_CR0_ET _BITUL(X86_CR0_ET_BIT)
// unknowndefine X86_CR0_NE _BITUL(X86_CR0_NE_BIT)
// unknowndefine X86_CR0_WP _BITUL(X86_CR0_WP_BIT)
// unknowndefine X86_CR0_AM _BITUL(X86_CR0_AM_BIT)
// unknowndefine X86_CR0_NW _BITUL(X86_CR0_NW_BIT)
// unknowndefine X86_CR0_CD _BITUL(X86_CR0_CD_BIT)
// unknowndefine X86_CR0_PG _BITUL(X86_CR0_PG_BIT)
// unknowndefine X86_CR3_PWT _BITUL(X86_CR3_PWT_BIT)
// unknowndefine X86_CR3_PCD _BITUL(X86_CR3_PCD_BIT)
// unknowndefine X86_CR3_PCID_MASK _AC(0x00000fff,UL)
// unknowndefine X86_CR4_VME _BITUL(X86_CR4_VME_BIT)
// unknowndefine X86_CR4_PVI _BITUL(X86_CR4_PVI_BIT)
// unknowndefine X86_CR4_TSD _BITUL(X86_CR4_TSD_BIT)
// unknowndefine X86_CR4_DE _BITUL(X86_CR4_DE_BIT)
// unknowndefine X86_CR4_PSE _BITUL(X86_CR4_PSE_BIT)
// unknowndefine X86_CR4_PAE _BITUL(X86_CR4_PAE_BIT)
// unknowndefine X86_CR4_MCE _BITUL(X86_CR4_MCE_BIT)
// unknowndefine X86_CR4_PGE _BITUL(X86_CR4_PGE_BIT)
// unknowndefine X86_CR4_PCE _BITUL(X86_CR4_PCE_BIT)
// unknowndefine X86_CR4_OSFXSR _BITUL(X86_CR4_OSFXSR_BIT)
// unknowndefine X86_CR4_OSXMMEXCPT _BITUL(X86_CR4_OSXMMEXCPT_BIT)
// unknowndefine X86_CR4_VMXE _BITUL(X86_CR4_VMXE_BIT)
// unknowndefine X86_CR4_SMXE _BITUL(X86_CR4_SMXE_BIT)
// unknowndefine X86_CR4_FSGSBASE _BITUL(X86_CR4_FSGSBASE_BIT)
// unknowndefine X86_CR4_PCIDE _BITUL(X86_CR4_PCIDE_BIT)
// unknowndefine X86_CR4_OSXSAVE _BITUL(X86_CR4_OSXSAVE_BIT)
// unknowndefine X86_CR4_SMEP _BITUL(X86_CR4_SMEP_BIT)
// unknowndefine X86_CR4_SMAP _BITUL(X86_CR4_SMAP_BIT)
// unknowndefine X86_CR4_PKE _BITUL(X86_CR4_PKE_BIT)
// unknowndefine X86_CR8_TPR _AC(0x0000000f,UL)
// unknowndefine IFLA_COST IFLA_COST
// unknowndefine IFLA_PRIORITY IFLA_PRIORITY
// unknowndefine IFLA_MASTER IFLA_MASTER
// unknowndefine IFLA_WIRELESS IFLA_WIRELESS
// unknowndefine IFLA_PROTINFO IFLA_PROTINFO
// unknowndefine IFLA_TXQLEN IFLA_TXQLEN
// unknowndefine IFLA_MAP IFLA_MAP
// unknowndefine IFLA_WEIGHT IFLA_WEIGHT
// unknowndefine IFLA_LINKINFO IFLA_LINKINFO
// unknowndefine IFLA_PROMISCUITY IFLA_PROMISCUITY
// unknowndefine IFLA_MAX (__IFLA_MAX - 1)
// unknowndefine IFLA_INET_MAX (__IFLA_INET_MAX - 1)
// unknowndefine IFLA_INET6_MAX (__IFLA_INET6_MAX - 1)
// unknowndefine IFLA_BR_MAX (__IFLA_BR_MAX - 1)
// unknowndefine IFLA_BRPORT_MAX (__IFLA_BRPORT_MAX - 1)
// unknowndefine IFLA_INFO_MAX (__IFLA_INFO_MAX - 1)
// unknowndefine IFLA_VLAN_MAX (__IFLA_VLAN_MAX - 1)
// unknowndefine IFLA_VLAN_QOS_MAX (__IFLA_VLAN_QOS_MAX - 1)
// unknowndefine IFLA_MACVLAN_MAX (__IFLA_MACVLAN_MAX - 1)
// unknowndefine IFLA_VRF_MAX (__IFLA_VRF_MAX - 1)
// unknowndefine IFLA_VRF_PORT_MAX (__IFLA_VRF_PORT_MAX - 1)
// unknowndefine IFLA_MACSEC_MAX (__IFLA_MACSEC_MAX - 1)
// unknowndefine IFLA_IPVLAN_MAX (__IFLA_IPVLAN_MAX - 1)
// unknowndefine IFLA_VXLAN_MAX (__IFLA_VXLAN_MAX - 1)
// unknowndefine IFLA_GENEVE_MAX (__IFLA_GENEVE_MAX - 1)
// unknowndefine IFLA_PPP_MAX (__IFLA_PPP_MAX - 1)
// unknowndefine IFLA_GTP_MAX (__IFLA_GTP_MAX - 1)
// unknowndefine IFLA_BOND_MAX (__IFLA_BOND_MAX - 1)
// unknowndefine IFLA_BOND_AD_INFO_MAX (__IFLA_BOND_AD_INFO_MAX - 1)
// unknowndefine IFLA_BOND_SLAVE_MAX (__IFLA_BOND_SLAVE_MAX - 1)
// unknowndefine IFLA_VF_INFO_MAX (__IFLA_VF_INFO_MAX - 1)
// unknowndefine IFLA_VF_MAX (__IFLA_VF_MAX - 1)
// unknowndefine IFLA_VF_VLAN_INFO_MAX (__IFLA_VF_VLAN_INFO_MAX - 1)
// unknowndefine IFLA_VF_STATS_MAX (__IFLA_VF_STATS_MAX - 1)
// unknowndefine IFLA_VF_PORT_MAX (__IFLA_VF_PORT_MAX - 1)
// unknowndefine IFLA_PORT_MAX (__IFLA_PORT_MAX - 1)
// unknowndefine IFLA_IPOIB_MAX (__IFLA_IPOIB_MAX - 1)
// unknowndefine IFLA_HSR_MAX (__IFLA_HSR_MAX - 1)
// unknowndefine IFLA_STATS_MAX (__IFLA_STATS_MAX - 1)
// unknowndefine LINK_XSTATS_TYPE_MAX (__LINK_XSTATS_TYPE_MAX - 1)
// unknowndefine IFLA_OFFLOAD_XSTATS_MAX (__IFLA_OFFLOAD_XSTATS_MAX - 1)
// unknowndefine IFLA_XDP_MAX (__IFLA_XDP_MAX - 1)
// unknowndefine NDA_MAX (__NDA_MAX - 1)
// unknowndefine NDTPA_MAX (__NDTPA_MAX - 1)
// unknowndefine NDTA_MAX (__NDTA_MAX - 1)
// unknowndefine RTM_BASE RTM_BASE
// unknowndefine RTM_NEWLINK RTM_NEWLINK
// unknowndefine RTM_DELLINK RTM_DELLINK
// unknowndefine RTM_GETLINK RTM_GETLINK
// unknowndefine RTM_SETLINK RTM_SETLINK
// unknowndefine RTM_NEWADDR RTM_NEWADDR
// unknowndefine RTM_DELADDR RTM_DELADDR
// unknowndefine RTM_GETADDR RTM_GETADDR
// unknowndefine RTM_NEWROUTE RTM_NEWROUTE
// unknowndefine RTM_DELROUTE RTM_DELROUTE
// unknowndefine RTM_GETROUTE RTM_GETROUTE
// unknowndefine RTM_NEWNEIGH RTM_NEWNEIGH
// unknowndefine RTM_DELNEIGH RTM_DELNEIGH
// unknowndefine RTM_GETNEIGH RTM_GETNEIGH
// unknowndefine RTM_NEWRULE RTM_NEWRULE
// unknowndefine RTM_DELRULE RTM_DELRULE
// unknowndefine RTM_GETRULE RTM_GETRULE
// unknowndefine RTM_NEWQDISC RTM_NEWQDISC
// unknowndefine RTM_DELQDISC RTM_DELQDISC
// unknowndefine RTM_GETQDISC RTM_GETQDISC
// unknowndefine RTM_NEWTCLASS RTM_NEWTCLASS
// unknowndefine RTM_DELTCLASS RTM_DELTCLASS
// unknowndefine RTM_GETTCLASS RTM_GETTCLASS
// unknowndefine RTM_NEWTFILTER RTM_NEWTFILTER
// unknowndefine RTM_DELTFILTER RTM_DELTFILTER
// unknowndefine RTM_GETTFILTER RTM_GETTFILTER
// unknowndefine RTM_NEWACTION RTM_NEWACTION
// unknowndefine RTM_DELACTION RTM_DELACTION
// unknowndefine RTM_GETACTION RTM_GETACTION
// unknowndefine RTM_NEWPREFIX RTM_NEWPREFIX
// unknowndefine RTM_GETMULTICAST RTM_GETMULTICAST
// unknowndefine RTM_GETANYCAST RTM_GETANYCAST
// unknowndefine RTM_NEWNEIGHTBL RTM_NEWNEIGHTBL
// unknowndefine RTM_GETNEIGHTBL RTM_GETNEIGHTBL
// unknowndefine RTM_SETNEIGHTBL RTM_SETNEIGHTBL
// unknowndefine RTM_NEWNDUSEROPT RTM_NEWNDUSEROPT
// unknowndefine RTM_NEWADDRLABEL RTM_NEWADDRLABEL
// unknowndefine RTM_DELADDRLABEL RTM_DELADDRLABEL
// unknowndefine RTM_GETADDRLABEL RTM_GETADDRLABEL
// unknowndefine RTM_GETDCB RTM_GETDCB
// unknowndefine RTM_SETDCB RTM_SETDCB
// unknowndefine RTM_NEWNETCONF RTM_NEWNETCONF
// unknowndefine RTM_GETNETCONF RTM_GETNETCONF
// unknowndefine RTM_NEWMDB RTM_NEWMDB
// unknowndefine RTM_DELMDB RTM_DELMDB
// unknowndefine RTM_GETMDB RTM_GETMDB
// unknowndefine RTM_NEWNSID RTM_NEWNSID
// unknowndefine RTM_DELNSID RTM_DELNSID
// unknowndefine RTM_GETNSID RTM_GETNSID
// unknowndefine RTM_NEWSTATS RTM_NEWSTATS
// unknowndefine RTM_GETSTATS RTM_GETSTATS
// unknowndefine RTM_MAX (((__RTM_MAX + 3) & ~3) - 1)
// unknowndefine RTM_NR_MSGTYPES (RTM_MAX + 1 - RTM_BASE)
// unknowndefine RTM_NR_FAMILIES (RTM_NR_MSGTYPES >> 2)
// unknowndefine RTN_MAX (__RTN_MAX - 1)
// unknowndefine RTA_MAX (__RTA_MAX - 1)
// unknowndefine RTAX_UNSPEC RTAX_UNSPEC
// unknowndefine RTAX_LOCK RTAX_LOCK
// unknowndefine RTAX_MTU RTAX_MTU
// unknowndefine RTAX_WINDOW RTAX_WINDOW
// unknowndefine RTAX_RTT RTAX_RTT
// unknowndefine RTAX_RTTVAR RTAX_RTTVAR
// unknowndefine RTAX_SSTHRESH RTAX_SSTHRESH
// unknowndefine RTAX_CWND RTAX_CWND
// unknowndefine RTAX_ADVMSS RTAX_ADVMSS
// unknowndefine RTAX_REORDERING RTAX_REORDERING
// unknowndefine RTAX_HOPLIMIT RTAX_HOPLIMIT
// unknowndefine RTAX_INITCWND RTAX_INITCWND
// unknowndefine RTAX_FEATURES RTAX_FEATURES
// unknowndefine RTAX_RTO_MIN RTAX_RTO_MIN
// unknowndefine RTAX_INITRWND RTAX_INITRWND
// unknowndefine RTAX_QUICKACK RTAX_QUICKACK
// unknowndefine RTAX_CC_ALGO RTAX_CC_ALGO
// unknowndefine RTAX_MAX (__RTAX_MAX - 1)
// unknowndefine PREFIX_MAX (__PREFIX_MAX - 1)
// unknowndefine TCA_MAX (__TCA_MAX - 1)
// unknowndefine NDUSEROPT_MAX (__NDUSEROPT_MAX - 1)
// unknowndefine RTNLGRP_NONE RTNLGRP_NONE
// unknowndefine RTNLGRP_LINK RTNLGRP_LINK
// unknowndefine RTNLGRP_NOTIFY RTNLGRP_NOTIFY
// unknowndefine RTNLGRP_NEIGH RTNLGRP_NEIGH
// unknowndefine RTNLGRP_TC RTNLGRP_TC
// unknowndefine RTNLGRP_IPV4_IFADDR RTNLGRP_IPV4_IFADDR
// unknowndefine RTNLGRP_IPV4_MROUTE RTNLGRP_IPV4_MROUTE
// unknowndefine RTNLGRP_IPV4_ROUTE RTNLGRP_IPV4_ROUTE
// unknowndefine RTNLGRP_IPV4_RULE RTNLGRP_IPV4_RULE
// unknowndefine RTNLGRP_IPV6_IFADDR RTNLGRP_IPV6_IFADDR
// unknowndefine RTNLGRP_IPV6_MROUTE RTNLGRP_IPV6_MROUTE
// unknowndefine RTNLGRP_IPV6_ROUTE RTNLGRP_IPV6_ROUTE
// unknowndefine RTNLGRP_IPV6_IFINFO RTNLGRP_IPV6_IFINFO
// unknowndefine RTNLGRP_DECnet_IFADDR RTNLGRP_DECnet_IFADDR
// unknowndefine RTNLGRP_DECnet_ROUTE RTNLGRP_DECnet_ROUTE
// unknowndefine RTNLGRP_DECnet_RULE RTNLGRP_DECnet_RULE
// unknowndefine RTNLGRP_IPV6_PREFIX RTNLGRP_IPV6_PREFIX
// unknowndefine RTNLGRP_IPV6_RULE RTNLGRP_IPV6_RULE
// unknowndefine RTNLGRP_ND_USEROPT RTNLGRP_ND_USEROPT
// unknowndefine RTNLGRP_PHONET_IFADDR RTNLGRP_PHONET_IFADDR
// unknowndefine RTNLGRP_PHONET_ROUTE RTNLGRP_PHONET_ROUTE
// unknowndefine RTNLGRP_DCB RTNLGRP_DCB
// unknowndefine RTNLGRP_IPV4_NETCONF RTNLGRP_IPV4_NETCONF
// unknowndefine RTNLGRP_IPV6_NETCONF RTNLGRP_IPV6_NETCONF
// unknowndefine RTNLGRP_MDB RTNLGRP_MDB
// unknowndefine RTNLGRP_MPLS_ROUTE RTNLGRP_MPLS_ROUTE
// unknowndefine RTNLGRP_NSID RTNLGRP_NSID
// unknowndefine RTNLGRP_MAX (__RTNLGRP_MAX - 1)
// unknowndefine IFF_UP IFF_UP
// unknowndefine IFF_BROADCAST IFF_BROADCAST
// unknowndefine IFF_DEBUG IFF_DEBUG
// unknowndefine IFF_LOOPBACK IFF_LOOPBACK
// unknowndefine IFF_POINTOPOINT IFF_POINTOPOINT
// unknowndefine IFF_NOTRAILERS IFF_NOTRAILERS
// unknowndefine IFF_RUNNING IFF_RUNNING
// unknowndefine IFF_NOARP IFF_NOARP
// unknowndefine IFF_PROMISC IFF_PROMISC
// unknowndefine IFF_ALLMULTI IFF_ALLMULTI
// unknowndefine IFF_MASTER IFF_MASTER
// unknowndefine IFF_SLAVE IFF_SLAVE
// unknowndefine IFF_MULTICAST IFF_MULTICAST
// unknowndefine IFF_PORTSEL IFF_PORTSEL
// unknowndefine IFF_AUTOMEDIA IFF_AUTOMEDIA
// unknowndefine IFF_DYNAMIC IFF_DYNAMIC
// unknowndefine ifa_broadaddr ifa_ifu.ifu_broadaddr
// unknowndefine ifa_dstaddr ifa_ifu.ifu_dstaddr
// unknowndefine ifr_name ifr_ifrn.ifrn_name
// unknowndefine ifr_hwaddr ifr_ifru.ifru_hwaddr
// unknowndefine ifr_addr ifr_ifru.ifru_addr
// unknowndefine ifr_dstaddr ifr_ifru.ifru_dstaddr
// unknowndefine ifr_broadaddr ifr_ifru.ifru_broadaddr
// unknowndefine ifr_netmask ifr_ifru.ifru_netmask
// unknowndefine ifr_flags ifr_ifru.ifru_flags
// unknowndefine ifr_metric ifr_ifru.ifru_ivalue
// unknowndefine ifr_mtu ifr_ifru.ifru_mtu
// unknowndefine ifr_map ifr_ifru.ifru_map
// unknowndefine ifr_slave ifr_ifru.ifru_slave
// unknowndefine ifr_data ifr_ifru.ifru_data
// unknowndefine ifr_ifindex ifr_ifru.ifru_ivalue
// unknowndefine ifr_bandwidth ifr_ifru.ifru_ivalue
// unknowndefine ifr_qlen ifr_ifru.ifru_ivalue
// unknowndefine ifr_newname ifr_ifru.ifru_newname
// unknowndefine _IOT_ifreq _IOT(_IOTS(char),IFNAMSIZ,_IOTS(char),16,0,0)
// unknowndefine _IOT_ifreq_short _IOT(_IOTS(char),IFNAMSIZ,_IOTS(short),1,0,0)
// unknowndefine _IOT_ifreq_int _IOT(_IOTS(char),IFNAMSIZ,_IOTS(int),1,0,0)
// unknowndefine ifc_buf ifc_ifcu.ifcu_buf
// unknowndefine ifc_req ifc_ifcu.ifcu_req
// unknowndefine _IOT_ifconf _IOT(_IOTS(struct ifconf),1,0,0,0,0)
// unknowndefine rt_mss rt_mtu
// unknowndefine RTMSG_ACK NLMSG_ACK
// unknowndefine MS_RDONLY MS_RDONLY
// unknowndefine MS_NOSUID MS_NOSUID
// unknowndefine MS_NODEV MS_NODEV
// unknowndefine MS_NOEXEC MS_NOEXEC
// unknowndefine MS_SYNCHRONOUS MS_SYNCHRONOUS
// unknowndefine MS_REMOUNT MS_REMOUNT
// unknowndefine MS_MANDLOCK MS_MANDLOCK
// unknowndefine MS_DIRSYNC MS_DIRSYNC
// unknowndefine MS_NOATIME MS_NOATIME
// unknowndefine MS_NODIRATIME MS_NODIRATIME
// unknowndefine MS_BIND MS_BIND
// unknowndefine MS_MOVE MS_MOVE
// unknowndefine MS_REC MS_REC
// unknowndefine MS_SILENT MS_SILENT
// unknowndefine MS_POSIXACL MS_POSIXACL
// unknowndefine MS_UNBINDABLE MS_UNBINDABLE
// unknowndefine MS_PRIVATE MS_PRIVATE
// unknowndefine MS_SLAVE MS_SLAVE
// unknowndefine MS_SHARED MS_SHARED
// unknowndefine MS_RELATIME MS_RELATIME
// unknowndefine MS_KERNMOUNT MS_KERNMOUNT
// unknowndefine MS_I_VERSION MS_I_VERSION
// unknowndefine MS_STRICTATIME MS_STRICTATIME
// unknowndefine MS_LAZYTIME MS_LAZYTIME
// unknowndefine MS_ACTIVE MS_ACTIVE
// unknowndefine MS_NOUSER MS_NOUSER
// unknowndefine MS_RMT_MASK (MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_I_VERSION |MS_LAZYTIME)
// unknowndefine BLKROSET _IO(0x12, 93)
// unknowndefine BLKROGET _IO(0x12, 94)
// unknowndefine BLKRRPART _IO(0x12, 95)
// unknowndefine BLKGETSIZE _IO(0x12, 96)
// unknowndefine BLKFLSBUF _IO(0x12, 97)
// unknowndefine BLKRASET _IO(0x12, 98)
// unknowndefine BLKRAGET _IO(0x12, 99)
// unknowndefine BLKFRASET _IO(0x12,100)
// unknowndefine BLKFRAGET _IO(0x12,101)
// unknowndefine BLKSECTSET _IO(0x12,102)
// unknowndefine BLKSECTGET _IO(0x12,103)
// unknowndefine BLKSSZGET _IO(0x12,104)
// unknowndefine BLKBSZGET _IOR(0x12,112,size_t)
// unknowndefine BLKBSZSET _IOW(0x12,113,size_t)
// unknowndefine BLKGETSIZE64 _IOR(0x12,114,size_t)
// unknowndefine MNT_FORCE MNT_FORCE
// unknowndefine MNT_DETACH MNT_DETACH
// unknowndefine MNT_EXPIRE MNT_EXPIRE
// unknowndefine UMOUNT_NOFOLLOW UMOUNT_NOFOLLOW
// unknowndefine BLKROSET _IO(0x12,93)
// unknowndefine BLKROGET _IO(0x12,94)
// unknowndefine BLKRRPART _IO(0x12,95)
// unknowndefine BLKGETSIZE _IO(0x12,96)
// unknowndefine BLKFLSBUF _IO(0x12,97)
// unknowndefine BLKRASET _IO(0x12,98)
// unknowndefine BLKRAGET _IO(0x12,99)
// unknowndefine BLKFRASET _IO(0x12,100)
// unknowndefine BLKFRAGET _IO(0x12,101)
// unknowndefine BLKSECTSET _IO(0x12,102)
// unknowndefine BLKSECTGET _IO(0x12,103)
// unknowndefine BLKSSZGET _IO(0x12,104)
// unknowndefine BLKBSZGET _IOR(0x12,112,size_t)
// unknowndefine BLKBSZSET _IOW(0x12,113,size_t)
// unknowndefine BLKGETSIZE64 _IOR(0x12,114,size_t)
// unknowndefine BLKTRACESETUP _IOWR(0x12,115,struct blk_user_trace_setup)
// unknowndefine BLKTRACESTART _IO(0x12,116)
// unknowndefine BLKTRACESTOP _IO(0x12,117)
// unknowndefine BLKTRACETEARDOWN _IO(0x12,118)
// unknowndefine BLKDISCARD _IO(0x12,119)
// unknowndefine BLKIOMIN _IO(0x12,120)
// unknowndefine BLKIOOPT _IO(0x12,121)
// unknowndefine BLKALIGNOFF _IO(0x12,122)
// unknowndefine BLKPBSZGET _IO(0x12,123)
// unknowndefine BLKDISCARDZEROES _IO(0x12,124)
// unknowndefine BLKSECDISCARD _IO(0x12,125)
// unknowndefine BLKROTATIONAL _IO(0x12,126)
// unknowndefine BLKZEROOUT _IO(0x12,127)
// unknowndefine FIBMAP _IO(0x00,1)
// unknowndefine FIGETBSZ _IO(0x00,2)
// unknowndefine FIFREEZE _IOWR('X', 119, int)
// unknowndefine FITHAW _IOWR('X', 120, int)
// unknowndefine FITRIM _IOWR('X', 121, struct fstrim_range)
// unknowndefine FICLONE _IOW(0x94, 9, int)
// unknowndefine FICLONERANGE _IOW(0x94, 13, struct file_clone_range)
// unknowndefine FIDEDUPERANGE _IOWR(0x94, 54, struct file_dedupe_range)
// unknowndefine FS_IOC_GETFLAGS _IOR('f', 1, long)
// unknowndefine FS_IOC_SETFLAGS _IOW('f', 2, long)
// unknowndefine FS_IOC_GETVERSION _IOR('v', 1, long)
// unknowndefine FS_IOC_SETVERSION _IOW('v', 2, long)
// unknowndefine FS_IOC_FIEMAP _IOWR('f', 11, struct fiemap)
// unknowndefine FS_IOC32_GETFLAGS _IOR('f', 1, int)
// unknowndefine FS_IOC32_SETFLAGS _IOW('f', 2, int)
// unknowndefine FS_IOC32_GETVERSION _IOR('v', 1, int)
// unknowndefine FS_IOC32_SETVERSION _IOW('v', 2, int)
// unknowndefine FS_IOC_FSGETXATTR _IOR ('X', 31, struct fsxattr)
// unknowndefine FS_IOC_FSSETXATTR _IOW ('X', 32, struct fsxattr)
// unknowndefine FS_IOC_SET_ENCRYPTION_POLICY _IOR('f', 19, struct fscrypt_policy)
// unknowndefine FS_IOC_GET_ENCRYPTION_PWSALT _IOW('f', 20, __u8[16])
// unknowndefine FS_IOC_GET_ENCRYPTION_POLICY _IOW('f', 21, struct fscrypt_policy)
// unknowndefine IN_CLOEXEC IN_CLOEXEC
// unknowndefine IN_NONBLOCK IN_NONBLOCK
// unknowndefine PRId64 __PRI64_PREFIX "d"
// unknowndefine PRIdLEAST64 __PRI64_PREFIX "d"
// unknowndefine PRIdFAST16 __PRIPTR_PREFIX "d"
// unknowndefine PRIdFAST32 __PRIPTR_PREFIX "d"
// unknowndefine PRIdFAST64 __PRI64_PREFIX "d"
// unknowndefine PRIi64 __PRI64_PREFIX "i"
// unknowndefine PRIiLEAST64 __PRI64_PREFIX "i"
// unknowndefine PRIiFAST16 __PRIPTR_PREFIX "i"
// unknowndefine PRIiFAST32 __PRIPTR_PREFIX "i"
// unknowndefine PRIiFAST64 __PRI64_PREFIX "i"
// unknowndefine PRIo64 __PRI64_PREFIX "o"
// unknowndefine PRIoLEAST64 __PRI64_PREFIX "o"
// unknowndefine PRIoFAST16 __PRIPTR_PREFIX "o"
// unknowndefine PRIoFAST32 __PRIPTR_PREFIX "o"
// unknowndefine PRIoFAST64 __PRI64_PREFIX "o"
// unknowndefine PRIu64 __PRI64_PREFIX "u"
// unknowndefine PRIuLEAST64 __PRI64_PREFIX "u"
// unknowndefine PRIuFAST16 __PRIPTR_PREFIX "u"
// unknowndefine PRIuFAST32 __PRIPTR_PREFIX "u"
// unknowndefine PRIuFAST64 __PRI64_PREFIX "u"
// unknowndefine PRIx64 __PRI64_PREFIX "x"
// unknowndefine PRIxLEAST64 __PRI64_PREFIX "x"
// unknowndefine PRIxFAST16 __PRIPTR_PREFIX "x"
// unknowndefine PRIxFAST32 __PRIPTR_PREFIX "x"
// unknowndefine PRIxFAST64 __PRI64_PREFIX "x"
// unknowndefine PRIX64 __PRI64_PREFIX "X"
// unknowndefine PRIXLEAST64 __PRI64_PREFIX "X"
// unknowndefine PRIXFAST16 __PRIPTR_PREFIX "X"
// unknowndefine PRIXFAST32 __PRIPTR_PREFIX "X"
// unknowndefine PRIXFAST64 __PRI64_PREFIX "X"
// unknowndefine PRIdMAX __PRI64_PREFIX "d"
// unknowndefine PRIiMAX __PRI64_PREFIX "i"
// unknowndefine PRIoMAX __PRI64_PREFIX "o"
// unknowndefine PRIuMAX __PRI64_PREFIX "u"
// unknowndefine PRIxMAX __PRI64_PREFIX "x"
// unknowndefine PRIXMAX __PRI64_PREFIX "X"
// unknowndefine PRIdPTR __PRIPTR_PREFIX "d"
// unknowndefine PRIiPTR __PRIPTR_PREFIX "i"
// unknowndefine PRIoPTR __PRIPTR_PREFIX "o"
// unknowndefine PRIuPTR __PRIPTR_PREFIX "u"
// unknowndefine PRIxPTR __PRIPTR_PREFIX "x"
// unknowndefine PRIXPTR __PRIPTR_PREFIX "X"
// unknowndefine SCNd64 __PRI64_PREFIX "d"
// unknowndefine SCNdLEAST64 __PRI64_PREFIX "d"
// unknowndefine SCNdFAST16 __PRIPTR_PREFIX "d"
// unknowndefine SCNdFAST32 __PRIPTR_PREFIX "d"
// unknowndefine SCNdFAST64 __PRI64_PREFIX "d"
// unknowndefine SCNi64 __PRI64_PREFIX "i"
// unknowndefine SCNiLEAST64 __PRI64_PREFIX "i"
// unknowndefine SCNiFAST16 __PRIPTR_PREFIX "i"
// unknowndefine SCNiFAST32 __PRIPTR_PREFIX "i"
// unknowndefine SCNiFAST64 __PRI64_PREFIX "i"
// unknowndefine SCNu64 __PRI64_PREFIX "u"
// unknowndefine SCNuLEAST64 __PRI64_PREFIX "u"
// unknowndefine SCNuFAST16 __PRIPTR_PREFIX "u"
// unknowndefine SCNuFAST32 __PRIPTR_PREFIX "u"
// unknowndefine SCNuFAST64 __PRI64_PREFIX "u"
// unknowndefine SCNo64 __PRI64_PREFIX "o"
// unknowndefine SCNoLEAST64 __PRI64_PREFIX "o"
// unknowndefine SCNoFAST16 __PRIPTR_PREFIX "o"
// unknowndefine SCNoFAST32 __PRIPTR_PREFIX "o"
// unknowndefine SCNoFAST64 __PRI64_PREFIX "o"
// unknowndefine SCNx64 __PRI64_PREFIX "x"
// unknowndefine SCNxLEAST64 __PRI64_PREFIX "x"
// unknowndefine SCNxFAST16 __PRIPTR_PREFIX "x"
// unknowndefine SCNxFAST32 __PRIPTR_PREFIX "x"
// unknowndefine SCNxFAST64 __PRI64_PREFIX "x"
// unknowndefine SCNdMAX __PRI64_PREFIX "d"
// unknowndefine SCNiMAX __PRI64_PREFIX "i"
// unknowndefine SCNoMAX __PRI64_PREFIX "o"
// unknowndefine SCNuMAX __PRI64_PREFIX "u"
// unknowndefine SCNxMAX __PRI64_PREFIX "x"
// unknowndefine SCNdPTR __PRIPTR_PREFIX "d"
// unknowndefine SCNiPTR __PRIPTR_PREFIX "i"
// unknowndefine SCNoPTR __PRIPTR_PREFIX "o"
// unknowndefine SCNuPTR __PRIPTR_PREFIX "u"
// unknowndefine SCNxPTR __PRIPTR_PREFIX "x"
// unknowndefine icmp6_data32 icmp6_dataun.icmp6_un_data32
// unknowndefine icmp6_data16 icmp6_dataun.icmp6_un_data16
// unknowndefine icmp6_data8 icmp6_dataun.icmp6_un_data8
// unknowndefine icmp6_pptr icmp6_data32[0]
// unknowndefine icmp6_mtu icmp6_data32[0]
// unknowndefine icmp6_id icmp6_data16[0]
// unknowndefine icmp6_seq icmp6_data16[1]
// unknowndefine icmp6_maxdelay icmp6_data16[0]
// unknowndefine nd_rs_type nd_rs_hdr.icmp6_type
// unknowndefine nd_rs_code nd_rs_hdr.icmp6_code
// unknowndefine nd_rs_cksum nd_rs_hdr.icmp6_cksum
// unknowndefine nd_rs_reserved nd_rs_hdr.icmp6_data32[0]
// unknowndefine nd_ra_type nd_ra_hdr.icmp6_type
// unknowndefine nd_ra_code nd_ra_hdr.icmp6_code
// unknowndefine nd_ra_cksum nd_ra_hdr.icmp6_cksum
// unknowndefine nd_ra_curhoplimit nd_ra_hdr.icmp6_data8[0]
// unknowndefine nd_ra_flags_reserved nd_ra_hdr.icmp6_data8[1]
// unknowndefine nd_ra_router_lifetime nd_ra_hdr.icmp6_data16[1]
// unknowndefine nd_ns_type nd_ns_hdr.icmp6_type
// unknowndefine nd_ns_code nd_ns_hdr.icmp6_code
// unknowndefine nd_ns_cksum nd_ns_hdr.icmp6_cksum
// unknowndefine nd_ns_reserved nd_ns_hdr.icmp6_data32[0]
// unknowndefine nd_na_type nd_na_hdr.icmp6_type
// unknowndefine nd_na_code nd_na_hdr.icmp6_code
// unknowndefine nd_na_cksum nd_na_hdr.icmp6_cksum
// unknowndefine nd_na_flags_reserved nd_na_hdr.icmp6_data32[0]
// unknowndefine nd_rd_type nd_rd_hdr.icmp6_type
// unknowndefine nd_rd_code nd_rd_hdr.icmp6_code
// unknowndefine nd_rd_cksum nd_rd_hdr.icmp6_cksum
// unknowndefine nd_rd_reserved nd_rd_hdr.icmp6_data32[0]
// unknowndefine mld_type mld_icmp6_hdr.icmp6_type
// unknowndefine mld_code mld_icmp6_hdr.icmp6_code
// unknowndefine mld_cksum mld_icmp6_hdr.icmp6_cksum
// unknowndefine mld_maxdelay mld_icmp6_hdr.icmp6_data16[0]
// unknowndefine mld_reserved mld_icmp6_hdr.icmp6_data16[1]
// unknowndefine rr_type rr_hdr.icmp6_type
// unknowndefine rr_code rr_hdr.icmp6_code
// unknowndefine rr_cksum rr_hdr.icmp6_cksum
// unknowndefine rr_seqnum rr_hdr.icmp6_data32[0]
// unknowndefine NULL ((void *)0)
// unknowndefine __NCPUBITS (8 * sizeof (__cpu_mask))
// unknowndefine sched_priority __sched_priority
// unknowndefine SEM_FAILED ((sem_t *) 0)
// unknowndefine FFI_TYPE_SMALL_STRUCT_1B (FFI_TYPE_LAST + 1)
// unknowndefine FFI_TYPE_SMALL_STRUCT_2B (FFI_TYPE_LAST + 2)
// unknowndefine FFI_TYPE_SMALL_STRUCT_4B (FFI_TYPE_LAST + 3)
// unknowndefine FFI_TYPE_MS_STRUCT (FFI_TYPE_LAST + 4)
// unknowndefine LLONG_MIN (-LLONG_MAX-1)
// unknowndefine NL_MSGMAX INT_MAX
// unknowndefine NL_NMAX INT_MAX
// unknowndefine NL_SETMAX INT_MAX
// unknowndefine NL_TEXTMAX INT_MAX
// unknowndefine SCHAR_MIN (-SCHAR_MAX - 1)
// unknowndefine CHAR_MIN SCHAR_MIN
// unknowndefine SHRT_MIN (-SHRT_MAX - 1)
// unknowndefine INT_MIN (-INT_MAX - 1)
// unknowndefine LONG_MIN (-LONG_MAX - 1L)
// unknowndefine LONG_LONG_MIN (-LONG_LONG_MAX - 1LL)
// unknowndefine ffi_type_uchar ffi_type_uint8
// unknowndefine ffi_type_schar ffi_type_sint8
// unknowndefine ffi_type_ushort ffi_type_uint16
// unknowndefine ffi_type_sshort ffi_type_sint16
// unknowndefine ffi_type_uint ffi_type_uint32
// unknowndefine ffi_type_sint ffi_type_sint32
// unknowndefine ffi_type_ulong ffi_type_uint64
// unknowndefine ffi_type_slong ffi_type_sint64
// unknowndefine FFI_EXTERN extern
type _ptrdiff_t int64
type _size_t uint64
type _wchar_t int32
type ___u_char uint8
type ___u_short uint16
type ___u_int uint32
type ___u_long uint64
type ___int8_t int8
type ___uint8_t uint8
type ___int16_t int16
type ___uint16_t uint16
type ___int32_t int32
type ___uint32_t uint32
type ___int64_t int64
type ___uint64_t uint64
type ___quad_t int64
type ___u_quad_t uint64
type ___dev_t uint64
type ___uid_t uint32
type ___gid_t uint32
type ___ino_t uint64
type ___ino64_t uint64
type ___mode_t uint32
type ___nlink_t uint64
type ___off_t int64
type ___off64_t int64
type ___pid_t int32
type ___fsid_t struct { __val [1+1]int32; }
const _sizeof___fsid_t = 8
type ___clock_t int64
type ___rlim_t uint64
type ___rlim64_t uint64
type ___id_t uint32
type ___time_t int64
type ___useconds_t uint32
type ___suseconds_t int64
type ___daddr_t int32
type ___key_t int32
type ___clockid_t int32
type ___timer_t *byte
type ___blksize_t int64
type ___blkcnt_t int64
type ___blkcnt64_t int64
type ___fsblkcnt_t uint64
type ___fsblkcnt64_t uint64
type ___fsfilcnt_t uint64
type ___fsfilcnt64_t uint64
type ___fsword_t int64
type ___ssize_t int64
type ___syscall_slong_t int64
type ___syscall_ulong_t uint64
type ___loff_t int64
type ___qaddr_t *int64
type ___caddr_t *int8
type ___intptr_t int64
type ___socklen_t uint32
type _u_char uint8
type _u_short uint16
type _u_int uint32
type _u_long uint64
type _quad_t int64
type _u_quad_t uint64
type _fsid_t struct { __val [1+1]int32; }
const _sizeof_fsid_t = 8
type _loff_t int64
type _ino_t uint64
type _ino64_t uint64
type _dev_t uint64
type _gid_t uint32
type _mode_t uint32
type _nlink_t uint64
type _uid_t uint32
type _off_t int64
type _off64_t int64
type _pid_t int32
type _id_t uint32
type _ssize_t int64
type _daddr_t int32
type _caddr_t *int8
type _key_t int32
type _clock_t int64
type _time_t int64
type _clockid_t int32
type _timer_t *byte
type _useconds_t uint32
type _suseconds_t int64
type _ulong uint64
type _ushort uint16
type _uint uint32
type _int8_t int8
type _int16_t int16
type _int32_t int32
type _int64_t int64
type _u_int8_t uint8
type _u_int16_t uint16
type _u_int32_t uint32
type _u_int64_t uint64
type _register_t int64
type ___sig_atomic_t int32
type ___sigset_t struct { __val [15+1]uint64; }
const _sizeof___sigset_t = 128
type _sigset_t struct { __val [15+1]uint64; }
const _sizeof_sigset_t = 128
type _timespec struct { tv_sec int64; tv_nsec int64; }
const _sizeof_timespec = 16
type _timeval struct { tv_sec int64; tv_usec int64; }
const _sizeof_timeval = 16
type ___fd_mask int64
type _fd_set struct { fds_bits [15+1]int64; }
const _sizeof_fd_set = 128
type _fd_mask int64
func _select (int32, *_fd_set, *_fd_set, *_fd_set, *_timeval) int32 __asm__("select")
func _pselect (int32, *_fd_set, *_fd_set, *_fd_set, *_timespec, *___sigset_t) int32 __asm__("pselect")
func _gnu_dev_major (uint64) uint32 __asm__("gnu_dev_major")
func _gnu_dev_minor (uint64) uint32 __asm__("gnu_dev_minor")
func _gnu_dev_makedev (uint32, uint32) uint64 __asm__("gnu_dev_makedev")
type _blksize_t int64
type _blkcnt_t int64
type _fsblkcnt_t uint64
type _fsfilcnt_t uint64
type _blkcnt64_t int64
type _fsblkcnt64_t uint64
type _fsfilcnt64_t uint64
type _pthread_t uint64
type _pthread_attr_t struct { __size [55+1]int8; Godump_0_align [0]int64; }
const _sizeof_pthread_attr_t = 56
type ___pthread_internal_list struct { __prev *___pthread_internal_list; __next *___pthread_internal_list; }
const _sizeof___pthread_internal_list = 16
type ___pthread_list_t struct { __prev *___pthread_internal_list; __next *___pthread_internal_list; }
const _sizeof___pthread_list_t = 16
type ___pthread_mutex_s struct { __lock int32; __count uint32; __owner int32; __nusers uint32; __kind int32; __spins int16; __elision int16; __list ___pthread_list_t; }
const _sizeof___pthread_mutex_s = 40
type _pthread_mutex_t struct { __data ___pthread_mutex_s; }
const _sizeof_pthread_mutex_t = 40
type _pthread_mutexattr_t struct { __size [3+1]int8; Godump_0_align [0]int32; }
const _sizeof_pthread_mutexattr_t = 4
type _pthread_cond_t struct { __data struct { __lock int32; __futex uint32; __total_seq uint64; __wakeup_seq uint64; __woken_seq uint64; __mutex *byte; __nwaiters uint32; __broadcast_seq uint32; }; }
const _sizeof_pthread_cond_t = 48
type _pthread_condattr_t struct { __size [3+1]int8; Godump_0_align [0]int32; }
const _sizeof_pthread_condattr_t = 4
type _pthread_key_t uint32
type _pthread_once_t int32
type _pthread_rwlock_t struct { __data struct { __lock int32; __nr_readers uint32; __readers_wakeup uint32; __writer_wakeup uint32; __nr_readers_queued uint32; __nr_writers_queued uint32; __writer int32; __shared int32; __rwelision int8; __pad1 [6+1]uint8; __pad2 uint64; __flags uint32; Godump_0_pad [4]byte; }; }
const _sizeof_pthread_rwlock_t = 56
type _pthread_rwlockattr_t struct { __size [7+1]int8; Godump_0_align [0]int64; }
const _sizeof_pthread_rwlockattr_t = 8
type _pthread_spinlock_t int32
type _pthread_barrier_t struct { __size [31+1]int8; Godump_0_align [0]int64; }
const _sizeof_pthread_barrier_t = 32
type _pthread_barrierattr_t struct { __size [3+1]int8; Godump_0_align [0]int32; }
const _sizeof_pthread_barrierattr_t = 4
type _dirent struct { d_ino uint64; d_off int64; d_reclen uint16; d_type uint8; d_name [255+1]int8; Godump_0_pad [5]byte; }
const _sizeof_dirent = 280
type _dirent64 struct { d_ino uint64; d_off int64; d_reclen uint16; d_type uint8; d_name [255+1]int8; Godump_0_pad [5]byte; }
const _sizeof_dirent64 = 280
type _DIR struct { }
func _opendir (*int8) *_DIR __asm__("opendir")
func _fdopendir (int32) *_DIR __asm__("fdopendir")
func _closedir (*_DIR) int32 __asm__("closedir")
func _readdir (*_DIR) *_dirent __asm__("*readdir64")
func _readdir64 (*_DIR) *_dirent64 __asm__("readdir64")
func _readdir_r (*_DIR, *_dirent, **_dirent) int32 __asm__("*readdir64_r")
func _readdir64_r (*_DIR, *_dirent64, **_dirent64) int32 __asm__("readdir64_r")
func _rewinddir (*_DIR) __asm__("rewinddir")
func _seekdir (*_DIR, int64) __asm__("seekdir")
func _telldir (*_DIR) int64 __asm__("telldir")
func _dirfd (*_DIR) int32 __asm__("dirfd")
func _scandir (*int8, ***_dirent, func(*_dirent) int32, func(**_dirent, **_dirent) int32) int32 __asm__("*scandir64")
func _scandir64 (*int8, ***_dirent64, func(*_dirent64) int32, func(**_dirent64, **_dirent64) int32) int32 __asm__("scandir64")
func _scandirat (int32, *int8, ***_dirent, func(*_dirent) int32, func(**_dirent, **_dirent) int32) int32 __asm__("*scandirat64")
func _scandirat64 (int32, *int8, ***_dirent64, func(*_dirent64) int32, func(**_dirent64, **_dirent64) int32) int32 __asm__("scandirat64")
func _alphasort (**_dirent, **_dirent) int32 __asm__("*alphasort64")
func _alphasort64 (**_dirent64, **_dirent64) int32 __asm__("alphasort64")
func _getdirentries (int32, *int8, uint64, *int64) int64 __asm__("*getdirentries64")
func _getdirentries64 (int32, *int8, uint64, *int64) int64 __asm__("getdirentries64")
func _versionsort (**_dirent, **_dirent) int32 __asm__("*versionsort64")
func _versionsort64 (**_dirent64, **_dirent64) int32 __asm__("versionsort64")
func ___errno_location () *int32 __asm__("__errno_location")
var _program_invocation_name *int8
var _program_invocation_short_name *int8
type _error_t int32
type _flock struct { l_type int16; l_whence int16; l_start int64; l_len int64; l_pid int32; Godump_0_pad [4]byte; }
const _sizeof_flock = 32
type _flock64 struct { l_type int16; l_whence int16; l_start int64; l_len int64; l_pid int32; Godump_0_pad [4]byte; }
const _sizeof_flock64 = 32
type _iovec struct { iov_base *byte; iov_len uint64; }
const _sizeof_iovec = 16
type _f_owner_ex struct { _type uint32; pid int32; }
const _sizeof_f_owner_ex = 8
type _file_handle struct { handle_bytes uint32; handle_type int32; f_handle [0]uint8; }
const _sizeof_file_handle = 8
func _readahead (int32, int64, uint64) int64 __asm__("readahead")
func _sync_file_range (int32, int64, int64, uint32) int32 __asm__("sync_file_range")
func _vmsplice (int32, *_iovec, uint64, uint32) int64 __asm__("vmsplice")
func _splice (int32, *int64, int32, *int64, uint64, uint32) int64 __asm__("splice")
func _tee (int32, int32, uint64, uint32) int64 __asm__("tee")
func _fallocate (int32, int32, int64, int64) int32 __asm__("*fallocate64")
func _fallocate64 (int32, int32, int64, int64) int32 __asm__("fallocate64")
func _name_to_handle_at (int32, *int8, *_file_handle, *int32, int32) int32 __asm__("name_to_handle_at")
func _open_by_handle_at (int32, *_file_handle, int32) int32 __asm__("open_by_handle_at")
type _stat struct { st_dev uint64; st_ino uint64; st_nlink uint64; st_mode uint32; st_uid uint32; st_gid uint32; __pad0 int32; st_rdev uint64; st_size int64; st_blksize int64; st_blocks int64; st_atim _timespec; st_mtim _timespec; st_ctim _timespec; __glibc_reserved [2+1]int64; }
const _sizeof_stat = 144
type _stat64 struct { st_dev uint64; st_ino uint64; st_nlink uint64; st_mode uint32; st_uid uint32; st_gid uint32; __pad0 int32; st_rdev uint64; st_size int64; st_blksize int64; st_blocks int64; st_atim _timespec; st_mtim _timespec; st_ctim _timespec; __glibc_reserved [2+1]int64; }
const _sizeof_stat64 = 144
func _fcntl (int32, int32, ...interface{}) int32 __asm__("fcntl")
func _open (*int8, int32, ...interface{}) int32 __asm__("*open64")
func _open64 (*int8, int32, ...interface{}) int32 __asm__("open64")
func _openat (int32, *int8, int32, ...interface{}) int32 __asm__("*openat64")
func _openat64 (int32, *int8, int32, ...interface{}) int32 __asm__("openat64")
func _creat (*int8, uint32) int32 __asm__("*creat64")
func _creat64 (*int8, uint32) int32 __asm__("creat64")
func _lockf (int32, int32, int64) int32 __asm__("*lockf64")
func _lockf64 (int32, int32, int64) int32 __asm__("lockf64")
func _posix_fadvise (int32, int64, int64, int32) int32 __asm__("*posix_fadvise64")
func _posix_fadvise64 (int32, int64, int64, int32) int32 __asm__("posix_fadvise64")
func _posix_fallocate (int32, int64, int64) int32 __asm__("*posix_fallocate64")
func _posix_fallocate64 (int32, int64, int64) int32 __asm__("posix_fallocate64")
func ___sigismember (*___sigset_t, int32) int32 __asm__("__sigismember")
func ___sigaddset (*___sigset_t, int32) int32 __asm__("__sigaddset")
func ___sigdelset (*___sigset_t, int32) int32 __asm__("__sigdelset")
type _sig_atomic_t int32
type _sigval struct { sival_int int32; Godump_0_pad [4]byte; Godump_1_align [0]int64; }
const _sizeof_sigval = 8
type _sigval_t struct { sival_int int32; Godump_0_pad [4]byte; Godump_1_align [0]int64; }
const _sizeof_sigval_t = 8
type ___sigchld_clock_t int64
type _siginfo_t struct { si_signo int32; si_errno int32; si_code int32; _sifields struct { _pad [27+1]int32; Godump_0_align [0]int64; }; }
const _sizeof_siginfo_t = 128
type _sigevent struct { sigev_value _sigval_t; sigev_signo int32; sigev_notify int32; _sigev_un struct { _pad [11+1]int32; Godump_0_align [0]int64; }; }
const _sizeof_sigevent = 64
type _sigevent_t struct { sigev_value _sigval_t; sigev_signo int32; sigev_notify int32; _sigev_un struct { _pad [11+1]int32; Godump_0_align [0]int64; }; }
const _sizeof_sigevent_t = 64
type ___sighandler_t func(int32)
func ___sysv_signal (int32, ___sighandler_t) ___sighandler_t __asm__("__sysv_signal")
func _sysv_signal (int32, ___sighandler_t) ___sighandler_t __asm__("sysv_signal")
func _signal (int32, ___sighandler_t) ___sighandler_t __asm__("signal")
func _bsd_signal (int32, ___sighandler_t) ___sighandler_t __asm__("bsd_signal")
func _kill (int32, int32) int32 __asm__("kill")
func _killpg (int32, int32) int32 __asm__("killpg")
func _raise (int32) int32 __asm__("raise")
func _ssignal (int32, ___sighandler_t) ___sighandler_t __asm__("ssignal")
func _gsignal (int32) int32 __asm__("gsignal")
func _psignal (int32, *int8) __asm__("psignal")
func _psiginfo (*_siginfo_t, *int8) __asm__("psiginfo")
func _sigpause (int32) int32 __asm__("*__xpg_sigpause")
func _sigblock (int32) int32 __asm__("sigblock")
func _sigsetmask (int32) int32 __asm__("sigsetmask")
func _siggetmask () int32 __asm__("siggetmask")
type _sighandler_t func(int32)
type _sig_t func(int32)
func _sigemptyset (*_sigset_t) int32 __asm__("sigemptyset")
func _sigfillset (*_sigset_t) int32 __asm__("sigfillset")
func _sigaddset (*_sigset_t, int32) int32 __asm__("sigaddset")
func _sigdelset (*_sigset_t, int32) int32 __asm__("sigdelset")
func _sigismember (*_sigset_t, int32) int32 __asm__("sigismember")
func _sigisemptyset (*_sigset_t) int32 __asm__("sigisemptyset")
func _sigandset (*_sigset_t, *_sigset_t, *_sigset_t) int32 __asm__("sigandset")
func _sigorset (*_sigset_t, *_sigset_t, *_sigset_t) int32 __asm__("sigorset")
type _sigaction struct { __sigaction_handler struct { sa_handler ___sighandler_t; }; sa_mask ___sigset_t; sa_flags int32; sa_restorer func(); }
const _sizeof_sigaction = 152
func _sigprocmask (int32, *_sigset_t, *_sigset_t) int32 __asm__("sigprocmask")
func _sigsuspend (*_sigset_t) int32 __asm__("sigsuspend")
func _sigaction (int32, *_sigaction, *_sigaction) int32 __asm__("sigaction")
func _sigpending (*_sigset_t) int32 __asm__("sigpending")
func _sigwait (*_sigset_t, *int32) int32 __asm__("sigwait")
func _sigwaitinfo (*_sigset_t, *_siginfo_t) int32 __asm__("sigwaitinfo")
func _sigtimedwait (*_sigset_t, *_siginfo_t, *_timespec) int32 __asm__("sigtimedwait")
func _sigqueue (int32, int32, struct { sival_int int32; Godump_0_pad [4]byte; Godump_1_align [0]int64; }) int32 __asm__("sigqueue")
var __sys_siglist [64+1]*int8
var _sys_siglist [64+1]*int8
type __fpx_sw_bytes struct { magic1 uint32; extended_size uint32; xstate_bv uint64; xstate_size uint32; padding [6+1]uint32; }
const _sizeof__fpx_sw_bytes = 48
type __fpreg struct { significand [3+1]uint16; exponent uint16; }
const _sizeof__fpreg = 10
type __fpxreg struct { significand [3+1]uint16; exponent uint16; padding [2+1]uint16; }
const _sizeof__fpxreg = 16
type __xmmreg struct { element [3+1]uint32; }
const _sizeof__xmmreg = 16
type __fpstate struct { cwd uint16; swd uint16; ftw uint16; fop uint16; rip uint64; rdp uint64; mxcsr uint32; mxcr_mask uint32; _st [7+1]__fpxreg; _xmm [15+1]__xmmreg; padding [23+1]uint32; }
const _sizeof__fpstate = 512
type _sigcontext struct { r8 uint64; r9 uint64; r10 uint64; r11 uint64; r12 uint64; r13 uint64; r14 uint64; r15 uint64; rdi uint64; rsi uint64; rbp uint64; rbx uint64; rdx uint64; rax uint64; rcx uint64; rsp uint64; rip uint64; eflags uint64; cs uint16; gs uint16; fs uint16; __pad0 uint16; err uint64; trapno uint64; oldmask uint64; cr2 uint64; fpstate *__fpstate; __reserved1 [7+1]uint64; }
const _sizeof_sigcontext = 256
type __xsave_hdr struct { xstate_bv uint64; reserved1 [1+1]uint64; reserved2 [4+1]uint64; }
const _sizeof__xsave_hdr = 64
type __ymmh_state struct { ymmh_space [63+1]uint32; }
const _sizeof__ymmh_state = 256
type __xstate struct { fpstate __fpstate; xstate_hdr __xsave_hdr; ymmh __ymmh_state; }
const _sizeof__xstate = 832
func _sigreturn (*_sigcontext) int32 __asm__("sigreturn")
func _siginterrupt (int32, int32) int32 __asm__("siginterrupt")
type _sigstack struct { ss_sp *byte; ss_onstack int32; Godump_0_pad [4]byte; }
const _sizeof_sigstack = 16
type _sigaltstack struct { ss_sp *byte; ss_flags int32; ss_size uint64; }
const _sizeof_sigaltstack = 24
type _stack_t struct { ss_sp *byte; ss_flags int32; ss_size uint64; }
const _sizeof_stack_t = 24
func _sigstack (*_sigstack, *_sigstack) int32 __asm__("sigstack")
func _sigaltstack (*_sigaltstack, *_sigaltstack) int32 __asm__("sigaltstack")
func _sighold (int32) int32 __asm__("sighold")
func _sigrelse (int32) int32 __asm__("sigrelse")
func _sigignore (int32) int32 __asm__("sigignore")
func _sigset (int32, ___sighandler_t) ___sighandler_t __asm__("sigset")
func _pthread_sigmask (int32, *___sigset_t, *___sigset_t) int32 __asm__("pthread_sigmask")
func _pthread_kill (uint64, int32) int32 __asm__("pthread_kill")
func _pthread_sigqueue (uint64, int32, _sigval) int32 __asm__("pthread_sigqueue")
func ___libc_current_sigrtmin () int32 __asm__("__libc_current_sigrtmin")
func ___libc_current_sigrtmax () int32 __asm__("__libc_current_sigrtmax")
type _greg_t int64
type _gregset_t [22+1]int64
type __libc_fpxreg struct { significand [3+1]uint16; exponent uint16; padding [2+1]uint16; }
const _sizeof__libc_fpxreg = 16
type __libc_xmmreg struct { element [3+1]uint32; }
const _sizeof__libc_xmmreg = 16
type __libc_fpstate struct { cwd uint16; swd uint16; ftw uint16; fop uint16; rip uint64; rdp uint64; mxcsr uint32; mxcr_mask uint32; _st [7+1]__libc_fpxreg; _xmm [15+1]__libc_xmmreg; padding [23+1]uint32; }
const _sizeof__libc_fpstate = 512
type _fpregset_t *__libc_fpstate
type _mcontext_t struct { gregs _gregset_t; fpregs _fpregset_t; __reserved1 [7+1]uint64; }
const _sizeof_mcontext_t = 256
type _ucontext struct { uc_flags uint64; uc_link *_ucontext; uc_stack _stack_t; uc_mcontext _mcontext_t; uc_sigmask ___sigset_t; __fpregs_mem __libc_fpstate; }
const _sizeof_ucontext = 936
type _ucontext_t struct { uc_flags uint64; uc_link *_ucontext; uc_stack _stack_t; uc_mcontext _mcontext_t; uc_sigmask ___sigset_t; __fpregs_mem __libc_fpstate; }
const _sizeof_ucontext_t = 936
func _getcontext (*_ucontext_t) int32 __asm__("getcontext")
func _setcontext (*_ucontext_t) int32 __asm__("setcontext")
func _swapcontext (*_ucontext_t, *_ucontext_t) int32 __asm__("swapcontext")
func _makecontext (*_ucontext_t, func(), int32, ...interface{}) __asm__("makecontext")
type _uint8_t uint8
type _uint16_t uint16
type _uint32_t uint32
type _uint64_t uint64
type _int_least8_t int8
type _int_least16_t int16
type _int_least32_t int32
type _int_least64_t int64
type _uint_least8_t uint8
type _uint_least16_t uint16
type _uint_least32_t uint32
type _uint_least64_t uint64
type _int_fast8_t int8
type _int_fast16_t int64
type _int_fast32_t int64
type _int_fast64_t int64
type _uint_fast8_t uint8
type _uint_fast16_t uint64
type _uint_fast32_t uint64
type _uint_fast64_t uint64
type _intptr_t int64
type _uintptr_t uint64
type _intmax_t int64
type _uintmax_t uint64
func _process_vm_readv (int32, *_iovec, uint64, *_iovec, uint64, uint64) int64 __asm__("process_vm_readv")
func _process_vm_writev (int32, *_iovec, uint64, *_iovec, uint64, uint64) int64 __asm__("process_vm_writev")
func _readv (int32, *_iovec, int32) int64 __asm__("readv")
func _writev (int32, *_iovec, int32) int64 __asm__("writev")
func _preadv (int32, *_iovec, int32, int64) int64 __asm__("*preadv64")
func _pwritev (int32, *_iovec, int32, int64) int64 __asm__("*pwritev64")
func _preadv64 (int32, *_iovec, int32, int64) int64 __asm__("preadv64")
func _pwritev64 (int32, *_iovec, int32, int64) int64 __asm__("pwritev64")
type _socklen_t uint32
type _sa_family_t uint16
type _sockaddr struct { sa_family uint16; sa_data [13+1]int8; }
const _sizeof_sockaddr = 16
type _sockaddr_storage struct { ss_family uint16; __ss_padding [117+1]int8; __ss_align uint64; }
const _sizeof_sockaddr_storage = 128
type _msghdr struct { msg_name *byte; msg_namelen uint32; msg_iov *_iovec; msg_iovlen uint64; msg_control *byte; msg_controllen uint64; msg_flags int32; Godump_0_pad [4]byte; }
const _sizeof_msghdr = 56
type _cmsghdr struct { cmsg_len uint64; cmsg_level int32; cmsg_type int32; __cmsg_data [0]uint8; }
const _sizeof_cmsghdr = 16
func ___cmsg_nxthdr (*_msghdr, *_cmsghdr) *_cmsghdr __asm__("__cmsg_nxthdr")
type _ucred struct { pid int32; uid uint32; gid uint32; }
const _sizeof_ucred = 12
type _linger struct { l_onoff int32; l_linger int32; }
const _sizeof_linger = 8
type _osockaddr struct { sa_family uint16; sa_data [13+1]uint8; }
const _sizeof_osockaddr = 16
type ___SOCKADDR_ARG struct { __sockaddr__ *_sockaddr; }
const _sizeof___SOCKADDR_ARG = 8
type ___CONST_SOCKADDR_ARG struct { __sockaddr__ *_sockaddr; }
const _sizeof___CONST_SOCKADDR_ARG = 8
type _mmsghdr struct { msg_hdr _msghdr; msg_len uint32; Godump_0_pad [4]byte; }
const _sizeof_mmsghdr = 64
func _socket (int32, int32, int32) int32 __asm__("socket")
func _socketpair (int32, int32, int32, *int32) int32 __asm__("socketpair")
func _bind (int32, ___CONST_SOCKADDR_ARG, uint32) int32 __asm__("bind")
func _getsockname (int32, ___SOCKADDR_ARG, *uint32) int32 __asm__("getsockname")
func _connect (int32, ___CONST_SOCKADDR_ARG, uint32) int32 __asm__("connect")
func _getpeername (int32, ___SOCKADDR_ARG, *uint32) int32 __asm__("getpeername")
func _send (int32, *byte, uint64, int32) int64 __asm__("send")
func _recv (int32, *byte, uint64, int32) int64 __asm__("recv")
func _sendto (int32, *byte, uint64, int32, ___CONST_SOCKADDR_ARG, uint32) int64 __asm__("sendto")
func _recvfrom (int32, *byte, uint64, int32, ___SOCKADDR_ARG, *uint32) int64 __asm__("recvfrom")
func _sendmsg (int32, *_msghdr, int32) int64 __asm__("sendmsg")
func _sendmmsg (int32, *_mmsghdr, uint32, int32) int32 __asm__("sendmmsg")
func _recvmsg (int32, *_msghdr, int32) int64 __asm__("recvmsg")
func _recvmmsg (int32, *_mmsghdr, uint32, int32, *_timespec) int32 __asm__("recvmmsg")
func _getsockopt (int32, int32, int32, *byte, *uint32) int32 __asm__("getsockopt")
func _setsockopt (int32, int32, int32, *byte, uint32) int32 __asm__("setsockopt")
func _listen (int32, int32) int32 __asm__("listen")
func _accept (int32, ___SOCKADDR_ARG, *uint32) int32 __asm__("accept")
func _accept4 (int32, ___SOCKADDR_ARG, *uint32, int32) int32 __asm__("accept4")
func _shutdown (int32, int32) int32 __asm__("shutdown")
func _sockatmark (int32) int32 __asm__("sockatmark")
func _isfdtype (int32, int32) int32 __asm__("isfdtype")
type _in_addr_t uint32
type _in_addr struct { s_addr uint32; }
const _sizeof_in_addr = 4
type _ip_opts struct { ip_dst _in_addr; ip_opts [39+1]int8; }
const _sizeof_ip_opts = 44
type _ip_mreqn struct { imr_multiaddr _in_addr; imr_address _in_addr; imr_ifindex int32; }
const _sizeof_ip_mreqn = 12
type _in_pktinfo struct { ipi_ifindex int32; ipi_spec_dst _in_addr; ipi_addr _in_addr; }
const _sizeof_in_pktinfo = 12
type _in_port_t uint16
type _in6_addr struct { __in6_u struct { __u6_addr8 [15+1]uint8; Godump_0_align [0]int32; }; }
const _sizeof_in6_addr = 16
var _in6addr_any _in6_addr
var _in6addr_loopback _in6_addr
type _sockaddr_in struct { sin_family uint16; sin_port uint16; sin_addr _in_addr; sin_zero [7+1]uint8; }
const _sizeof_sockaddr_in = 16
type _sockaddr_in6 struct { sin6_family uint16; sin6_port uint16; sin6_flowinfo uint32; sin6_addr _in6_addr; sin6_scope_id uint32; }
const _sizeof_sockaddr_in6 = 28
type _ip_mreq struct { imr_multiaddr _in_addr; imr_interface _in_addr; }
const _sizeof_ip_mreq = 8
type _ip_mreq_source struct { imr_multiaddr _in_addr; imr_interface _in_addr; imr_sourceaddr _in_addr; }
const _sizeof_ip_mreq_source = 12
type _ipv6_mreq struct { ipv6mr_multiaddr _in6_addr; ipv6mr_interface uint32; }
const _sizeof_ipv6_mreq = 20
type _group_req struct { gr_interface uint32; gr_group _sockaddr_storage; }
const _sizeof_group_req = 136
type _group_source_req struct { gsr_interface uint32; gsr_group _sockaddr_storage; gsr_source _sockaddr_storage; }
const _sizeof_group_source_req = 264
type _ip_msfilter struct { imsf_multiaddr _in_addr; imsf_interface _in_addr; imsf_fmode uint32; imsf_numsrc uint32; imsf_slist [0+1]_in_addr; }
const _sizeof_ip_msfilter = 20
type _group_filter struct { gf_interface uint32; gf_group _sockaddr_storage; gf_fmode uint32; gf_numsrc uint32; gf_slist [0+1]_sockaddr_storage; }
const _sizeof_group_filter = 272
func _ntohl (uint32) uint32 __asm__("ntohl")
func _ntohs (uint16) uint16 __asm__("ntohs")
func _htonl (uint32) uint32 __asm__("htonl")
func _htons (uint16) uint16 __asm__("htons")
func _bindresvport (int32, *_sockaddr_in) int32 __asm__("bindresvport")
func _bindresvport6 (int32, *_sockaddr_in6) int32 __asm__("bindresvport6")
type _in6_pktinfo struct { ipi6_addr _in6_addr; ipi6_ifindex uint32; }
const _sizeof_in6_pktinfo = 20
type _ip6_mtuinfo struct { ip6m_addr _sockaddr_in6; ip6m_mtu uint32; }
const _sizeof_ip6_mtuinfo = 32
func _inet6_option_space (int32) int32 __asm__("inet6_option_space")
func _inet6_option_init (*byte, **_cmsghdr, int32) int32 __asm__("inet6_option_init")
func _inet6_option_append (*_cmsghdr, *uint8, int32, int32) int32 __asm__("inet6_option_append")
func _inet6_option_alloc (*_cmsghdr, int32, int32, int32) *uint8 __asm__("inet6_option_alloc")
func _inet6_option_next (*_cmsghdr, **uint8) int32 __asm__("inet6_option_next")
func _inet6_option_find (*_cmsghdr, **uint8, int32) int32 __asm__("inet6_option_find")
func _inet6_opt_init (*byte, uint32) int32 __asm__("inet6_opt_init")
func _inet6_opt_append (*byte, uint32, int32, uint8, uint32, uint8, **byte) int32 __asm__("inet6_opt_append")
func _inet6_opt_finish (*byte, uint32, int32) int32 __asm__("inet6_opt_finish")
func _inet6_opt_set_val (*byte, int32, *byte, uint32) int32 __asm__("inet6_opt_set_val")
func _inet6_opt_next (*byte, uint32, int32, *uint8, *uint32, **byte) int32 __asm__("inet6_opt_next")
func _inet6_opt_find (*byte, uint32, int32, uint8, *uint32, **byte) int32 __asm__("inet6_opt_find")
func _inet6_opt_get_val (*byte, int32, *byte, uint32) int32 __asm__("inet6_opt_get_val")
func _inet6_rth_space (int32, int32) uint32 __asm__("inet6_rth_space")
func _inet6_rth_init (*byte, uint32, int32, int32) *byte __asm__("inet6_rth_init")
func _inet6_rth_add (*byte, *_in6_addr) int32 __asm__("inet6_rth_add")
func _inet6_rth_reverse (*byte, *byte) int32 __asm__("inet6_rth_reverse")
func _inet6_rth_segments (*byte) int32 __asm__("inet6_rth_segments")
func _inet6_rth_getaddr (*byte, int32) *_in6_addr __asm__("inet6_rth_getaddr")
func _getipv4sourcefilter (int32, _in_addr, _in_addr, *uint32, *uint32, *_in_addr) int32 __asm__("getipv4sourcefilter")
func _setipv4sourcefilter (int32, _in_addr, _in_addr, uint32, uint32, *_in_addr) int32 __asm__("setipv4sourcefilter")
func _getsourcefilter (int32, uint32, *_sockaddr, uint32, *uint32, *uint32, *_sockaddr_storage) int32 __asm__("getsourcefilter")
func _setsourcefilter (int32, uint32, *_sockaddr, uint32, uint32, uint32, *_sockaddr_storage) int32 __asm__("setsourcefilter")
type _tcp_seq uint32
type _tcphdr struct { th_sport uint16; th_dport uint16; th_seq uint32; th_ack uint32; Godump_0_pad [1]byte; th_flags uint8; th_win uint16; th_sum uint16; th_urp uint16; Godump_1_align [0]int32; }
const _sizeof_tcphdr = 20
type _tcp_info struct { tcpi_state uint8; tcpi_ca_state uint8; tcpi_retransmits uint8; tcpi_probes uint8; tcpi_backoff uint8; tcpi_options uint8; tcpi_rto uint32; tcpi_ato uint32; tcpi_snd_mss uint32; tcpi_rcv_mss uint32; tcpi_unacked uint32; tcpi_sacked uint32; tcpi_lost uint32; tcpi_retrans uint32; tcpi_fackets uint32; tcpi_last_data_sent uint32; tcpi_last_ack_sent uint32; tcpi_last_data_recv uint32; tcpi_last_ack_recv uint32; tcpi_pmtu uint32; tcpi_rcv_ssthresh uint32; tcpi_rtt uint32; tcpi_rttvar uint32; tcpi_snd_ssthresh uint32; tcpi_snd_cwnd uint32; tcpi_advmss uint32; tcpi_reordering uint32; tcpi_rcv_rtt uint32; tcpi_rcv_space uint32; tcpi_total_retrans uint32; }
const _sizeof_tcp_info = 104
type _tcp_md5sig struct { tcpm_addr _sockaddr_storage; __tcpm_pad1 uint16; tcpm_keylen uint16; __tcpm_pad2 uint32; tcpm_key [79+1]uint8; }
const _sizeof_tcp_md5sig = 216
type _tcp_repair_opt struct { opt_code uint32; opt_val uint32; }
const _sizeof_tcp_repair_opt = 8
type _tcp_cookie_transactions struct { tcpct_flags uint16; __tcpct_pad1 uint8; tcpct_cookie_desired uint8; tcpct_s_data_desired uint16; tcpct_used uint16; tcpct_value [535+1]uint8; }
const _sizeof_tcp_cookie_transactions = 544
type _timestamp struct { len uint8; ptr uint8; data [8+1]uint32; }
const _sizeof_timestamp = 40
type _iphdr struct { Godump_0_pad [1]byte; tos uint8; tot_len uint16; id uint16; frag_off uint16; ttl uint8; protocol uint8; check uint16; saddr uint32; daddr uint32; }
const _sizeof_iphdr = 20
type _ip struct { Godump_0_pad [1]byte; ip_tos uint8; ip_len uint16; ip_id uint16; ip_off uint16; ip_ttl uint8; ip_p uint8; ip_sum uint16; ip_src _in_addr; ip_dst _in_addr; }
const _sizeof_ip = 20
type _ip_timestamp struct { ipt_code uint8; ipt_len uint8; ipt_ptr uint8; data [8+1]uint32; }
const _sizeof_ip_timestamp = 40
type ___s8 int8
type ___u8 uint8
type ___s16 int16
type ___u16 uint16
type ___s32 int32
type ___u32 uint32
type ___s64 int64
type ___u64 uint64
type ___kernel_fd_set struct { fds_bits [15+1]uint64; }
const _sizeof___kernel_fd_set = 128
type ___kernel_sighandler_t func(int32)
type ___kernel_key_t int32
type ___kernel_mqd_t int32
type ___kernel_old_uid_t uint16
type ___kernel_old_gid_t uint16
type ___kernel_old_dev_t uint64
type ___kernel_long_t int64
type ___kernel_ulong_t uint64
type ___kernel_ino_t uint64
type ___kernel_mode_t uint32
type ___kernel_pid_t int32
type ___kernel_ipc_pid_t int32
type ___kernel_uid_t uint32
type ___kernel_gid_t uint32
type ___kernel_suseconds_t int64
type ___kernel_daddr_t int32
type ___kernel_uid32_t uint32
type ___kernel_gid32_t uint32
type ___kernel_size_t uint64
type ___kernel_ssize_t int64
type ___kernel_ptrdiff_t int64
type ___kernel_fsid_t struct { val [1+1]int32; }
const _sizeof___kernel_fsid_t = 8
type ___kernel_off_t int64
type ___kernel_loff_t int64
type ___kernel_time_t int64
type ___kernel_clock_t int64
type ___kernel_timer_t int32
type ___kernel_clockid_t int32
type ___kernel_caddr_t *int8
type ___kernel_uid16_t uint16
type ___kernel_gid16_t uint16
type ___le16 uint16
type ___be16 uint16
type ___le32 uint32
type ___be32 uint32
type ___le64 uint64
type ___be64 uint64
type ___sum16 uint16
type ___wsum uint32
type _ethhdr struct { h_dest [5+1]uint8; h_source [5+1]uint8; h_proto uint16; }
const _sizeof_ethhdr = 14
type _ether_addr struct { ether_addr_octet [5+1]uint8; }
const _sizeof_ether_addr = 6
type _ether_header struct { ether_dhost [5+1]uint8; ether_shost [5+1]uint8; ether_type uint16; }
const _sizeof_ether_header = 14
type _arphdr struct { ar_hrd uint16; ar_pro uint16; ar_hln uint8; ar_pln uint8; ar_op uint16; }
const _sizeof_arphdr = 8
type _arpreq struct { arp_pa _sockaddr; arp_ha _sockaddr; arp_flags int32; arp_netmask _sockaddr; arp_dev [15+1]int8; }
const _sizeof_arpreq = 68
type _arpreq_old struct { arp_pa _sockaddr; arp_ha _sockaddr; arp_flags int32; arp_netmask _sockaddr; }
const _sizeof_arpreq_old = 52
type _arpd_request struct { req uint16; ip uint32; dev uint64; stamp uint64; updated uint64; ha [6+1]uint8; Godump_0_pad [1]byte; }
const _sizeof_arpd_request = 40
type _ether_arp struct { ea_hdr _arphdr; arp_sha [5+1]uint8; arp_spa [3+1]uint8; arp_tha [5+1]uint8; arp_tpa [3+1]uint8; }
const _sizeof_ether_arp = 28
type _winsize struct { ws_row uint16; ws_col uint16; ws_xpixel uint16; ws_ypixel uint16; }
const _sizeof_winsize = 8
type _termio struct { c_iflag uint16; c_oflag uint16; c_cflag uint16; c_lflag uint16; c_line uint8; c_cc [7+1]uint8; Godump_0_pad [1]byte; }
const _sizeof_termio = 18
func _ioctl (int32, uint64, ...interface{}) int32 __asm__("ioctl")
type _cc_t uint8
type _speed_t uint32
type _tcflag_t uint32
type _termios struct { c_iflag uint32; c_oflag uint32; c_cflag uint32; c_lflag uint32; c_line uint8; c_cc [31+1]uint8; c_ispeed uint32; c_ospeed uint32; }
const _sizeof_termios = 60
func _cfgetospeed (*_termios) uint32 __asm__("cfgetospeed")
func _cfgetispeed (*_termios) uint32 __asm__("cfgetispeed")
func _cfsetospeed (*_termios, uint32) int32 __asm__("cfsetospeed")
func _cfsetispeed (*_termios, uint32) int32 __asm__("cfsetispeed")
func _cfsetspeed (*_termios, uint32) int32 __asm__("cfsetspeed")
func _tcgetattr (int32, *_termios) int32 __asm__("tcgetattr")
func _tcsetattr (int32, int32, *_termios) int32 __asm__("tcsetattr")
func _cfmakeraw (*_termios) __asm__("cfmakeraw")
func _tcsendbreak (int32, int32) int32 __asm__("tcsendbreak")
func _tcdrain (int32) int32 __asm__("tcdrain")
func _tcflush (int32, int32) int32 __asm__("tcflush")
func _tcflow (int32, int32) int32 __asm__("tcflow")
func _tcgetsid (int32) int32 __asm__("tcgetsid")
type _epoll_data struct { ptr *byte; }
const _sizeof_epoll_data = 8
type _epoll_data_t struct { ptr *byte; }
const _sizeof_epoll_data_t = 8
type _epoll_event struct { events uint32; data _epoll_data_t; }
const _sizeof_epoll_event = 12
func _epoll_create (int32) int32 __asm__("epoll_create")
func _epoll_create1 (int32) int32 __asm__("epoll_create1")
func _epoll_ctl (int32, int32, int32, *_epoll_event) int32 __asm__("epoll_ctl")
func _epoll_wait (int32, *_epoll_event, int32, int32) int32 __asm__("epoll_wait")
func _epoll_pwait (int32, *_epoll_event, int32, int32, *___sigset_t) int32 __asm__("epoll_pwait")
func _flock (int32, int32) int32 __asm__("flock")
func _mmap (*byte, uint64, int32, int32, int32, int64) *byte __asm__("*mmap64")
func _mmap64 (*byte, uint64, int32, int32, int32, int64) *byte __asm__("mmap64")
func _munmap (*byte, uint64) int32 __asm__("munmap")
func _mprotect (*byte, uint64, int32) int32 __asm__("mprotect")
func _msync (*byte, uint64, int32) int32 __asm__("msync")
func _madvise (*byte, uint64, int32) int32 __asm__("madvise")
func _posix_madvise (*byte, uint64, int32) int32 __asm__("posix_madvise")
func _mlock (*byte, uint64) int32 __asm__("mlock")
func _munlock (*byte, uint64) int32 __asm__("munlock")
func _mlockall (int32) int32 __asm__("mlockall")
func _munlockall () int32 __asm__("munlockall")
func _mincore (*byte, uint64, *uint8) int32 __asm__("mincore")
func _mremap (*byte, uint64, uint64, int32, ...interface{}) *byte __asm__("mremap")
func _remap_file_pages (*byte, uint64, int32, uint64, int32) int32 __asm__("remap_file_pages")
func _shm_open (*int8, int32, uint32) int32 __asm__("shm_open")
func _shm_unlink (*int8) int32 __asm__("shm_unlink")
type _prctl_mm_map struct { start_code uint64; end_code uint64; start_data uint64; end_data uint64; start_brk uint64; brk uint64; start_stack uint64; arg_start uint64; arg_end uint64; env_start uint64; env_end uint64; auxv *uint64; auxv_size uint32; exe_fd uint32; }
const _sizeof_prctl_mm_map = 104
func _prctl (int32, ...interface{}) int32 __asm__("prctl")
type ___ptrace_peeksiginfo_args struct { off uint64; flags uint32; nr int32; }
const _sizeof___ptrace_peeksiginfo_args = 16
func _ptrace (uint32, ...interface{}) int64 __asm__("ptrace")
type _rlim_t uint64
type _rlim64_t uint64
type _rlimit struct { rlim_cur uint64; rlim_max uint64; }
const _sizeof_rlimit = 16
type _rlimit64 struct { rlim_cur uint64; rlim_max uint64; }
const _sizeof_rlimit64 = 16
type _rusage struct { ru_utime _timeval; ru_stime _timeval; ru_maxrss int64; ru_ixrss int64; ru_idrss int64; ru_isrss int64; ru_minflt int64; ru_majflt int64; ru_nswap int64; ru_inblock int64; ru_oublock int64; ru_msgsnd int64; ru_msgrcv int64; ru_nsignals int64; ru_nvcsw int64; ru_nivcsw int64; }
const _sizeof_rusage = 144
func _prlimit (int32, uint32, *_rlimit, *_rlimit) int32 __asm__("*prlimit64")
func _prlimit64 (int32, uint32, *_rlimit64, *_rlimit64) int32 __asm__("prlimit64")
type ___rlimit_resource_t uint32
type ___rusage_who_t int32
type ___priority_which_t uint32
func _getrlimit (uint32, *_rlimit) int32 __asm__("*getrlimit64")
func _getrlimit64 (uint32, *_rlimit64) int32 __asm__("getrlimit64")
func _setrlimit (uint32, *_rlimit) int32 __asm__("*setrlimit64")
func _setrlimit64 (uint32, *_rlimit64) int32 __asm__("setrlimit64")
func _getrusage (int32, *_rusage) int32 __asm__("getrusage")
func _getpriority (uint32, uint32) int32 __asm__("getpriority")
func _setpriority (uint32, uint32, int32) int32 __asm__("setpriority")
func _stat (*int8, *_stat) int32 __asm__("*stat64")
func _fstat (int32, *_stat) int32 __asm__("*fstat64")
func _stat64 (*int8, *_stat64) int32 __asm__("stat64")
func _fstat64 (int32, *_stat64) int32 __asm__("fstat64")
func _fstatat (int32, *int8, *_stat, int32) int32 __asm__("*fstatat64")
func _fstatat64 (int32, *int8, *_stat64, int32) int32 __asm__("fstatat64")
func _lstat (*int8, *_stat) int32 __asm__("*lstat64")
func _lstat64 (*int8, *_stat64) int32 __asm__("lstat64")
func _chmod (*int8, uint32) int32 __asm__("chmod")
func _lchmod (*int8, uint32) int32 __asm__("lchmod")
func _fchmod (int32, uint32) int32 __asm__("fchmod")
func _fchmodat (int32, *int8, uint32, int32) int32 __asm__("fchmodat")
func _umask (uint32) uint32 __asm__("umask")
func _getumask () uint32 __asm__("getumask")
func _mkdir (*int8, uint32) int32 __asm__("mkdir")
func _mkdirat (int32, *int8, uint32) int32 __asm__("mkdirat")
func _mknod (*int8, uint32, uint64) int32 __asm__("mknod")
func _mknodat (int32, *int8, uint32, uint64) int32 __asm__("mknodat")
func _mkfifo (*int8, uint32) int32 __asm__("mkfifo")
func _mkfifoat (int32, *int8, uint32) int32 __asm__("mkfifoat")
func _utimensat (int32, *int8, *_timespec, int32) int32 __asm__("utimensat")
func _futimens (int32, *_timespec) int32 __asm__("futimens")
func ___fxstat (int32, int32, *_stat) int32 __asm__("*__fxstat64")
func ___xstat (int32, *int8, *_stat) int32 __asm__("*__xstat64")
func ___lxstat (int32, *int8, *_stat) int32 __asm__("*__lxstat64")
func ___fxstatat (int32, int32, *int8, *_stat, int32) int32 __asm__("*__fxstatat64")
func ___fxstat64 (int32, int32, *_stat64) int32 __asm__("__fxstat64")
func ___xstat64 (int32, *int8, *_stat64) int32 __asm__("__xstat64")
func ___lxstat64 (int32, *int8, *_stat64) int32 __asm__("__lxstat64")
func ___fxstatat64 (int32, int32, *int8, *_stat64, int32) int32 __asm__("__fxstatat64")
func ___xmknod (int32, *int8, uint32, *uint64) int32 __asm__("__xmknod")
func ___xmknodat (int32, int32, *int8, uint32, *uint64) int32 __asm__("__xmknodat")
type _timezone struct { tz_minuteswest int32; tz_dsttime int32; }
const _sizeof_timezone = 8
type ___timezone_ptr_t *_timezone
func _gettimeofday (*_timeval, ___timezone_ptr_t) int32 __asm__("gettimeofday")
func _settimeofday (*_timeval, *_timezone) int32 __asm__("settimeofday")
func _adjtime (*_timeval, *_timeval) int32 __asm__("adjtime")
type _itimerval struct { it_interval _timeval; it_value _timeval; }
const _sizeof_itimerval = 32
type ___itimer_which_t uint32
func _getitimer (uint32, *_itimerval) int32 __asm__("getitimer")
func _setitimer (uint32, *_itimerval, *_itimerval) int32 __asm__("setitimer")
func _utimes (*int8, *_timeval) int32 __asm__("utimes")
func _lutimes (*int8, *_timeval) int32 __asm__("lutimes")
func _futimes (int32, *_timeval) int32 __asm__("futimes")
func _futimesat (int32, *int8, *_timeval) int32 __asm__("futimesat")
type _tms struct { tms_utime int64; tms_stime int64; tms_cutime int64; tms_cstime int64; }
const _sizeof_tms = 32
func _times (*_tms) int64 __asm__("times")
type _idtype_t uint32
func _wait (*int32) int32 __asm__("wait")
func _waitpid (int32, *int32, int32) int32 __asm__("waitpid")
func _waitid (uint32, uint32, *_siginfo_t, int32) int32 __asm__("waitid")
func _wait3 (*int32, int32, *_rusage) int32 __asm__("wait3")
func _wait4 (int32, *int32, int32, *_rusage) int32 __asm__("wait4")
type _sockaddr_un struct { sun_family uint16; sun_path [107+1]int8; }
const _sizeof_sockaddr_un = 110
func _memcpy (*byte, *byte, uint64) *byte __asm__("memcpy")
func _memmove (*byte, *byte, uint64) *byte __asm__("memmove")
func _memccpy (*byte, *byte, int32, uint64) *byte __asm__("memccpy")
func _memset (*byte, int32, uint64) *byte __asm__("memset")
func _memcmp (*byte, *byte, uint64) int32 __asm__("memcmp")
func _memchr (*byte, int32, uint64) *byte __asm__("memchr")
func _rawmemchr (*byte, int32) *byte __asm__("rawmemchr")
func _memrchr (*byte, int32, uint64) *byte __asm__("memrchr")
func _strcpy (*int8, *int8) *int8 __asm__("strcpy")
func _strncpy (*int8, *int8, uint64) *int8 __asm__("strncpy")
func _strcat (*int8, *int8) *int8 __asm__("strcat")
func _strncat (*int8, *int8, uint64) *int8 __asm__("strncat")
func _strcmp (*int8, *int8) int32 __asm__("strcmp")
func _strncmp (*int8, *int8, uint64) int32 __asm__("strncmp")
func _strcoll (*int8, *int8) int32 __asm__("strcoll")
func _strxfrm (*int8, *int8, uint64) uint64 __asm__("strxfrm")
type ___locale_struct struct { __locales [12+1]*___locale_data; __ctype_b *uint16; __ctype_tolower *int32; __ctype_toupper *int32; __names [12+1]*int8; }
const _sizeof___locale_struct = 232
type ___locale_t *___locale_struct
type _locale_t *___locale_struct
func _strcoll_l (*int8, *int8, ___locale_t) int32 __asm__("strcoll_l")
func _strxfrm_l (*int8, *int8, uint64, ___locale_t) uint64 __asm__("strxfrm_l")
func _strdup (*int8) *int8 __asm__("strdup")
func _strndup (*int8, uint64) *int8 __asm__("strndup")
func _strchr (*int8, int32) *int8 __asm__("strchr")
func _strrchr (*int8, int32) *int8 __asm__("strrchr")
func _strchrnul (*int8, int32) *int8 __asm__("strchrnul")
func _strcspn (*int8, *int8) uint64 __asm__("strcspn")
func _strspn (*int8, *int8) uint64 __asm__("strspn")
func _strpbrk (*int8, *int8) *int8 __asm__("strpbrk")
func _strstr (*int8, *int8) *int8 __asm__("strstr")
func _strtok (*int8, *int8) *int8 __asm__("strtok")
func ___strtok_r (*int8, *int8, **int8) *int8 __asm__("__strtok_r")
func _strtok_r (*int8, *int8, **int8) *int8 __asm__("strtok_r")
func _strcasestr (*int8, *int8) *int8 __asm__("strcasestr")
func _memmem (*byte, uint64, *byte, uint64) *byte __asm__("memmem")
func ___mempcpy (*byte, *byte, uint64) *byte __asm__("__mempcpy")
func _mempcpy (*byte, *byte, uint64) *byte __asm__("mempcpy")
func _strlen (*int8) uint64 __asm__("strlen")
func _strnlen (*int8, uint64) uint64 __asm__("strnlen")
func _strerror (int32) *int8 __asm__("strerror")
func _strerror_r (int32, *int8, uint64) *int8 __asm__("strerror_r")
func _strerror_l (int32, ___locale_t) *int8 __asm__("strerror_l")
func ___bzero (*byte, uint64) __asm__("__bzero")
func _bcopy (*byte, *byte, uint64) __asm__("bcopy")
func _bzero (*byte, uint64) __asm__("bzero")
func _bcmp (*byte, *byte, uint64) int32 __asm__("bcmp")
func _index (*int8, int32) *int8 __asm__("index")
func _rindex (*int8, int32) *int8 __asm__("rindex")
func _ffs (int32) int32 __asm__("ffs")
func _ffsl (int64) int32 __asm__("ffsl")
func _ffsll (int64) int32 __asm__("ffsll")
func _strcasecmp (*int8, *int8) int32 __asm__("strcasecmp")
func _strncasecmp (*int8, *int8, uint64) int32 __asm__("strncasecmp")
func _strcasecmp_l (*int8, *int8, ___locale_t) int32 __asm__("strcasecmp_l")
func _strncasecmp_l (*int8, *int8, uint64, ___locale_t) int32 __asm__("strncasecmp_l")
func _strsep (**int8, *int8) *int8 __asm__("strsep")
func _strsignal (int32) *int8 __asm__("strsignal")
func ___stpcpy (*int8, *int8) *int8 __asm__("__stpcpy")
func _stpcpy (*int8, *int8) *int8 __asm__("stpcpy")
func ___stpncpy (*int8, *int8, uint64) *int8 __asm__("__stpncpy")
func _stpncpy (*int8, *int8, uint64) *int8 __asm__("stpncpy")
func _strverscmp (*int8, *int8) int32 __asm__("strverscmp")
func _strfry (*int8) *int8 __asm__("strfry")
func _memfrob (*byte, uint64) *byte __asm__("memfrob")
func _basename (*int8) *int8 __asm__("basename")
func ___rawmemchr (*byte, int32) *byte __asm__("__rawmemchr")
func ___strtok_r_1c (*int8, int8, **int8) *int8 __asm__("__strtok_r_1c")
func ___strsep_g (**int8, *int8) *int8 __asm__("__strsep_g")
func ___strsep_1c (**int8, int8) *int8 __asm__("__strsep_1c")
func ___strsep_2c (**int8, int8, int8) *int8 __asm__("__strsep_2c")
func ___strsep_3c (**int8, int8, int8, int8) *int8 __asm__("__strsep_3c")
func _malloc (uint64) *byte __asm__("malloc")
func _calloc (uint64, uint64) *byte __asm__("calloc")
func ___strdup (*int8) *int8 __asm__("__strdup")
func ___strndup (*int8, uint64) *int8 __asm__("__strndup")
type _user_fpregs_struct struct { cwd uint16; swd uint16; ftw uint16; fop uint16; rip uint64; rdp uint64; mxcsr uint32; mxcr_mask uint32; st_space [31+1]uint32; xmm_space [63+1]uint32; padding [23+1]uint32; }
const _sizeof_user_fpregs_struct = 512
type _user_regs_struct struct { r15 uint64; r14 uint64; r13 uint64; r12 uint64; rbp uint64; rbx uint64; r11 uint64; r10 uint64; r9 uint64; r8 uint64; rax uint64; rcx uint64; rdx uint64; rsi uint64; rdi uint64; orig_rax uint64; rip uint64; cs uint64; eflags uint64; rsp uint64; ss uint64; fs_base uint64; gs_base uint64; ds uint64; es uint64; fs uint64; gs uint64; }
const _sizeof_user_regs_struct = 216
type _user struct { regs _user_regs_struct; u_fpvalid int32; i387 _user_fpregs_struct; u_tsize uint64; u_dsize uint64; u_ssize uint64; start_code uint64; start_stack uint64; signal int64; reserved int32; Godump_0_pad [4]byte; u_ar0 *_user_regs_struct; u_fpstate *_user_fpregs_struct; magic uint64; u_comm [31+1]int8; u_debugreg [7+1]uint64; }
const _sizeof_user = 912
type _utsname struct { sysname [64+1]int8; nodename [64+1]int8; release [64+1]int8; version [64+1]int8; machine [64+1]int8; domainname [64+1]int8; }
const _sizeof_utsname = 390
func _uname (*_utsname) int32 __asm__("uname")
type _timex struct { modes uint32; offset int64; freq int64; maxerror int64; esterror int64; status int32; constant int64; precision int64; tolerance int64; time _timeval; tick int64; ppsfreq int64; jitter int64; shift int32; stabil int64; jitcnt int64; calcnt int64; errcnt int64; stbcnt int64; tai int32; Godump_0 int32; Godump_1 int32; Godump_2 int32; Godump_3 int32; Godump_4 int32; Godump_5 int32; Godump_6 int32; Godump_7 int32; Godump_8 int32; Godump_9 int32; Godump_10 int32; }
const _sizeof_timex = 208
func _clock_adjtime (int32, *_timex) int32 __asm__("clock_adjtime")
type _tm struct { tm_sec int32; tm_min int32; tm_hour int32; tm_mday int32; tm_mon int32; tm_year int32; tm_wday int32; tm_yday int32; tm_isdst int32; tm_gmtoff int64; tm_zone *int8; }
const _sizeof_tm = 56
type _itimerspec struct { it_interval _timespec; it_value _timespec; }
const _sizeof_itimerspec = 32
func _clock () int64 __asm__("clock")
func _time (*int64) int64 __asm__("time")
func _difftime (int64, int64) float64 __asm__("difftime")
func _mktime (*_tm) int64 __asm__("mktime")
func _strftime (*int8, uint64, *int8, *_tm) uint64 __asm__("strftime")
func _strptime (*int8, *int8, *_tm) *int8 __asm__("strptime")
func _strftime_l (*int8, uint64, *int8, *_tm, ___locale_t) uint64 __asm__("strftime_l")
func _strptime_l (*int8, *int8, *_tm, ___locale_t) *int8 __asm__("strptime_l")
func _gmtime (*int64) *_tm __asm__("gmtime")
func _localtime (*int64) *_tm __asm__("localtime")
func _gmtime_r (*int64, *_tm) *_tm __asm__("gmtime_r")
func _localtime_r (*int64, *_tm) *_tm __asm__("localtime_r")
func _asctime (*_tm) *int8 __asm__("asctime")
func _ctime (*int64) *int8 __asm__("ctime")
func _asctime_r (*_tm, *int8) *int8 __asm__("asctime_r")
func _ctime_r (*int64, *int8) *int8 __asm__("ctime_r")
var ___tzname [1+1]*int8
var ___daylight int32
var ___timezone int64
var _tzname [1+1]*int8
func _tzset () __asm__("tzset")
var _daylight int32
// var _timezone int64
func _stime (*int64) int32 __asm__("stime")
func _timegm (*_tm) int64 __asm__("timegm")
func _timelocal (*_tm) int64 __asm__("timelocal")
func _dysize (int32) int32 __asm__("dysize")
func _nanosleep (*_timespec, *_timespec) int32 __asm__("nanosleep")
func _clock_getres (int32, *_timespec) int32 __asm__("clock_getres")
func _clock_gettime (int32, *_timespec) int32 __asm__("clock_gettime")
func _clock_settime (int32, *_timespec) int32 __asm__("clock_settime")
func _clock_nanosleep (int32, int32, *_timespec, *_timespec) int32 __asm__("clock_nanosleep")
func _clock_getcpuclockid (int32, *int32) int32 __asm__("clock_getcpuclockid")
func _timer_create (int32, *_sigevent, *_timer_t) int32 __asm__("timer_create")
func _timer_delete (_timer_t) int32 __asm__("timer_delete")
func _timer_settime (_timer_t, int32, *_itimerspec, *_itimerspec) int32 __asm__("timer_settime")
func _timer_gettime (_timer_t, *_itimerspec) int32 __asm__("timer_gettime")
func _timer_getoverrun (_timer_t) int32 __asm__("timer_getoverrun")
func _timespec_get (*_timespec, int32) int32 __asm__("timespec_get")
var _getdate_err int32
func _getdate (*int8) *_tm __asm__("getdate")
func _getdate_r (*int8, *_tm) int32 __asm__("getdate_r")
func _access (*int8, int32) int32 __asm__("access")
func _euidaccess (*int8, int32) int32 __asm__("euidaccess")
func _eaccess (*int8, int32) int32 __asm__("eaccess")
func _faccessat (int32, *int8, int32, int32) int32 __asm__("faccessat")
func _lseek (int32, int64, int32) int64 __asm__("*lseek64")
func _lseek64 (int32, int64, int32) int64 __asm__("lseek64")
func _close (int32) int32 __asm__("close")
func _read (int32, *byte, uint64) int64 __asm__("read")
func _write (int32, *byte, uint64) int64 __asm__("write")
func _pread (int32, *byte, uint64, int64) int64 __asm__("*pread64")
func _pwrite (int32, *byte, uint64, int64) int64 __asm__("*pwrite64")
func _pread64 (int32, *byte, uint64, int64) int64 __asm__("pread64")
func _pwrite64 (int32, *byte, uint64, int64) int64 __asm__("pwrite64")
func _pipe (*int32) int32 __asm__("pipe")
func _pipe2 (*int32, int32) int32 __asm__("pipe2")
func _alarm (uint32) uint32 __asm__("alarm")
func _sleep (uint32) uint32 __asm__("sleep")
func _ualarm (uint32, uint32) uint32 __asm__("ualarm")
func _usleep (uint32) int32 __asm__("usleep")
func _pause () int32 __asm__("pause")
func _chown (*int8, uint32, uint32) int32 __asm__("chown")
func _fchown (int32, uint32, uint32) int32 __asm__("fchown")
func _lchown (*int8, uint32, uint32) int32 __asm__("lchown")
func _fchownat (int32, *int8, uint32, uint32, int32) int32 __asm__("fchownat")
func _chdir (*int8) int32 __asm__("chdir")
func _fchdir (int32) int32 __asm__("fchdir")
func _getcwd (*int8, uint64) *int8 __asm__("getcwd")
func _get_current_dir_name () *int8 __asm__("get_current_dir_name")
func _getwd (*int8) *int8 __asm__("getwd")
func _dup (int32) int32 __asm__("dup")
func _dup2 (int32, int32) int32 __asm__("dup2")
func _dup3 (int32, int32, int32) int32 __asm__("dup3")
var ___environ **int8
var _environ **int8
func _execve (*int8, **int8, **int8) int32 __asm__("execve")
func _fexecve (int32, **int8, **int8) int32 __asm__("fexecve")
func _execv (*int8, **int8) int32 __asm__("execv")
func _execle (*int8, *int8, ...interface{}) int32 __asm__("execle")
func _execl (*int8, *int8, ...interface{}) int32 __asm__("execl")
func _execvp (*int8, **int8) int32 __asm__("execvp")
func _execlp (*int8, *int8, ...interface{}) int32 __asm__("execlp")
func _execvpe (*int8, **int8, **int8) int32 __asm__("execvpe")
func _nice (int32) int32 __asm__("nice")
func __exit (int32) __asm__("_exit")
func _pathconf (*int8, int32) int64 __asm__("pathconf")
func _fpathconf (int32, int32) int64 __asm__("fpathconf")
func _sysconf (int32) int64 __asm__("sysconf")
func _confstr (int32, *int8, uint64) uint64 __asm__("confstr")
func _getpid () int32 __asm__("getpid")
func _getppid () int32 __asm__("getppid")
func _getpgrp () int32 __asm__("getpgrp")
func ___getpgid (int32) int32 __asm__("__getpgid")
func _getpgid (int32) int32 __asm__("getpgid")
func _setpgid (int32, int32) int32 __asm__("setpgid")
func _setpgrp () int32 __asm__("setpgrp")
func _setsid () int32 __asm__("setsid")
func _getsid (int32) int32 __asm__("getsid")
func _getuid () uint32 __asm__("getuid")
func _geteuid () uint32 __asm__("geteuid")
func _getgid () uint32 __asm__("getgid")
func _getegid () uint32 __asm__("getegid")
func _getgroups (int32, *uint32) int32 __asm__("getgroups")
func _group_member (uint32) int32 __asm__("group_member")
func _setuid (uint32) int32 __asm__("setuid")
func _setreuid (uint32, uint32) int32 __asm__("setreuid")
func _seteuid (uint32) int32 __asm__("seteuid")
func _setgid (uint32) int32 __asm__("setgid")
func _setregid (uint32, uint32) int32 __asm__("setregid")
func _setegid (uint32) int32 __asm__("setegid")
func _getresuid (*uint32, *uint32, *uint32) int32 __asm__("getresuid")
func _getresgid (*uint32, *uint32, *uint32) int32 __asm__("getresgid")
func _setresuid (uint32, uint32, uint32) int32 __asm__("setresuid")
func _setresgid (uint32, uint32, uint32) int32 __asm__("setresgid")
func _fork () int32 __asm__("fork")
func _vfork () int32 __asm__("vfork")
func _ttyname (int32) *int8 __asm__("ttyname")
func _ttyname_r (int32, *int8, uint64) int32 __asm__("ttyname_r")
func _isatty (int32) int32 __asm__("isatty")
func _ttyslot () int32 __asm__("ttyslot")
func _link (*int8, *int8) int32 __asm__("link")
func _linkat (int32, *int8, int32, *int8, int32) int32 __asm__("linkat")
func _symlink (*int8, *int8) int32 __asm__("symlink")
func _readlink (*int8, *int8, uint64) int64 __asm__("readlink")
func _symlinkat (*int8, int32, *int8) int32 __asm__("symlinkat")
func _readlinkat (int32, *int8, *int8, uint64) int64 __asm__("readlinkat")
func _unlink (*int8) int32 __asm__("unlink")
func _unlinkat (int32, *int8, int32) int32 __asm__("unlinkat")
func _rmdir (*int8) int32 __asm__("rmdir")
func _tcgetpgrp (int32) int32 __asm__("tcgetpgrp")
func _tcsetpgrp (int32, int32) int32 __asm__("tcsetpgrp")
func _getlogin () *int8 __asm__("getlogin")
func _getlogin_r (*int8, uint64) int32 __asm__("getlogin_r")
func _setlogin (*int8) int32 __asm__("setlogin")
var _optarg *int8
var _optind int32
var _opterr int32
var _optopt int32
func _getopt (int32, **int8, *int8) int32 __asm__("getopt")
func _gethostname (*int8, uint64) int32 __asm__("gethostname")
func _sethostname (*int8, uint64) int32 __asm__("sethostname")
func _sethostid (int64) int32 __asm__("sethostid")
func _getdomainname (*int8, uint64) int32 __asm__("getdomainname")
func _setdomainname (*int8, uint64) int32 __asm__("setdomainname")
func _vhangup () int32 __asm__("vhangup")
func _revoke (*int8) int32 __asm__("revoke")
func _profil (*uint16, uint64, uint64, uint32) int32 __asm__("profil")
func _acct (*int8) int32 __asm__("acct")
func _getusershell () *int8 __asm__("getusershell")
func _endusershell () __asm__("endusershell")
func _setusershell () __asm__("setusershell")
func _daemon (int32, int32) int32 __asm__("daemon")
func _chroot (*int8) int32 __asm__("chroot")
func _getpass (*int8) *int8 __asm__("getpass")
func _fsync (int32) int32 __asm__("fsync")
func _syncfs (int32) int32 __asm__("syncfs")
func _gethostid () int64 __asm__("gethostid")
func _sync () __asm__("sync")
func _getpagesize () int32 __asm__("getpagesize")
func _getdtablesize () int32 __asm__("getdtablesize")
func _truncate (*int8, int64) int32 __asm__("*truncate64")
func _truncate64 (*int8, int64) int32 __asm__("truncate64")
func _ftruncate (int32, int64) int32 __asm__("*ftruncate64")
func _ftruncate64 (int32, int64) int32 __asm__("ftruncate64")
func _brk (*byte) int32 __asm__("brk")
func _sbrk (int64) *byte __asm__("sbrk")
func _syscall (int64, ...interface{}) int64 __asm__("syscall")
func _fdatasync (int32) int32 __asm__("fdatasync")
func _crypt (*int8, *int8) *int8 __asm__("crypt")
func _encrypt (*int8, int32) __asm__("encrypt")
func _swab (*byte, *byte, int64) __asm__("swab")
type _rpcent struct { r_name *int8; r_aliases **int8; r_number int32; Godump_0_pad [4]byte; }
const _sizeof_rpcent = 24
func _setrpcent (int32) __asm__("setrpcent")
func _endrpcent () __asm__("endrpcent")
func _getrpcbyname (*int8) *_rpcent __asm__("getrpcbyname")
func _getrpcbynumber (int32) *_rpcent __asm__("getrpcbynumber")
func _getrpcent () *_rpcent __asm__("getrpcent")
func _getrpcbyname_r (*int8, *_rpcent, *int8, uint64, **_rpcent) int32 __asm__("getrpcbyname_r")
func _getrpcbynumber_r (int32, *_rpcent, *int8, uint64, **_rpcent) int32 __asm__("getrpcbynumber_r")
func _getrpcent_r (*_rpcent, *int8, uint64, **_rpcent) int32 __asm__("getrpcent_r")
type _netent struct { n_name *int8; n_aliases **int8; n_addrtype int32; n_net uint32; }
const _sizeof_netent = 24
func ___h_errno_location () *int32 __asm__("__h_errno_location")
func _herror (*int8) __asm__("herror")
func _hstrerror (int32) *int8 __asm__("hstrerror")
type _hostent struct { h_name *int8; h_aliases **int8; h_addrtype int32; h_length int32; h_addr_list **int8; }
const _sizeof_hostent = 32
func _sethostent (int32) __asm__("sethostent")
func _endhostent () __asm__("endhostent")
func _gethostent () *_hostent __asm__("gethostent")
func _gethostbyaddr (*byte, uint32, int32) *_hostent __asm__("gethostbyaddr")
func _gethostbyname (*int8) *_hostent __asm__("gethostbyname")
func _gethostbyname2 (*int8, int32) *_hostent __asm__("gethostbyname2")
func _gethostent_r (*_hostent, *int8, uint64, **_hostent, *int32) int32 __asm__("gethostent_r")
func _gethostbyaddr_r (*byte, uint32, int32, *_hostent, *int8, uint64, **_hostent, *int32) int32 __asm__("gethostbyaddr_r")
func _gethostbyname_r (*int8, *_hostent, *int8, uint64, **_hostent, *int32) int32 __asm__("gethostbyname_r")
func _gethostbyname2_r (*int8, int32, *_hostent, *int8, uint64, **_hostent, *int32) int32 __asm__("gethostbyname2_r")
func _setnetent (int32) __asm__("setnetent")
func _endnetent () __asm__("endnetent")
func _getnetent () *_netent __asm__("getnetent")
func _getnetbyaddr (uint32, int32) *_netent __asm__("getnetbyaddr")
func _getnetbyname (*int8) *_netent __asm__("getnetbyname")
func _getnetent_r (*_netent, *int8, uint64, **_netent, *int32) int32 __asm__("getnetent_r")
func _getnetbyaddr_r (uint32, int32, *_netent, *int8, uint64, **_netent, *int32) int32 __asm__("getnetbyaddr_r")
func _getnetbyname_r (*int8, *_netent, *int8, uint64, **_netent, *int32) int32 __asm__("getnetbyname_r")
type _servent struct { s_name *int8; s_aliases **int8; s_port int32; s_proto *int8; }
const _sizeof_servent = 32
func _setservent (int32) __asm__("setservent")
func _endservent () __asm__("endservent")
func _getservent () *_servent __asm__("getservent")
func _getservbyname (*int8, *int8) *_servent __asm__("getservbyname")
func _getservbyport (int32, *int8) *_servent __asm__("getservbyport")
func _getservent_r (*_servent, *int8, uint64, **_servent) int32 __asm__("getservent_r")
func _getservbyname_r (*int8, *int8, *_servent, *int8, uint64, **_servent) int32 __asm__("getservbyname_r")
func _getservbyport_r (int32, *int8, *_servent, *int8, uint64, **_servent) int32 __asm__("getservbyport_r")
type _protoent struct { p_name *int8; p_aliases **int8; p_proto int32; Godump_0_pad [4]byte; }
const _sizeof_protoent = 24
func _setprotoent (int32) __asm__("setprotoent")
func _endprotoent () __asm__("endprotoent")
func _getprotoent () *_protoent __asm__("getprotoent")
func _getprotobyname (*int8) *_protoent __asm__("getprotobyname")
func _getprotobynumber (int32) *_protoent __asm__("getprotobynumber")
func _getprotoent_r (*_protoent, *int8, uint64, **_protoent) int32 __asm__("getprotoent_r")
func _getprotobyname_r (*int8, *_protoent, *int8, uint64, **_protoent) int32 __asm__("getprotobyname_r")
func _getprotobynumber_r (int32, *_protoent, *int8, uint64, **_protoent) int32 __asm__("getprotobynumber_r")
func _setnetgrent (*int8) int32 __asm__("setnetgrent")
func _endnetgrent () __asm__("endnetgrent")
func _getnetgrent (**int8, **int8, **int8) int32 __asm__("getnetgrent")
func _innetgr (*int8, *int8, *int8, *int8) int32 __asm__("innetgr")
func _getnetgrent_r (**int8, **int8, **int8, *int8, uint64) int32 __asm__("getnetgrent_r")
func _rcmd (**int8, uint16, *int8, *int8, *int8, *int32) int32 __asm__("rcmd")
func _rcmd_af (**int8, uint16, *int8, *int8, *int8, *int32, uint16) int32 __asm__("rcmd_af")
func _rexec (**int8, int32, *int8, *int8, *int8, *int32) int32 __asm__("rexec")
func _rexec_af (**int8, int32, *int8, *int8, *int8, *int32, uint16) int32 __asm__("rexec_af")
func _ruserok (*int8, int32, *int8, *int8) int32 __asm__("ruserok")
func _ruserok_af (*int8, int32, *int8, *int8, uint16) int32 __asm__("ruserok_af")
func _iruserok (uint32, int32, *int8, *int8) int32 __asm__("iruserok")
func _iruserok_af (*byte, int32, *int8, *int8, uint16) int32 __asm__("iruserok_af")
func _rresvport (*int32) int32 __asm__("rresvport")
func _rresvport_af (*int32, uint16) int32 __asm__("rresvport_af")
type _addrinfo struct { ai_flags int32; ai_family int32; ai_socktype int32; ai_protocol int32; ai_addrlen uint32; ai_addr *_sockaddr; ai_canonname *int8; ai_next *_addrinfo; }
const _sizeof_addrinfo = 48
type _gaicb struct { ar_name *int8; ar_service *int8; ar_request *_addrinfo; ar_result *_addrinfo; __return int32; __glibc_reserved [4+1]int32; }
const _sizeof_gaicb = 56
func _getaddrinfo (*int8, *int8, *_addrinfo, **_addrinfo) int32 __asm__("getaddrinfo")
func _freeaddrinfo (*_addrinfo) __asm__("freeaddrinfo")
func _gai_strerror (int32) *int8 __asm__("gai_strerror")
func _getnameinfo (*_sockaddr, uint32, *int8, uint32, *int8, uint32, int32) int32 __asm__("getnameinfo")
func _getaddrinfo_a (int32, **_gaicb, int32, *_sigevent) int32 __asm__("getaddrinfo_a")
func _gai_suspend (**_gaicb, int32, *_timespec) int32 __asm__("gai_suspend")
func _gai_error (*_gaicb) int32 __asm__("gai_error")
func _gai_cancel (*_gaicb) int32 __asm__("gai_cancel")
type _passwd struct { pw_name *int8; pw_passwd *int8; pw_uid uint32; pw_gid uint32; pw_gecos *int8; pw_dir *int8; pw_shell *int8; }
const _sizeof_passwd = 48
type _FILE struct { }
func _setpwent () __asm__("setpwent")
func _endpwent () __asm__("endpwent")
func _getpwent () *_passwd __asm__("getpwent")
func _fgetpwent (*_FILE) *_passwd __asm__("fgetpwent")
func _putpwent (*_passwd, *_FILE) int32 __asm__("putpwent")
func _getpwuid (uint32) *_passwd __asm__("getpwuid")
func _getpwnam (*int8) *_passwd __asm__("getpwnam")
func _getpwent_r (*_passwd, *int8, uint64, **_passwd) int32 __asm__("getpwent_r")
func _getpwuid_r (uint32, *_passwd, *int8, uint64, **_passwd) int32 __asm__("getpwuid_r")
func _getpwnam_r (*int8, *_passwd, *int8, uint64, **_passwd) int32 __asm__("getpwnam_r")
func _fgetpwent_r (*_FILE, *_passwd, *int8, uint64, **_passwd) int32 __asm__("fgetpwent_r")
func _getpw (uint32, *int8) int32 __asm__("getpw")
type _group struct { gr_name *int8; gr_passwd *int8; gr_gid uint32; gr_mem **int8; }
const _sizeof_group = 32
func _setgrent () __asm__("setgrent")
func _endgrent () __asm__("endgrent")
func _getgrent () *_group __asm__("getgrent")
func _fgetgrent (*_FILE) *_group __asm__("fgetgrent")
func _putgrent (*_group, *_FILE) int32 __asm__("putgrent")
func _getgrgid (uint32) *_group __asm__("getgrgid")
func _getgrnam (*int8) *_group __asm__("getgrnam")
func _getgrent_r (*_group, *int8, uint64, **_group) int32 __asm__("getgrent_r")
func _getgrgid_r (uint32, *_group, *int8, uint64, **_group) int32 __asm__("getgrgid_r")
func _getgrnam_r (*int8, *_group, *int8, uint64, **_group) int32 __asm__("getgrnam_r")
func _fgetgrent_r (*_FILE, *_group, *int8, uint64, **_group) int32 __asm__("fgetgrent_r")
func _setgroups (uint64, *uint32) int32 __asm__("setgroups")
func _getgrouplist (*int8, uint32, *uint32, *int32) int32 __asm__("getgrouplist")
func _initgroups (*int8, uint32) int32 __asm__("initgroups")
type _sock_filter struct { code uint16; jt uint8; jf uint8; k uint32; }
const _sizeof_sock_filter = 8
type _sock_fprog struct { len uint16; filter *_sock_filter; }
const _sizeof_sock_fprog = 16
type _sysinfo struct { uptime int64; loads [2+1]uint64; totalram uint64; freeram uint64; sharedram uint64; bufferram uint64; totalswap uint64; freeswap uint64; procs uint16; pad uint16; totalhigh uint64; freehigh uint64; mem_unit uint32; _f [0]int8; Godump_0_pad [4]byte; }
const _sizeof_sysinfo = 112
type ___kernel_sa_family_t uint16
type ___kernel_sockaddr_storage struct { ss_family uint16; __data [125+1]int8; Godump_0_align [0]int64; }
const _sizeof___kernel_sockaddr_storage = 128
type _sockaddr_nl struct { nl_family uint16; nl_pad uint16; nl_pid uint32; nl_groups uint32; }
const _sizeof_sockaddr_nl = 12
type _nlmsghdr struct { nlmsg_len uint32; nlmsg_type uint16; nlmsg_flags uint16; nlmsg_seq uint32; nlmsg_pid uint32; }
const _sizeof_nlmsghdr = 16
type _nlmsgerr struct { error int32; msg _nlmsghdr; }
const _sizeof_nlmsgerr = 20
type _nl_pktinfo struct { group uint32; }
const _sizeof_nl_pktinfo = 4
type _nl_mmap_req struct { nm_block_size uint32; nm_block_nr uint32; nm_frame_size uint32; nm_frame_nr uint32; }
const _sizeof_nl_mmap_req = 16
type _nl_mmap_hdr struct { nm_status uint32; nm_len uint32; nm_group uint32; nm_pid uint32; nm_uid uint32; nm_gid uint32; }
const _sizeof_nl_mmap_hdr = 24
type _nlattr struct { nla_len uint16; nla_type uint16; }
const _sizeof_nlattr = 4
type _ifaddrmsg struct { ifa_family uint8; ifa_prefixlen uint8; ifa_flags uint8; ifa_scope uint8; ifa_index uint32; }
const _sizeof_ifaddrmsg = 8
type _ifa_cacheinfo struct { ifa_prefered uint32; ifa_valid uint32; cstamp uint32; tstamp uint32; }
const _sizeof_ifa_cacheinfo = 16
type _tun_pi struct { flags uint16; proto uint16; }
const _sizeof_tun_pi = 4
type _tun_filter struct { flags uint16; count uint16; addr [0][5+1]uint8; }
const _sizeof_tun_filter = 4
type _ignore_ptrace_peeksiginfo_args struct { off uint64; flags uint32; nr int32; }
const _sizeof_ignore_ptrace_peeksiginfo_args = 16
type _pt_regs struct { r15 uint64; r14 uint64; r13 uint64; r12 uint64; rbp uint64; rbx uint64; r11 uint64; r10 uint64; r9 uint64; r8 uint64; rax uint64; rcx uint64; rdx uint64; rsi uint64; rdi uint64; orig_rax uint64; rip uint64; cs uint64; eflags uint64; rsp uint64; ss uint64; }
const _sizeof_pt_regs = 168
type _rtnl_link_stats struct { rx_packets uint32; tx_packets uint32; rx_bytes uint32; tx_bytes uint32; rx_errors uint32; tx_errors uint32; rx_dropped uint32; tx_dropped uint32; multicast uint32; collisions uint32; rx_length_errors uint32; rx_over_errors uint32; rx_crc_errors uint32; rx_frame_errors uint32; rx_fifo_errors uint32; rx_missed_errors uint32; tx_aborted_errors uint32; tx_carrier_errors uint32; tx_fifo_errors uint32; tx_heartbeat_errors uint32; tx_window_errors uint32; rx_compressed uint32; tx_compressed uint32; rx_nohandler uint32; }
const _sizeof_rtnl_link_stats = 96
type _rtnl_link_stats64 struct { rx_packets uint64; tx_packets uint64; rx_bytes uint64; tx_bytes uint64; rx_errors uint64; tx_errors uint64; rx_dropped uint64; tx_dropped uint64; multicast uint64; collisions uint64; rx_length_errors uint64; rx_over_errors uint64; rx_crc_errors uint64; rx_frame_errors uint64; rx_fifo_errors uint64; rx_missed_errors uint64; tx_aborted_errors uint64; tx_carrier_errors uint64; tx_fifo_errors uint64; tx_heartbeat_errors uint64; tx_window_errors uint64; rx_compressed uint64; tx_compressed uint64; rx_nohandler uint64; }
const _sizeof_rtnl_link_stats64 = 192
type _rtnl_link_ifmap struct { mem_start uint64; mem_end uint64; base_addr uint64; irq uint16; dma uint8; port uint8; Godump_0_pad [4]byte; }
const _sizeof_rtnl_link_ifmap = 32
type _ifla_bridge_id struct { prio [1+1]uint8; addr [5+1]uint8; }
const _sizeof_ifla_bridge_id = 8
type _ifla_cacheinfo struct { max_reasm_len uint32; tstamp uint32; reachable_time uint32; retrans_time uint32; }
const _sizeof_ifla_cacheinfo = 16
type _ifla_vlan_flags struct { flags uint32; mask uint32; }
const _sizeof_ifla_vlan_flags = 8
type _ifla_vlan_qos_mapping struct { from uint32; to uint32; }
const _sizeof_ifla_vlan_qos_mapping = 8
type _ifla_vxlan_port_range struct { low uint16; high uint16; }
const _sizeof_ifla_vxlan_port_range = 4
type _ifla_vf_mac struct { vf uint32; mac [31+1]uint8; }
const _sizeof_ifla_vf_mac = 36
type _ifla_vf_vlan struct { vf uint32; vlan uint32; qos uint32; }
const _sizeof_ifla_vf_vlan = 12
type _ifla_vf_vlan_info struct { vf uint32; vlan uint32; qos uint32; vlan_proto uint16; Godump_0_pad [2]byte; }
const _sizeof_ifla_vf_vlan_info = 16
type _ifla_vf_tx_rate struct { vf uint32; rate uint32; }
const _sizeof_ifla_vf_tx_rate = 8
type _ifla_vf_rate struct { vf uint32; min_tx_rate uint32; max_tx_rate uint32; }
const _sizeof_ifla_vf_rate = 12
type _ifla_vf_spoofchk struct { vf uint32; setting uint32; }
const _sizeof_ifla_vf_spoofchk = 8
type _ifla_vf_guid struct { vf uint32; guid uint64; }
const _sizeof_ifla_vf_guid = 16
type _ifla_vf_link_state struct { vf uint32; link_state uint32; }
const _sizeof_ifla_vf_link_state = 8
type _ifla_vf_rss_query_en struct { vf uint32; setting uint32; }
const _sizeof_ifla_vf_rss_query_en = 8
type _ifla_vf_trust struct { vf uint32; setting uint32; }
const _sizeof_ifla_vf_trust = 8
type _ifla_port_vsi struct { vsi_mgr_id uint8; vsi_type_id [2+1]uint8; vsi_type_version uint8; pad [2+1]uint8; }
const _sizeof_ifla_port_vsi = 8
type _if_stats_msg struct { family uint8; pad1 uint8; pad2 uint16; ifindex uint32; filter_mask uint32; }
const _sizeof_if_stats_msg = 12
type _ndmsg struct { ndm_family uint8; ndm_pad1 uint8; ndm_pad2 uint16; ndm_ifindex int32; ndm_state uint16; ndm_flags uint8; ndm_type uint8; }
const _sizeof_ndmsg = 12
type _nda_cacheinfo struct { ndm_confirmed uint32; ndm_used uint32; ndm_updated uint32; ndm_refcnt uint32; }
const _sizeof_nda_cacheinfo = 16
type _ndt_stats struct { ndts_allocs uint64; ndts_destroys uint64; ndts_hash_grows uint64; ndts_res_failed uint64; ndts_lookups uint64; ndts_hits uint64; ndts_rcv_probes_mcast uint64; ndts_rcv_probes_ucast uint64; ndts_periodic_gc_runs uint64; ndts_forced_gc_runs uint64; ndts_table_fulls uint64; }
const _sizeof_ndt_stats = 88
type _ndtmsg struct { ndtm_family uint8; ndtm_pad1 uint8; ndtm_pad2 uint16; }
const _sizeof_ndtmsg = 4
type _ndt_config struct { ndtc_key_len uint16; ndtc_entry_size uint16; ndtc_entries uint32; ndtc_last_flush uint32; ndtc_last_rand uint32; ndtc_hash_rnd uint32; ndtc_hash_mask uint32; ndtc_hash_chain_gc uint32; ndtc_proxy_qlen uint32; }
const _sizeof_ndt_config = 32
type _rtattr struct { rta_len uint16; rta_type uint16; }
const _sizeof_rtattr = 4
type _rtmsg struct { rtm_family uint8; rtm_dst_len uint8; rtm_src_len uint8; rtm_tos uint8; rtm_table uint8; rtm_protocol uint8; rtm_scope uint8; rtm_type uint8; rtm_flags uint32; }
const _sizeof_rtmsg = 12
type _rtnexthop struct { rtnh_len uint16; rtnh_flags uint8; rtnh_hops uint8; rtnh_ifindex int32; }
const _sizeof_rtnexthop = 8
type _rtvia struct { rtvia_family uint16; rtvia_addr [0]uint8; }
const _sizeof_rtvia = 2
type _rta_cacheinfo struct { rta_clntref uint32; rta_lastuse uint32; rta_expires int32; rta_error uint32; rta_used uint32; rta_id uint32; rta_ts uint32; rta_tsage uint32; }
const _sizeof_rta_cacheinfo = 32
type _rta_session struct { proto uint8; pad1 uint8; pad2 uint16; u struct { ports struct { sport uint16; dport uint16; }; Godump_0_align [0]int32; }; }
const _sizeof_rta_session = 8
type _rta_mfc_stats struct { mfcs_packets uint64; mfcs_bytes uint64; mfcs_wrong_if uint64; }
const _sizeof_rta_mfc_stats = 24
type _rtgenmsg struct { rtgen_family uint8; }
const _sizeof_rtgenmsg = 1
type _ifinfomsg struct { ifi_family uint8; __ifi_pad uint8; ifi_type uint16; ifi_index int32; ifi_flags uint32; ifi_change uint32; }
const _sizeof_ifinfomsg = 16
type _prefixmsg struct { prefix_family uint8; prefix_pad1 uint8; prefix_pad2 uint16; prefix_ifindex int32; prefix_type uint8; prefix_len uint8; prefix_flags uint8; prefix_pad3 uint8; }
const _sizeof_prefixmsg = 12
type _prefix_cacheinfo struct { preferred_time uint32; valid_time uint32; }
const _sizeof_prefix_cacheinfo = 8
type _tcmsg struct { tcm_family uint8; tcm__pad1 uint8; tcm__pad2 uint16; tcm_ifindex int32; tcm_handle uint32; tcm_parent uint32; tcm_info uint32; }
const _sizeof_tcmsg = 20
type _nduseroptmsg struct { nduseropt_family uint8; nduseropt_pad1 uint8; nduseropt_opts_len uint16; nduseropt_ifindex int32; nduseropt_icmp_type uint8; nduseropt_icmp_code uint8; nduseropt_pad2 uint16; nduseropt_pad3 uint32; }
const _sizeof_nduseroptmsg = 16
type _tcamsg struct { tca_family uint8; tca__pad1 uint8; tca__pad2 uint16; }
const _sizeof_tcamsg = 4
type _if_nameindex struct { if_index uint32; if_name *int8; }
const _sizeof_if_nameindex = 16
type _ifaddr struct { ifa_addr _sockaddr; ifa_ifu struct { ifu_broadaddr _sockaddr; }; ifa_ifp *_iface; ifa_next *_ifaddr; }
const _sizeof_ifaddr = 48
type _ifmap struct { mem_start uint64; mem_end uint64; base_addr uint16; irq uint8; dma uint8; port uint8; Godump_0_pad [3]byte; }
const _sizeof_ifmap = 24
type _ifreq struct { ifr_ifrn struct { ifrn_name [15+1]int8; }; ifr_ifru struct { ifru_addr _sockaddr; Godump_0_pad [8]byte; Godump_1_align [0]int64; }; }
const _sizeof_ifreq = 40
type _ifconf struct { ifc_len int32; ifc_ifcu struct { ifcu_buf ___caddr_t; }; }
const _sizeof_ifconf = 16
func _if_nametoindex (*int8) uint32 __asm__("if_nametoindex")
func _if_indextoname (uint32, *int8) *int8 __asm__("if_indextoname")
func _if_nameindex () *_if_nameindex __asm__("if_nameindex")
func _if_freenameindex (*_if_nameindex) __asm__("if_freenameindex")
type _rtentry struct { rt_pad1 uint64; rt_dst _sockaddr; rt_gateway _sockaddr; rt_genmask _sockaddr; rt_flags uint16; rt_pad2 int16; rt_pad3 uint64; rt_tos uint8; rt_class uint8; rt_pad4 [2+1]int16; rt_metric int16; rt_dev *int8; rt_mtu uint64; rt_window uint64; rt_irtt uint16; Godump_0_pad [6]byte; }
const _sizeof_rtentry = 120
type _in6_rtmsg struct { rtmsg_dst _in6_addr; rtmsg_src _in6_addr; rtmsg_gateway _in6_addr; rtmsg_type uint32; rtmsg_dst_len uint16; rtmsg_src_len uint16; rtmsg_metric uint32; rtmsg_info uint64; rtmsg_flags uint32; rtmsg_ifindex int32; }
const _sizeof_in6_rtmsg = 80
type _sockaddr_ll struct { sll_family uint16; sll_protocol uint16; sll_ifindex int32; sll_hatype uint16; sll_pkttype uint8; sll_halen uint8; sll_addr [7+1]uint8; }
const _sizeof_sockaddr_ll = 20
type _packet_mreq struct { mr_ifindex int32; mr_type uint16; mr_alen uint16; mr_address [7+1]uint8; }
const _sizeof_packet_mreq = 16
func _mount (*int8, *int8, *int8, uint64, *byte) int32 __asm__("mount")
func _umount (*int8) int32 __asm__("umount")
func _umount2 (*int8, int32) int32 __asm__("umount2")
type _statfs struct { f_type int64; f_bsize int64; f_blocks uint64; f_bfree uint64; f_bavail uint64; f_files uint64; f_ffree uint64; f_fsid ___fsid_t; f_namelen int64; f_frsize int64; f_flags int64; f_spare [3+1]int64; }
const _sizeof_statfs = 120
type _statfs64 struct { f_type int64; f_bsize int64; f_blocks uint64; f_bfree uint64; f_bavail uint64; f_files uint64; f_ffree uint64; f_fsid ___fsid_t; f_namelen int64; f_frsize int64; f_flags int64; f_spare [3+1]int64; }
const _sizeof_statfs64 = 120
func _statfs (*int8, *_statfs) int32 __asm__("*statfs64")
func _statfs64 (*int8, *_statfs64) int32 __asm__("statfs64")
func _fstatfs (int32, *_statfs) int32 __asm__("*fstatfs64")
func _fstatfs64 (int32, *_statfs64) int32 __asm__("fstatfs64")
type _ntptimeval struct { time _timeval; maxerror int64; esterror int64; tai int64; __glibc_reserved1 int64; __glibc_reserved2 int64; __glibc_reserved3 int64; __glibc_reserved4 int64; }
const _sizeof_ntptimeval = 72
func ___adjtimex (*_timex) int32 __asm__("__adjtimex")
func _adjtimex (*_timex) int32 __asm__("adjtimex")
func _ntp_gettime (*_ntptimeval) int32 __asm__("*ntp_gettimex")
func _ntp_adjtime (*_timex) int32 __asm__("ntp_adjtime")
func _sysinfo (*_sysinfo) int32 __asm__("sysinfo")
func _get_nprocs_conf () int32 __asm__("get_nprocs_conf")
func _get_nprocs () int32 __asm__("get_nprocs")
func _get_phys_pages () int64 __asm__("get_phys_pages")
func _get_avphys_pages () int64 __asm__("get_avphys_pages")
type _ustat struct { f_tfree int32; f_tinode uint64; f_fname [5+1]int8; f_fpack [5+1]int8; Godump_0_pad [4]byte; }
const _sizeof_ustat = 32
func _ustat (uint64, *_ustat) int32 __asm__("ustat")
type _utimbuf struct { actime int64; modtime int64; }
const _sizeof_utimbuf = 16
func _utime (*int8, *_utimbuf) int32 __asm__("utime")
type _file_clone_range struct { src_fd int64; src_offset uint64; src_length uint64; dest_offset uint64; }
const _sizeof_file_clone_range = 32
type _fstrim_range struct { start uint64; len uint64; minlen uint64; }
const _sizeof_fstrim_range = 24
type _file_dedupe_range_info struct { dest_fd int64; dest_offset uint64; bytes_deduped uint64; status int32; reserved uint32; }
const _sizeof_file_dedupe_range_info = 32
type _file_dedupe_range struct { src_offset uint64; src_length uint64; dest_count uint16; reserved1 uint16; reserved2 uint32; info [0]_file_dedupe_range_info; }
const _sizeof_file_dedupe_range = 24
type _files_stat_struct struct { nr_files uint64; nr_free_files uint64; max_files uint64; }
const _sizeof_files_stat_struct = 24
type _inodes_stat_t struct { nr_inodes int64; nr_unused int64; dummy [4+1]int64; }
const _sizeof_inodes_stat_t = 56
type _fsxattr struct { fsx_xflags uint32; fsx_extsize uint32; fsx_nextents uint32; fsx_projid uint32; fsx_cowextsize uint32; fsx_pad [7+1]uint8; }
const _sizeof_fsxattr = 28
type _fscrypt_policy struct { version uint8; contents_encryption_mode uint8; filenames_encryption_mode uint8; flags uint8; master_key_descriptor [7+1]uint8; }
const _sizeof_fscrypt_policy = 12
type _inotify_event struct { wd int32; mask uint32; cookie uint32; len uint32; name [0]int8; }
const _sizeof_inotify_event = 16
func _inotify_init () int32 __asm__("inotify_init")
func _inotify_init1 (int32) int32 __asm__("inotify_init1")
func _inotify_add_watch (int32, *int8, uint32) int32 __asm__("inotify_add_watch")
func _inotify_rm_watch (int32, int32) int32 __asm__("inotify_rm_watch")
type ___gwchar_t int32
type _imaxdiv_t struct { quot int64; rem int64; }
const _sizeof_imaxdiv_t = 16
func _imaxabs (int64) int64 __asm__("imaxabs")
func _imaxdiv (int64, int64) _imaxdiv_t __asm__("imaxdiv")
func _strtoimax (*int8, **int8, int32) int64 __asm__("strtoimax")
func _strtoumax (*int8, **int8, int32) uint64 __asm__("strtoumax")
func _wcstoimax (*int32, **int32, int32) int64 __asm__("wcstoimax")
func _wcstoumax (*int32, **int32, int32) uint64 __asm__("wcstoumax")
func ___strtol_internal (*int8, **int8, int32, int32) int64 __asm__("__strtol_internal")
func ___strtoul_internal (*int8, **int8, int32, int32) uint64 __asm__("__strtoul_internal")
func ___wcstol_internal (*int32, **int32, int32, int32) int64 __asm__("__wcstol_internal")
func ___wcstoul_internal (*int32, **int32, int32, int32) uint64 __asm__("__wcstoul_internal")
type _icmp6_filter struct { icmp6_filt [7+1]uint32; }
const _sizeof_icmp6_filter = 32
type _icmp6_hdr struct { icmp6_type uint8; icmp6_code uint8; icmp6_cksum uint16; icmp6_dataun struct { icmp6_un_data32 [0+1]uint32; }; }
const _sizeof_icmp6_hdr = 8
type _nd_router_solicit struct { nd_rs_hdr _icmp6_hdr; }
const _sizeof_nd_router_solicit = 8
type _nd_router_advert struct { nd_ra_hdr _icmp6_hdr; nd_ra_reachable uint32; nd_ra_retransmit uint32; }
const _sizeof_nd_router_advert = 16
type _nd_neighbor_solicit struct { nd_ns_hdr _icmp6_hdr; nd_ns_target _in6_addr; }
const _sizeof_nd_neighbor_solicit = 24
type _nd_neighbor_advert struct { nd_na_hdr _icmp6_hdr; nd_na_target _in6_addr; }
const _sizeof_nd_neighbor_advert = 24
type _nd_redirect struct { nd_rd_hdr _icmp6_hdr; nd_rd_target _in6_addr; nd_rd_dst _in6_addr; }
const _sizeof_nd_redirect = 40
type _nd_opt_hdr struct { nd_opt_type uint8; nd_opt_len uint8; }
const _sizeof_nd_opt_hdr = 2
type _nd_opt_prefix_info struct { nd_opt_pi_type uint8; nd_opt_pi_len uint8; nd_opt_pi_prefix_len uint8; nd_opt_pi_flags_reserved uint8; nd_opt_pi_valid_time uint32; nd_opt_pi_preferred_time uint32; nd_opt_pi_reserved2 uint32; nd_opt_pi_prefix _in6_addr; }
const _sizeof_nd_opt_prefix_info = 32
type _nd_opt_rd_hdr struct { nd_opt_rh_type uint8; nd_opt_rh_len uint8; nd_opt_rh_reserved1 uint16; nd_opt_rh_reserved2 uint32; }
const _sizeof_nd_opt_rd_hdr = 8
type _nd_opt_mtu struct { nd_opt_mtu_type uint8; nd_opt_mtu_len uint8; nd_opt_mtu_reserved uint16; nd_opt_mtu_mtu uint32; }
const _sizeof_nd_opt_mtu = 8
type _mld_hdr struct { mld_icmp6_hdr _icmp6_hdr; mld_addr _in6_addr; }
const _sizeof_mld_hdr = 24
type _icmp6_router_renum struct { rr_hdr _icmp6_hdr; rr_segnum uint8; rr_flags uint8; rr_maxdelay uint16; rr_reserved uint32; }
const _sizeof_icmp6_router_renum = 16
type _rr_pco_match struct { rpm_code uint8; rpm_len uint8; rpm_ordinal uint8; rpm_matchlen uint8; rpm_minlen uint8; rpm_maxlen uint8; rpm_reserved uint16; rpm_prefix _in6_addr; }
const _sizeof_rr_pco_match = 24
type _rr_pco_use struct { rpu_uselen uint8; rpu_keeplen uint8; rpu_ramask uint8; rpu_raflags uint8; rpu_vltime uint32; rpu_pltime uint32; rpu_flags uint32; rpu_prefix _in6_addr; }
const _sizeof_rr_pco_use = 32
type _rr_result struct { rrr_flags uint16; rrr_ordinal uint8; rrr_matchedlen uint8; rrr_ifid uint32; rrr_prefix _in6_addr; }
const _sizeof_rr_result = 24
type _nd_opt_adv_interval struct { nd_opt_adv_interval_type uint8; nd_opt_adv_interval_len uint8; nd_opt_adv_interval_reserved uint16; nd_opt_adv_interval_ival uint32; }
const _sizeof_nd_opt_adv_interval = 8
type _nd_opt_home_agent_info struct { nd_opt_home_agent_info_type uint8; nd_opt_home_agent_info_len uint8; nd_opt_home_agent_info_reserved uint16; nd_opt_home_agent_info_preference uint16; nd_opt_home_agent_info_lifetime uint16; }
const _sizeof_nd_opt_home_agent_info = 8
type _sched_param struct { __sched_priority int32; }
const _sizeof_sched_param = 4
func _clone (func(*byte) int32, *byte, int32, *byte, ...interface{}) int32 __asm__("clone")
func _unshare (int32) int32 __asm__("unshare")
func _sched_getcpu () int32 __asm__("sched_getcpu")
func _setns (int32, int32) int32 __asm__("setns")
type ___sched_param struct { __sched_priority int32; }
const _sizeof___sched_param = 4
type ___cpu_mask uint64
type _cpu_set_t struct { __bits [15+1]uint64; }
const _sizeof_cpu_set_t = 128
func ___sched_cpucount (uint64, *_cpu_set_t) int32 __asm__("__sched_cpucount")
func ___sched_cpualloc (uint64) *_cpu_set_t __asm__("__sched_cpualloc")
func ___sched_cpufree (*_cpu_set_t) __asm__("__sched_cpufree")
func _sched_setparam (int32, *_sched_param) int32 __asm__("sched_setparam")
func _sched_getparam (int32, *_sched_param) int32 __asm__("sched_getparam")
func _sched_setscheduler (int32, int32, *_sched_param) int32 __asm__("sched_setscheduler")
func _sched_getscheduler (int32) int32 __asm__("sched_getscheduler")
func _sched_yield () int32 __asm__("sched_yield")
func _sched_get_priority_max (int32) int32 __asm__("sched_get_priority_max")
func _sched_get_priority_min (int32) int32 __asm__("sched_get_priority_min")
func _sched_rr_get_interval (int32, *_timespec) int32 __asm__("sched_rr_get_interval")
func _sched_setaffinity (int32, uint64, *_cpu_set_t) int32 __asm__("sched_setaffinity")
func _sched_getaffinity (int32, uint64, *_cpu_set_t) int32 __asm__("sched_getaffinity")
type _sem_t struct { __size [31+1]int8; Godump_0_align [0]int64; }
const _sizeof_sem_t = 32
func _sem_init (*_sem_t, int32, uint32) int32 __asm__("sem_init")
func _sem_destroy (*_sem_t) int32 __asm__("sem_destroy")
func _sem_open (*int8, int32, ...interface{}) *_sem_t __asm__("sem_open")
func _sem_close (*_sem_t) int32 __asm__("sem_close")
func _sem_unlink (*int8) int32 __asm__("sem_unlink")
func _sem_wait (*_sem_t) int32 __asm__("sem_wait")
func _sem_timedwait (*_sem_t, *_timespec) int32 __asm__("sem_timedwait")
func _sem_trywait (*_sem_t) int32 __asm__("sem_trywait")
func _sem_post (*_sem_t) int32 __asm__("sem_post")
func _sem_getvalue (*_sem_t, *int32) int32 __asm__("sem_getvalue")
type _ffi_arg uint64
type _ffi_sarg int64
type _ffi_abi uint32
type __ffi_type struct { size uint64; alignment uint16; _type uint16; elements **__ffi_type; }
const _sizeof__ffi_type = 24
type _ffi_type struct { size uint64; alignment uint16; _type uint16; elements **__ffi_type; }
const _sizeof_ffi_type = 24
var _ffi_type_void _ffi_type
var _ffi_type_uint8 _ffi_type
var _ffi_type_sint8 _ffi_type
var _ffi_type_uint16 _ffi_type
var _ffi_type_sint16 _ffi_type
var _ffi_type_uint32 _ffi_type
var _ffi_type_sint32 _ffi_type
var _ffi_type_uint64 _ffi_type
var _ffi_type_sint64 _ffi_type
var _ffi_type_float _ffi_type
var _ffi_type_double _ffi_type
var _ffi_type_pointer _ffi_type
var _ffi_type_longdouble _ffi_type
var _ffi_type_complex_float _ffi_type
var _ffi_type_complex_double _ffi_type
var _ffi_type_complex_longdouble _ffi_type
type _ffi_status uint32
type _FFI_TYPE uint32
type _ffi_cif struct { abi uint32; nargs uint32; arg_types **_ffi_type; rtype *_ffi_type; bytes uint32; flags uint32; }
const _sizeof_ffi_cif = 32
func _ffi_prep_cif_core (*_ffi_cif, uint32, uint32, uint32, uint32, *_ffi_type, **_ffi_type) uint32 __asm__("ffi_prep_cif_core")
type _ffi_raw struct { sint int64; }
const _sizeof_ffi_raw = 8
type _ffi_java_raw struct { sint int64; }
const _sizeof_ffi_java_raw = 8
func _ffi_raw_call (*_ffi_cif, func(), *byte, *_ffi_raw) __asm__("ffi_raw_call")
func _ffi_ptrarray_to_raw (*_ffi_cif, **byte, *_ffi_raw) __asm__("ffi_ptrarray_to_raw")
func _ffi_raw_to_ptrarray (*_ffi_cif, *_ffi_raw, **byte) __asm__("ffi_raw_to_ptrarray")
func _ffi_raw_size (*_ffi_cif) uint64 __asm__("ffi_raw_size")
func _ffi_java_raw_call (*_ffi_cif, func(), *byte, *_ffi_java_raw) __asm__("ffi_java_raw_call")
func _ffi_java_ptrarray_to_raw (*_ffi_cif, **byte, *_ffi_java_raw) __asm__("ffi_java_ptrarray_to_raw")
func _ffi_java_raw_to_ptrarray (*_ffi_cif, *_ffi_java_raw, **byte) __asm__("ffi_java_raw_to_ptrarray")
func _ffi_java_raw_size (*_ffi_cif) uint64 __asm__("ffi_java_raw_size")
type _ffi_closure struct { tramp [23+1]int8; cif *_ffi_cif; fun func(*_ffi_cif, *byte, **byte, *byte); user_data *byte; }
const _sizeof_ffi_closure = 48
func _ffi_closure_alloc (uint64, **byte) *byte __asm__("ffi_closure_alloc")
func _ffi_closure_free (*byte) __asm__("ffi_closure_free")
func _ffi_prep_closure (*_ffi_closure, *_ffi_cif, func(*_ffi_cif, *byte, **byte, *byte), *byte) uint32 __asm__("ffi_prep_closure")
func _ffi_prep_closure_loc (*_ffi_closure, *_ffi_cif, func(*_ffi_cif, *byte, **byte, *byte), *byte, *byte) uint32 __asm__("ffi_prep_closure_loc")
type _ffi_raw_closure struct { tramp [23+1]int8; cif *_ffi_cif; translate_args func(*_ffi_cif, *byte, **byte, *byte); this_closure *byte; fun func(*_ffi_cif, *byte, *_ffi_raw, *byte); user_data *byte; }
const _sizeof_ffi_raw_closure = 64
type _ffi_java_raw_closure struct { tramp [23+1]int8; cif *_ffi_cif; translate_args func(*_ffi_cif, *byte, **byte, *byte); this_closure *byte; fun func(*_ffi_cif, *byte, *_ffi_java_raw, *byte); user_data *byte; }
const _sizeof_ffi_java_raw_closure = 64
func _ffi_prep_raw_closure (*_ffi_raw_closure, *_ffi_cif, func(*_ffi_cif, *byte, *_ffi_raw, *byte), *byte) uint32 __asm__("ffi_prep_raw_closure")
func _ffi_prep_raw_closure_loc (*_ffi_raw_closure, *_ffi_cif, func(*_ffi_cif, *byte, *_ffi_raw, *byte), *byte, *byte) uint32 __asm__("ffi_prep_raw_closure_loc")
func _ffi_prep_java_raw_closure (*_ffi_java_raw_closure, *_ffi_cif, func(*_ffi_cif, *byte, *_ffi_java_raw, *byte), *byte) uint32 __asm__("ffi_prep_java_raw_closure")
func _ffi_prep_java_raw_closure_loc (*_ffi_java_raw_closure, *_ffi_cif, func(*_ffi_cif, *byte, *_ffi_java_raw, *byte), *byte, *byte) uint32 __asm__("ffi_prep_java_raw_closure_loc")
type _ffi_go_closure struct { tramp *byte; cif *_ffi_cif; fun func(*_ffi_cif, *byte, **byte, *byte); }
const _sizeof_ffi_go_closure = 24
func _ffi_prep_go_closure (*_ffi_go_closure, *_ffi_cif, func(*_ffi_cif, *byte, **byte, *byte)) uint32 __asm__("ffi_prep_go_closure")
func _ffi_call_go (*_ffi_cif, func(), *byte, **byte, *byte) __asm__("ffi_call_go")
func _ffi_prep_cif (*_ffi_cif, uint32, uint32, *_ffi_type, **_ffi_type) uint32 __asm__("ffi_prep_cif")
func _ffi_prep_cif_var (*_ffi_cif, uint32, uint32, uint32, *_ffi_type, **_ffi_type) uint32 __asm__("ffi_prep_cif_var")
func _ffi_call (*_ffi_cif, func(), *byte, **byte) __asm__("ffi_call")
const __POSIX_ADVISORY_INFO = 200809
const _WNOHANG = 1
const ___LDBL_MIN_10_EXP__ = (-4931)
const __PC_REC_MIN_XFER_SIZE = 16
const __SC_EXPR_NEST_MAX = 42
const _INT_LEAST16_MIN = (-32767-1)
const _SYS_uselib = ___NR_uselib
const _FFI_BAD_TYPEDEF = 1
const _IPPROTO_TP = 29
const _TCP_COOKIE_TRANSACTIONS = 15
const ___FLT32X_DIG__ = 15
const _AIO_PRIO_DELTA_MAX = 20
const _NDA_VNI = 7
const ___ILP32_OFF32_CFLAGS = "-m32"
const ___FLT64_MIN_10_EXP__ = (-307)
const __PC_PATH_MAX = 4
const _INT_FAST8_MIN = (-128)
const _B115200 = 0010002
const ___FLT64_MANT_DIG__ = 53
const ___CHAR_BIT__ = 8
const ___NR_fsync = 74
const __SC_LEVEL4_CACHE_SIZE = 197
const _PTRACE_EVENT_EXEC = 4
const _IPPORT_SUPDUP = 95
const _SYS_ftruncate = ___NR_ftruncate
const _IFLA_VF_LINK_STATE = 5
const _RTNLGRP_NSID = 28
const ___NR_mremap = 25
const ___NR_lsetxattr = 189
const _PR_CAP_AMBIENT_CLEAR_ALL = 4
const _IFLA_BOND_USE_CARRIER = 6
const _IFLA_OFFLOAD_XSTATS_UNSPEC = 0
const _IFLA_VF_PORT_UNSPEC = 0
const _INT_LEAST32_MIN = (-2147483647-1)
const _ATF_COM = 0x02
const _MAP_FILE = 0
const ___DEC64_MIN__ = 1E-383
const _IFLA_BR_TOPOLOGY_CHANGE_TIMER = 18
const _SIGEV_NONE = 1
const _NDTPA_MCAST_PROBES = 11
const _SYS_mknodat = ___NR_mknodat
const __POSIX_BARRIERS = 200809
const _IFLA_HSR_VERSION = 6
const _IP_RF = 0x8000
const _ETH_P_PPPTALK = 0x0010
const _TUNSETQUEUE_val = 1074025689
const _DT_CHR = 2
const ___FLT_MAX_EXP__ = 128
const _RTN_MULTICAST = 5
const ___NR_setsid = 112
const __XOPEN_XPG2 = 1
const _IP_DEFAULT_MULTICAST_LOOP = 1
const __XOPEN_XPG4 = 1
const ___NR_getresgid = 120
const _BPF_JGE = 0x30
const _TCPI_OPT_ECN = 8
const _ETXTBSY = 26
const _PR_FP_EXC_SW_ENABLE = 0x80
const ___NR_time = 201
const _HAVE_SYS_EPOLL_H = 1
const _IFLA_VF_STATS_RX_BYTES = 2
const _SYS_epoll_ctl_old = ___NR_epoll_ctl_old
const _ULONG_MAX = (_LONG_MAX * 2 + 1)
const _CLD_TRAPPED = 4
const _LONG_BIT = 64
const _TCP_REPAIR_OPTIONS = 22
const _X86_CR4_OSXMMEXCPT_BIT = 10
const __POSIX_AIO_MAX = 1
const _RTF_UP = 0x0001
const _TCP_S_DATA_IN = (1 << 2)
const _IFLA_BR_MAX_AGE = 3
const _FNONBLOCK = _O_NONBLOCK
const _IN_ATTRIB = 0x00000004
const _PR_ENDIAN_LITTLE = 1
const _IFLA_GENEVE_REMOTE6 = 7
const _IFLA_BOND_MODE = 1
const _EH_FRAME_FLAGS = "aw"
const _O_APPEND = 02000
const __SC_TYPED_MEMORY_OBJECTS = 165
const _ETHER_MAX_LEN = (_ETH_FRAME_LEN + _ETHER_CRC_LEN)
const ___NR_msgsnd = 69
const _PR_SET_FP_MODE = 45
const _NL_MMAP_STATUS_VALID = 2
const ___NR_mount = 165
const __IOC_TYPEBITS = 8
const _SOCK_DGRAM = 2
const _MOD_OFFSET = _ADJ_OFFSET
const _IFLA_MAP = 14
const _EL2NSYNC = 45
const _IPTOS_LOWCOST = 0x02
const _SYS_munlock = ___NR_munlock
const _TH_ACK = 0x10
const _RTM_DELACTION = 49
const _XTABS = 0014000
const _HAVE_SYS_SYSCALL_H = 1
const ___NR_connect = 42
const _X86_CR4_SMEP_BIT = 20
const _TIOCGICOUNT = 0x545D
const _SYS_statfs = ___NR_statfs
const _NETLINK_RDMA = 20
const _IPV6_2292HOPLIMIT = 8
const _IFF_ONE_QUEUE = 0x2000
const _IPPORT_CMDSERVER = 514
const _PF_MAX = 42
const _RT_CLASS_MAX = 255
const _IPPROTO_IPV6 = 41
const _SIOCSIFBR = 0x8941
const ___INT_LEAST8_MAX__ = 0x7f
const ___DEC128_MANT_DIG__ = 34
const _MAP_SHARED = 0x01
const _EUSERS = 87
const _MAXTC = 6
const _TCP_SYN_SENT = 2
const _PF_NETLINK = 16
const ___DECIMAL_DIG__ = 21
const _ETHER_ADDR_LEN = _ETH_ALEN
const _FFI_TYPE_LAST = _FFI_TYPE_COMPLEX
const _POSIX_MADV_NORMAL = 0
const _ARPHRD_IEEE80211_PRISM = 802
const _ETH_P_8021AD = 0x88A8
const _LINUX_REBOOT_MAGIC2C = 537993216
const _MNT_DETACH = 2
const _IPTOS_ECN_NOT_ECT = 0x00
const _SS_ONSTACK = 1
const _IOC_IN = (__IOC_WRITE << __IOC_DIRSHIFT)
const _ETH_P_8021AH = 0x88E7
const _MREMAP_MAYMOVE = 1
const ___STDC_NO_THREADS__ = 1
const _F_GETLK64 = 5
const _RTPROT_UNSPEC = 0
const _PARODD = 0001000
const ___NR_kexec_load = 246
const ___IFLA_VF_PORT_MAX = 2
const _SYS_swapoff = ___NR_swapoff
const ___STDC_UTF_32__ = 1
const _RT_TABLE_LOCAL = 255
const _FFSYNC = _O_FSYNC
const _PENDIN = 0040000
const ___INT8_MAX__ = 0x7f
const _ETH_P_ARCNET = 0x001A
const _FD_SETSIZE = ___FD_SETSIZE
const _MSG_EOR = 128
const __NET_IF_ARP_H = 1
const _RTM_F_CLONED = 0x200
const _EHWPOISON = 133
const _IPPROTO_NONE = 59
const _TCP_COOKIE_OUT_NEVER = (1 << 1)
const _EPROTO = 71
const __IOC_NRSHIFT = 0
const _F_EXLCK = 4
const ___NR_clone = 56
const ___NR_ptrace = 101
const __POSIX_V7_LPBIG_OFFBIG = -1
const _HAVE_ACOSL = 1
const _SIOCGIFDSTADDR = 0x8917
const __POSIX_LOGIN_NAME_MAX = 9
const _RTNLGRP_IPV6_NETCONF = 25
const _PAGE_MASK = (^(_PAGE_SIZE-1))
const __CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 1107
const __SC_OPEN_MAX = 4
const __SC_2_SW_DEV = 51
const _NLM_F_ACK = 4
const _SCNd8 = "hhd"
const ___FLT128_MIN_10_EXP__ = (-4931)
const _SIOCGRARP = 0x8961
const _IFLA_VF_PORTS = 24
const _CERASE = 0177
const ___NR_setpgid = 109
const _RTF_INTERFACE = 0x40000000
const _PRIoFAST8 = "o"
const ___defined_schedparam = 1
const _BRKINT = 0000002
const ___DECIMAL_BID_FORMAT__ = 1
const __SC_INT_MIN = 105
const _SOL_SOCKET = 1
const __CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS = 1137
const _IFLA_PRIORITY = 9
const _ITIMER_REAL = 0
const _TCFLSH = 0x540B
const _IP_NODEFRAG = 22
const _NETLINK_FIREWALL = 3
const ___NR_sched_getaffinity = 204
const _IPPROTO_UDPLITE = 136
const _FS_PROJINHERIT_FL = 0x20000000
const _MADV_DONTFORK = 10
const _MSG_CMSG_CLOEXEC = 1073741824
const _ENOENT = 2
const _IPTOS_ECN_ECT1 = 0x01
const _IFLA_VF_INFO = 1
const _LOCK_WRITE = 128
const _IPOPT_TS_PRESPEC = 3
const ___POSIX_FADV_NOREUSE = 5
const _ARPOP_REQUEST = 1
const _PTRACE_EVENT_EXIT = 6
const _XATTR_NAME_MAX = 255
const ___S_IFLNK = 0120000
const _IFF_ALLMULTI = 512
const _SKF_AD_PROTOCOL = 0
const _ENOPKG = 65
const ___ATOMIC_RELAXED = 0
const _SYS_getsockopt = ___NR_getsockopt
const _IFLA_VF_LINK_STATE_ENABLE = 1
const _VTDLY = 0040000
const ___NR_timer_delete = 226
const _RTN_UNSPEC = 0
const _SO_SNDTIMEO = 21
const _AF_UNSPEC = _PF_UNSPEC
const _TIOCSERSETMULTI = 0x545B
const _ARPHRD_FCPL = 786
const _LOCK_RW = 192
const _REG_CR2 = 22
const __SC_ARG_MAX = 0
const _ARPHRD_FCPP = 784
const _IFLA_VXLAN_ID = 1
const ___USE_XOPEN = 1
const _IPOPT_SEC = _IPOPT_SECURITY
const _IFLA_TXQLEN = 13
const _SYS_umount2 = ___NR_umount2
const _TUN_TYPE_MASK = 0x000f
const _CLOCK_REALTIME_COARSE = 5
const _IFLA_BR_FDB_FLUSH = 21
const _IP_ADD_MEMBERSHIP = 35
const _RTPROT_DHCP = 16
const _CLONE_PTRACE = 0x00002000
const _PROT_NONE = 0x0
const _LINUX_REBOOT_CMD_RESTART = 0x01234567
const _MAX_INPUT = 255
const _IFLA_VXLAN_GBP = 23
const __SC_TIMERS = 11
const _UIO_MAXIOV = 1024
const __SC_TRACE_SYS_MAX = 244
const _PARMRK = 0000010
const __SC_XOPEN_XPG3 = 99
const _PR_GET_FP_MODE = 46
const __SC_XOPEN_XPG4 = 100
const _MS_DIRSYNC = 128
const __SYS_WAIT_H = 1
const _ETH_P_TRAILER = 0x001C
const _SOL_TCP = 6
const _ADJ_MICRO = 0x1000
const _NDTA_THRESH1 = 2
const _SYS_sched_yield = ___NR_sched_yield
const _IFLA_BRPORT_FLUSH = 24
const _TUNSETGROUP_val = 1074025678
const _SO_CNX_ADVICE = 53
const _NDTA_THRESH3 = 4
const _LOCK_SH = 1
const ___SIZEOF_WCHAR_T__ = 4
const _SEM_VALUE_MAX = (2147483647)
const _SIOCGIFCOUNT = 0x8938
const _IFLA_BRPORT_MCAST_FLOOD = 27
const _SOL_BLUETOOTH = 274
const _ARPHRD_ETHER = 1
const _IPPORT_NAMESERVER = 42
const __SC_BASE = 134
const _HOST_NAME_MAX = 64
const _X86_CR0_ET_BIT = 4
const _F_SETPIPE_SZ = 1031
const ___UINT16_MAX__ = 0xffff
const ___SEG_FS = 1
const _SYS_fremovexattr = ___NR_fremovexattr
const _FFI_TYPE_UINT16 = 7
const ___ILP32_OFF32_LDFLAGS = "-m32"
const _SYS_fsetxattr = ___NR_fsetxattr
const ___NR_exit = 60
const _BPF_H = 0x08
const _PR_SET_SECCOMP = 22
const _ETH_P_DIAG = 0x6005
const _LOGIN_NAME_MAX = 256
const _S_IRWXO = (_S_IRWXG >> 3)
const _ARPHRD_INFINIBAND = 32
const __IOC_WRITE = 1
const _TIOCEXCL = 0x540C
const __SC_THREAD_ROBUST_PRIO_PROTECT = 248
const _PTRACE_O_TRACECLONE = 8
const _SYS_prctl = ___NR_prctl
const _IP_TRANSPARENT = 19
const _IFLA_PORT_HOST_UUID = 5
const ___NR_fanotify_mark = 301
const _HAVE_NET_IF_ARP_H = 1
const _RTF_DYNAMIC = 0x0010
const _SIOCGIFMETRIC = 0x891d
const _IFLA_BR_MCAST_STATS_ENABLED = 42
const _SYS_execve = ___NR_execve
const _ONLRET = 0000040
const _RTAX_RTTVAR = 5
const ___FLT_MIN_EXP__ = (-125)
const _NUD_DELAY = 0x08
const ___NR_sendmmsg = 307
const _IFLA_BR_NF_CALL_IPTABLES = 36
const _IPPORT_ECHO = 7
const ___NR_clock_getres = 229
const _MCAST_UNBLOCK_SOURCE = 44
const _ETH_P_LOOPBACK = 0x9000
const _ITIMER_VIRTUAL = 1
const _PRIiLEAST8 = "i"
const ___SEG_GS = 1
const _IFLA_BRPORT_FAST_LEAVE = 7
const _SYS_setresuid = ___NR_setresuid
const _SHRT_MAX = ___SHRT_MAX__
const _ARPHRD_IEEE80211_RADIOTAP = 803
const ___S_IFCHR = 0020000
const _CMSPAR = 010000000000
const _ARPHRD_VOID = 0xFFFF
const ___NR_listxattr = 194
const __IOC_NRMASK = ((1 << __IOC_NRBITS)-1)
const _IOCSIZE_SHIFT = (__IOC_SIZESHIFT)
const _EAGAIN = 11
const ___FLT_MAX_10_EXP__ = 38
const _IPV6_MULTICAST_LOOP = 19
const ___NR_getpgid = 121
const _SO_PRIORITY = 12
const _MSG_DONTWAIT = 64
const ___GCC_ATOMIC_WCHAR_T_LOCK_FREE = 2
const ___FLT128_EPSILON__ = 1.92592994438723585305597794258492732e-34128
const _EINTR = 4
const _RTF_NOPMTUDISC = 0x4000
const _RTPROT_STATIC = 4
const _IFA_LABEL = 3
const _SO_PROTOCOL = 38
const ___NR_readahead = 187
const _TH_SYN = 0x02
const _RTNLGRP_IPV6_PREFIX = 18
const _ICMP6_DST_UNREACH_ADMIN = 1
const _SIOCGIFPFLAGS = 0x8935
const __SYS_STATFS_H = 1
const ___STDC__ = 1
const ___DEC128_MAX__ = 9.999999999999999999999999999999999E6144
const _IN6_ADDR_GEN_MODE_NONE = 1
const _RTM_SETLINK = 19
const _FFI_OK = 0
const ___IFLA_STATS_MAX = 5
const _ND_ROUTER_SOLICIT = 133
const _LOCK_UN = 8
const _SYS_tee = ___NR_tee
const _FPE_FLTSUB = 8
const _MSG_WAITFORONE = 65536
const __PC_ALLOC_SIZE_MIN = 18
const _ATF_PERM = 0x04
const _DN_DELETE = 0x00000008
const _NI_NUMERICSERV = 2
const _PF_ISDN = 34
const _PR_CAP_AMBIENT = 47
const _IPTOS_TOS_MASK = 0x1E
const __SC_NL_LANGMAX = 120
const ___NR_chmod = 90
const _STDOUT_FILENO = 1
const __LP64 = 1
const ___NR_mq_getsetattr = 245
const _SYS_listen = ___NR_listen
const _IFLA_VF_LINK_STATE_AUTO = 0
const _X86_EFLAGS_RF_BIT = 16
const _TCP_THIN_DUPACK = 17
const _IPOPT_DEBMEAS = 0x40
const _SO_ATTACH_REUSEPORT_EBPF = 52
const ___SIZEOF_DOUBLE__ = 8
const _EMULTIHOP = 72
const __POSIX_QLIMIT = 1
const _SYS_getitimer = ___NR_getitimer
const _RTM_GETQDISC = 38
const _FS_COMPRBLK_FL = 0x00000200
const __SYS_USTAT_H = 1
const _SYS_getpgrp = ___NR_getpgrp
const ___FLT128_MANT_DIG__ = 113
const _SA_ONSTACK = 0x08000000
const _SYS_pkey_free = ___NR_pkey_free
const ___NR_shmctl = 31
const __MKNOD_VER = 0
const __SC_ADVISORY_INFO = 132
const _SYS_getdents64 = ___NR_getdents64
const ___NR_close = 3
const _FS_BTREE_FL = 0x00001000
const ___NR_setdomainname = 171
const _MSG_RST = 4096
const __SC_REALTIME_SIGNALS = 9
const _IN_ALL_EVENTS = (_IN_ACCESS | _IN_MODIFY | _IN_ATTRIB | _IN_CLOSE_WRITE | _IN_CLOSE_NOWRITE | _IN_OPEN | _IN_MOVED_FROM | _IN_MOVED_TO | _IN_CREATE | _IN_DELETE | _IN_DELETE_SELF | _IN_MOVE_SELF)
const _UINT_FAST16_MAX = (18446744073709551615)
const _PTRACE_ATTACH = 16
const ___NR_mknodat = 259
const _IPPROTO_IP = 0
const _SCNi8 = "hhi"
const __SC_LEVEL1_DCACHE_ASSOC = 189
const _SO_PEERNAME = 28
const _X86_CR4_OSFXSR_BIT = 9
const ___DBL_MIN_10_EXP__ = (-307)
const __POSIX2_CHARCLASS_NAME_MAX = 14
const ___BIT_TYPES_DEFINED__ = 1
const __BITS_STAT_H = 1
const _SIGKILL = 9
const ___NR_mmap = 9
const __DIRENT_H = 1
const _RTA_CACHEINFO = 12
const _RTF_MTU = 0x0040
const _NDTPA_QUEUE_LENBYTES = 16
const _CX86_CCR4 = 0xe8
const _IFA_UNSPEC = 0
const ___NR_setrlimit = 160
const _MSG_CONFIRM = 2048
const __SC_NPROCESSORS_ONLN = 84
const _MCAST_JOIN_GROUP = 42
const _EOVERFLOW = 75
const _MADV_WILLNEED = 3
const _ARPHRD_HIPPI = 780
const _NSIG = __NSIG
const _AF_ROUTE = _PF_ROUTE
const _SIOCGSTAMPNS = 0x8907
const _IFLA_MACSEC_REPLAY_PROTECT = 12
const _TIOCMSET = 0x5418
const _NETLINK_KOBJECT_UEVENT = 15
const __POSIX2_EXPR_NEST_MAX = 32
const _IP_MULTICAST_LOOP = 34
const _RTM_GETMDB = 86
const ___INT_LEAST8_WIDTH__ = 8
const ___NR_rt_sigqueueinfo = 129
const __HAVE_STRING_ARCH_mempcpy = 1
const _IFLA_BOND_SLAVE_PERM_HWADDR = 4
const __POSIX_THREAD_PRIO_INHERIT = 200809
const _EPOLLMSG = 1024
const _IFLA_GSO_MAX_SIZE = 41
const __SC_LEVEL1_ICACHE_LINESIZE = 187
const ___NR_msync = 26
const _FF0 = 0000000
const _FF1 = 0100000
const _ETH_P_ATMFATE = 0x8884
const _X86_EFLAGS_ID_BIT = 21
const ___NR_bind = 49
const __DEFAULT_SOURCE = 1
const _IPOPT_SECUR_RESTR = 0xaf13
const _IFLA_VXLAN_COLLECT_METADATA = 25
const _PTRACE_GETFPXREGS = 18
const _SYS_getpriority = ___NR_getpriority
const _HAVE_PIPE2 = 1
const ___NR_clock_settime = 227
const ___NR_munlock = 150
const _RTM_GETLINK = 18
const ___NR_alarm = 37
const ___O_DSYNC = 010000
const _PRIO_PGRP = 1
const ___NR_syncfs = 306
const _ENOTSUP = _EOPNOTSUPP
const _NETLINK_UNUSED = 1
const _ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME = 0x80
const _HAVE_SYS_SOCKET_H = 1
const _SYS_set_robust_list = ___NR_set_robust_list
const _CLOCK_MONOTONIC_COARSE = 6
const __CS_XBS5_LPBIG_OFFBIG_CFLAGS = 1112
const __ASM_X86_UNISTD_64_H = 1
const _SYS_process_vm_readv = ___NR_process_vm_readv
const _X86_CR0_MP_BIT = 1
const _IPOPT_MINOFF = 4
const _IPV6_V6ONLY = 26
const _X86_CR4_FSGSBASE_BIT = 16
const _SIGEV_SIGNAL = 0
const _SYS_rt_sigsuspend = ___NR_rt_sigsuspend
const _RTM_NEWNEIGH = 28
const ___PTHREAD_RWLOCK_INT_FLAGS_SHARED = 1
const ___INT_LEAST64_WIDTH__ = 64
const _SYS_getpeername = ___NR_getpeername
const ___NR_chdir = 80
const ___NR_exit_group = 231
const ___POSIX2_THIS_VERSION = 200809
const _NL0 = 0000000
const __SC_2_C_VERSION = 96
const _ARPHRD_SLIP6 = 258
const _SYS_getegid = ___NR_getegid
const __SC_THREAD_DESTRUCTOR_ITERATIONS = 73
const _SIGTSTP = 20
const _MSG_FIN = 512
const _NDUSEROPT_SRCADDR = 1
const _IN_CLASSC_HOST = (0xffffffff & ^_IN_CLASSC_NET)
const _CHAR_BIT = ___CHAR_BIT__
const _MCL_FUTURE = 2
const _RTAX_UNSPEC = 0
const _IFLA_BOND_FAIL_OVER_MAC = 13
const ___LDBL_HAS_DENORM__ = 1
const _SIGIOT = 6
const _ETH_P_SLOW = 0x8809
const ___NR_vfork = 58
const _IPPORT_NETSTAT = 15
const ___NR_swapoff = 168
const _IFLA_MACSEC_PROTECT = 8
const _AT_SYMLINK_FOLLOW = 0x400
const _PR_MCE_KILL_LATE = 0
const _PORT_PROFILE_RESPONSE_INSUFFICIENT_RESOURCES = 260
const _FS_XFLAG_EXTSIZE = 0x00000800
const __CS_XBS5_ILP32_OFFBIG_LDFLAGS = 1105
const _FS_XFLAG_RTINHERIT = 0x00000100
const _FPE_INTOVF = 2
const ___NR_process_vm_readv = 310
const _IFLA_BRPORT_NO = 18
const _N_SYNC_PPP = 14
const __MKNOD_VER_LINUX = 0
const _IFLA_BR_VLAN_STATS_ENABLED = 41
const _PAGE_SHIFT = 12
const _ILL_ILLOPN = 2
const _LOCK_READ = 64
const _IFLA_BOND_SLAVE_AD_AGGREGATOR_ID = 6
const _SOL_X25 = 262
const _IPTOS_LOWDELAY = 0x10
const __SYS_IOCTL_H = 1
const _IFLA_MACVLAN_MODE = 1
const _SYS_getsid = ___NR_getsid
const ___S_IFSOCK = 0140000
const _PR_SET_MM_ARG_END = 9
const _FFI_TRAMPOLINE_SIZE = 24
const _ETH_P_NCSI = 0x88F8
const _PORT_PROFILE_RESPONSE_INPROGRESS = 257
const _SA_STACK = _SA_ONSTACK
const _IFA_ANYCAST = 5
const _RTAX_CC_ALGO = 16
const _NUD_PROBE = 0x10
const _PTRACE_PEEKUSER = 3
const _ICMP6_TIME_EXCEED_TRANSIT = 0
const __SC_PRIORITY_SCHEDULING = 10
const __CS_POSIX_V7_ILP32_OFFBIG_LIBS = 1138
const _SYS_readlinkat = ___NR_readlinkat
const _S_IEXEC = _S_IXUSR
const __BITS_TIME_H = 1
const _IP_MSFILTER = 41
const _HAVE_AS_X86_AES = 1
const ___RLIMIT_LOCKS = 10
const _TH_URG = 0x20
const __SYS_UIO_H = 1
const _MACSEC_VALIDATE_CHECK = 1
const _IGNCR = 0000200
const ___INTPTR_WIDTH__ = 64
const _BS1 = 0020000
const __CS_POSIX_V7_LP64_OFF64_CFLAGS = 1140
const _BUS_OBJERR = 3
const _SHUT_RD = 0
const _TCP_CONGESTION = 13
const ___NR_query_module = 178
const _NLM_F_ROOT = 0x100
const _EBADRQC = 56
const _SYS_msgctl = ___NR_msgctl
const _IFLA_BR_VLAN_DEFAULT_PVID = 39
const _BPF_MEMWORDS = 16
const _IFLA_VF_VLAN_INFO = 1
const _RTNLGRP_ND_USEROPT = 20
const _ATF_DONTPUB = 0x40
const ___NR_shutdown = 48
const __SC_INT_MAX = 104
const ___NR_setuid = 105
const _HUPCL = 0002000
const _AF_RDS = _PF_RDS
const _PR_SET_TIMERSLACK = 29
const _CLONE_SIGHAND = 0x00000800
const _SCNu16 = "hu"
const _NI_IDN_USE_STD3_ASCII_RULES = 128
const ___NR_dup2 = 33
const ___NR_dup3 = 292
const __POSIX_THREAD_PRIO_PROTECT = 200809
const _PR_SET_MM_MAP = 14
const __CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 1120
const ___NR_sched_getscheduler = 145
const __SC_XOPEN_CRYPT = 92
const _RTM_NEWROUTE = 24
const _SI_LOAD_SHIFT = 16
const _PRIdLEAST16 = "d"
const _IN_ISDIR = 0x40000000
const _IPPORT_EFSSERVER = 520
const _AF_IEEE802154 = _PF_IEEE802154
const _SYS_signalfd4 = ___NR_signalfd4
const ___NR_umount2 = 166
const _IFLA_VRF_TABLE = 1
const _SO_TIMESTAMPING = 37
const _MS_RDONLY = 1
const _SKF_NET_OFF = (-0x100000)
const _DN_ACCESS = 0x00000001
const _SYS_access = ___NR_access
const __SC_V6_LPBIG_OFFBIG = 179
const _IPOPT_RESERVED1 = 0x20
const _TCP_COOKIE_MAX = 16
const _MS_STRICTATIME = 16777216
const ___NR_clock_gettime = 228
const ___NR_semtimedop = 220
const __UTSNAME_RELEASE_LENGTH = __UTSNAME_LENGTH
const ___DEC32_MIN_EXP__ = (-94)
const _HAVE_SYS_PRCTL_H = 1
const __POSIX_REENTRANT_FUNCTIONS = 1
const _BLOCK_SIZE_BITS = 10
const _ECONNRESET = 104
const _IFLA_VF_IB_PORT_GUID = 11
const ___DBL_DECIMAL_DIG__ = 17
const _HAVE_OPENAT = 1
const _TUN_PKT_STRIP = 0x0001
const _VSTOP = 9
const _IPTOS_DSCP_AF11 = 0x28
const _IPTOS_DSCP_AF12 = 0x30
const _IPTOS_DSCP_AF13 = 0x38
const ___NR_recvmmsg = 299
const ___USE_XOPEN2K8 = 1
const _PR_FP_EXC_DIV = 0x010000
const _CLONE_DETACHED = 0x00400000
const _SYS_get_robust_list = ___NR_get_robust_list
const _IFLA_BOND_AD_INFO = 23
const _SO_DETACH_BPF = _SO_DETACH_FILTER
const _EPOLLWRBAND = 512
const __POSIX_TIMERS = 200809
const _PR_CAPBSET_DROP = 24
const _ARPHRD_ASH = 781
const _MS_RMT_MASK = (_MS_RDONLY|_MS_SYNCHRONOUS|_MS_MANDLOCK|_MS_I_VERSION| _MS_LAZYTIME)
const _SYS_mq_notify = ___NR_mq_notify
const _IFF_UP = 1
const _IPPROTO_FRAGMENT = 44
const _SCNiLEAST16 = "hi"
const _RTM_NEWQDISC = 36
const _FS_NOTAIL_FL = 0x00008000
const _ICMP6_DST_UNREACH_ADDR = 3
const ___IFLA_BRPORT_MAX = 28
const ___NR_execve = 59
const _SYS_get_kernel_syms = ___NR_get_kernel_syms
const _IP_BIND_ADDRESS_NO_PORT = 24
const _INT8_MAX = (127)
const _MADV_SEQUENTIAL = 2
const _F_WRLCK = 1
const _IPPORT_USERRESERVED = 5000
const _IP_PMTUDISC_WANT = 1
const _IPOPT_OLEN = 1
const _SYS_create_module = ___NR_create_module
const _IFLA_BR_ROOT_ID = 10
const _SYS_pivot_root = ___NR_pivot_root
const _B230400 = 0010003
const __NET_ROUTE_H = 1
const _ELIBBAD = 80
const _RPM_PCO_SETGLOBAL = 3
const _ENOBUFS = 105
const ___SHRT_WIDTH__ = 16
const _RT_CLASS_UNSPEC = 0
const ___FLT128_MAX_EXP__ = 16384
const _IPTOS_DSCP_AF21 = 0x48
const _IPTOS_DSCP_AF22 = 0x50
const _IPTOS_DSCP_AF23 = 0x58
const ___FLT32X_MAX_10_EXP__ = 308
const __SC_UIO_MAXIOV = 60
const _X86_CR0_EM_BIT = 2
const _SCNo8 = "hho"
const _SYS_ioprio_set = ___NR_ioprio_set
const ___NR_gettimeofday = 96
const _PTRACE_CONT = 7
const _TIOCSPTLCK_val = 1074025521
const _SYS_pipe2 = ___NR_pipe2
const _NETLINK_XFRM = 6
const _TCA_UNSPEC = 0
const __STRING_H = 1
const _ETH_P_8021Q = 0x8100
const _IFLA_VLAN_INGRESS_QOS = 4
const _EPOLLRDBAND = 128
const _SYS_umask = ___NR_umask
const _PACKET_MR_UNICAST = 3
const _NLM_F_ECHO = 8
const _FFI_TYPE_SINT16 = 8
const __SC_TRACE_USER_EVENT_MAX = 245
const _SYS_recvmsg = ___NR_recvmsg
const ___NR_sched_get_priority_min = 147
const _SYS_ppoll = ___NR_ppoll
const _FFI_TYPE_POINTER = 14
const _RTAX_INITCWND = 11
const _IP_PMTUDISC_INTERFACE = 4
const _SIG_SETMASK = 2
const _SOL_ICMPV6 = 58
const _SCNx32 = "x"
const _TCP_MSS = 512
const _ETH_P_80221 = 0x8917
const _CR1 = 0001000
const _CR2 = 0002000
const _CR3 = 0003000
const _SYS_lseek = ___NR_lseek
const __FILE_OFFSET_BITS = 64
const _PF_VSOCK = 40
const __SC_COLL_WEIGHTS_MAX = 40
const __SC_THREAD_CPUTIME = 139
const _PORT_REQUEST_PREASSOCIATE_RR = 1
const _IN_UNMOUNT = 0x00002000
const _IPTOS_DSCP_AF31 = 0x68
const _IPTOS_DSCP_AF32 = 0x70
const _IPTOS_DSCP_AF33 = 0x78
const _IFLA_VXLAN_REMCSUM_RX = 22
const _EPOLLEXCLUSIVE = 268435456
const ___GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = 1
const _PTRACE_GETEVENTMSG = 16897
const _LOCK_MAND = 32
const _NETLINK_USERSOCK = 2
const _TUN_TX_TIMESTAMP = 1
const _SYS_pwritev2 = ___NR_pwritev2
const ___INT_LEAST16_MAX__ = 0x7fff
const _SYS_pread64 = ___NR_pread64
const _PRIoLEAST16 = "o"
const _SCNiLEAST32 = "i"
const _SYS_semctl = ___NR_semctl
const __POSIX_NGROUPS_MAX = 8
const _B4000000 = 0010017
const _PORT_PROFILE_RESPONSE_INVALID = 258
const _PACKET_FANOUT_DATA = 22
const _CREAD = 0000200
const _ETH_P_PPP_MP = 0x0008
const ___FLT32X_DECIMAL_DIG__ = 17
const _X86_CR4_PVI_BIT = 1
const _SYS_epoll_create1 = ___NR_epoll_create1
const _IFLA_BRPORT_CONFIG_PENDING = 20
const ___DBL_MAX_EXP__ = 1024
const _IP_UNBLOCK_SOURCE = 37
const _REG_RBP = 10
const _EKEYREVOKED = 128
const __POSIX_TRACE_EVENT_FILTER = -1
const _AF_LOCAL = _PF_LOCAL
const _FFI_BAD_ABI = 2
const _REG_RBX = 11
const _SCM_TIMESTAMPING = _SO_TIMESTAMPING
const ___NR_getpgrp = 111
const ___NR_rt_sigtimedwait = 128
const ___FD_ZERO_STOS = "stosq"
const _PTRACE_PEEKDATA = 2
const _PTRACE_SYSCALL = 24
const _SCNu32 = "u"
const _LINUX_REBOOT_CMD_SW_SUSPEND = 0xD000FCE2
const _O_DIRECTORY = ___O_DIRECTORY
const _ETHERTYPE_SPRITE = 0x0500
const _SOCK_RAW = 3
const _O_NOATIME = ___O_NOATIME
const _IPTOS_DSCP_AF41 = 0x88
const _IPTOS_DSCP_AF42 = 0x90
const _IPTOS_DSCP_AF43 = 0x98
const _TIOCSPGRP = 0x5410
const _ND_OPT_REDIRECTED_HEADER = 4
const _RTAX_FEATURE_ALLFRAG = (1 << 3)
const _ICMP6_DST_UNREACH_BEYONDSCOPE = 2
const _IPOPT_TIMESTAMP = _IPOPT_TS
const _RTM_GETDCB = 78
const _WORD_BIT = 32
const _TCA_STATS = 3
const _N_SLIP = 1
const _TCP_SAVED_SYN = 28
const __SC_BC_STRING_MAX = 39
const _RTAX_FEATURE_SACK = (1 << 1)
const __XOPEN_SOURCE = 700
const __ATFILE_SOURCE = 1
const _ICMP6_RR_FLAGS_PREVDONE = 0x08
const _ELNRNG = 48
const __POSIX_AIO_LISTIO_MAX = 2
const _RTN_UNICAST = 1
const _RTA_MARK = 16
const ___INT32_MAX__ = 0x7fffffff
const _NAME_MAX = 255
const _AF_VSOCK = _PF_VSOCK
const _F_ULOCK = 0
const _MSG_BATCH = 262144
const _FPE_FLTUND = 5
const ___IFLA_VF_LINK_STATE_MAX = 3
const _TIOCM_DSR = 0x100
const _EPERM = 1
const _REG_RCX = 14
const _MS_NODIRATIME = 2048
const __TERMIOS_H = 1
const ___INTMAX_WIDTH__ = 64
const _SYS_rt_sigpending = ___NR_rt_sigpending
const _IFLA_MASTER = 10
const _EOPNOTSUPP = 95
const _CS5 = 0000000
const _CS6 = 0000020
const __POSIX2_VERSION = ___POSIX2_THIS_VERSION
const __SC_GETPW_R_SIZE_MAX = 70
const _IP_RECVERR = 11
const __POSIX_SHARED_MEMORY_OBJECTS = 200809
const __CS_LFS64_LINTFLAGS = 1007
const _PRIxFAST8 = "x"
const _PRIoLEAST32 = "o"
const _PRIO_USER = 2
const _PR_SET_MM_EXE_FILE = 13
const _TCP_S_DATA_OUT = (1 << 3)
const _RTM_DELNSID = 89
const ___timespec_defined = 1
const _NDTPA_GC_STALETIME = 6
const ___k8 = 1
const ___INT_FAST32_MAX__ = 0x7fffffffffffffff
const __XBS5_LPBIG_OFFBIG = -1
const _SIOCDELMULTI = 0x8932
const _TUNSETNOCSUM_val = 1074025672
const ___LDBL_DENORM_MIN__ = 1.1
const _PF_UNSPEC = 0
const _BPF_MOD = 0x90
const _REG_RDI = 8
const _F_GETOWN = ___F_GETOWN
const ___NR_preadv2 = 327
const _TCPOPT_SACK_PERMITTED = 4
const __SC_THREAD_ATTR_STACKSIZE = 78
const __POSIX_V7_LP64_OFF64 = 1
const _PF_IEEE802154 = 36
const _ELIBMAX = 82
const _B4800 = 0000014
const _SYS_renameat2 = ___NR_renameat2
const _IPPROTO_ENCAP = 98
const _REG_RDX = 12
const _IPV6_2292HOPOPTS = 3
const ___NETINET_IP_H = 1
const ___FLT64X_HAS_DENORM__ = 1
const _F_SETLKW = _F_SETLKW64
const __SC_MEMORY_PROTECTION = 19
const _RTMGRP_IPV6_IFINFO = 0x800
const ___W_CONTINUED = 0xffff
const _BPF_JA = 0x00
const ___NR_nanosleep = 35
const _BPF_MAJOR_VERSION = 1
const ___NR_getegid = 108
const _PF_IUCV = 32
const _PR_CAP_AMBIENT_LOWER = 3
const _MAP_NORESERVE = 0x04000
const _IPOPT_END = _IPOPT_EOL
const _IFF_TAP = 0x0002
const _PRIu8 = "u"
const _TUNGETIFF_val = 2147767506
const _ADJ_MAXERROR = 0x0004
const _RTNLGRP_IPV6_IFINFO = 12
const _FS_DIRTY_FL = 0x00000100
const ___NR_fallocate = 285
const ___NR_set_mempolicy = 238
const _CLONE_SYSVSEM = 0x00040000
const _RTA_MFC_STATS = 17
const _CX86_RCR_BASE = 0xdc
const _RTPROT_KERNEL = 2
const _PR_FPEMU_NOPRINT = 1
const ___FLT_MANT_DIG__ = 24
const ___NR_fstat = 5
const _PTRACE_O_EXITKILL = 1048576
const _NETLINK_INET_DIAG = _NETLINK_SOCK_DIAG
const _NETLINK_SCSITRANSPORT = 18
const ___NR_select = 23
const _IFLA_STATS_LINK_OFFLOAD_XSTATS = 4
const ___NR_pipe = 22
const _SA_NOCLDWAIT = 2
const _SYS_kexec_file_load = ___NR_kexec_file_load
const _B200 = 0000006
const __POSIX_DELAYTIMER_MAX = 32
const _PR_SET_ENDIAN = 20
const _SYS_epoll_pwait = ___NR_epoll_pwait
const _SOL_NETBEUI = 267
const _PRIiFAST8 = "i"
const _SEEK_END = 2
const _SYS_timer_delete = ___NR_timer_delete
const _RLIM_INFINITY = 0xffffffffffffffff
const _SIGSYS = 31
const ___OFF_T_MATCHES_OFF64_T = 1
const _RTNLGRP_PHONET_ROUTE = 22
const __ISOC11_SOURCE = 1
const _SIGXCPU = 24
const _RTN_NAT = 10
const ___LDBL_MAX__ = 1.1
const _UINT_LEAST8_MAX = (255)
const _POSIX_FADV_SEQUENTIAL = 2
const _RTN_XRESOLVE = 11
const _unix = 1
const _SIZE_MAX = (18446744073709551615)
const _STA_DEL = 0x0020
const _MB_LEN_MAX = 16
const _CIBAUD = 002003600000
const ___clockid_t_defined = 1
const __CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS = 1147
const _AI_NUMERICHOST = 0x0004
const _IFLA_BRPORT_GUARD = 5
const _IFLA_VF_RATE = 6
const _PRIX32 = "X"
const _IPTOS_ECN_CE = 0x03
const _IFLA_BR_PRIORITY = 6
const _IPTOS_PREC_NETCONTROL = _IPTOS_CLASS_CS7
const ___NR_getrusage = 98
const _NUD_REACHABLE = 0x02
const ___NR_uselib = 134
const _EPOLLWRNORM = 256
const __SIGSET_H_types = 1
const _TCP_LINGER2 = 8
const _RTNLGRP_IPV4_ROUTE = 7
const _SYS_putpmsg = ___NR_putpmsg
const _ETIME = 62
const _IFLA_HSR_SEQ_NR = 5
const __POSIX_SYMLINK_MAX = 255
const _IFLA_PORT_RESPONSE = 7
const _IFLA_BR_MCAST_ROUTER = 22
const _IFLA_INET6_TOKEN = 7
const _TIOCPKT_FLUSHREAD = 1
const _SYS_set_tid_address = ___NR_set_tid_address
const _B19200 = 0000016
const _IP_DEFAULT_MULTICAST_TTL = 1
const ___SIG_ATOMIC_MIN__ = (-___SIG_ATOMIC_MAX__ - 1)
const _IFLA_BOND_MIN_LINKS = 18
const _IPPROTO_RAW = 255
const _SYS_getresuid = ___NR_getresuid
const _RTA_SRC = 2
const _IPV6_PMTUDISC_DO = 2
const _RT_SCOPE_LINK = 253
const _BPF_LD = 0x00
const _SA_NOCLDSTOP = 1
const _NLA_F_NESTED = (1 << 15)
const _ENAVAIL = 119
const _TIOCSER_TEMT = 0x01
const _IFLA_BRPORT_MULTICAST_ROUTER = 25
const _OPOST = 0000001
const _W_OK = 2
const _IPOPT_RA = 148
const _ETHERTYPE_IPX = 0x8137
const _RTM_GETNEIGHTBL = 66
const __SC_V6_LP64_OFF64 = 178
const _DELAYTIMER_MAX = 2147483647
const _PR_GET_NAME = 16
const _IFLA_BRPORT_COST = 3
const _SIOCGIFBR = 0x8940
const _IFLA_MACSEC_INC_SCI = 9
const _IN_ONESHOT = 0x80000000
const _SYS_adjtimex = ___NR_adjtimex
const _IPOPT_RR = 7
const _PRId8 = "d"
const _SYS_pwrite64 = ___NR_pwrite64
const _PR_SET_NAME = 15
const _VQUIT = 1
const _FS_XFLAG_EXTSZINHERIT = 0x00001000
const _IFLA_PORT_INSTANCE_UUID = 4
const _IPTOS_CLASS_CS3 = 0x60
const _RTF_ADDRCONF = 0x00040000
const _ETH_P_EDSA = 0xDADA
const ___FLT128_MIN_EXP__ = (-16381)
const ___NR_setfsuid = 122
const _IPTOS_CLASS_CS6 = 0xc0
const _IFLA_BRPORT_BRIDGE_ID = 14
const _ICMP6_TIME_EXCEEDED = 3
const ___NR_setfsgid = 123
const _SIOCDELDLCI = 0x8981
const _SIOCGARP = 0x8954
const _RTF_DEFAULT = 0x00010000
const _SYS_mq_open = ___NR_mq_open
const _SYS_clock_getres = ___NR_clock_getres
const _MQ_PRIO_MAX = 32768
const __SC_CHAR_MAX = 102
const _IPV6_ADD_MEMBERSHIP = _IPV6_JOIN_GROUP
const __STAT_VER_LINUX = 1
const _IFLA_BRPORT_LEARNING_SYNC = 11
const _ENOTNAM = 118
const _TIOCPKT_FLUSHWRITE = 2
const _MAP_HUGETLB = 0x40000
const _HAVE_FACCESSAT = 1
const ___DBL_MIN_EXP__ = (-1021)
const _X86_CR4_PCIDE_BIT = 17
const _SCNiLEAST8 = "hhi"
const _IPV6_PMTUDISC_PROBE = 3
const _IPPORT_FINGER = 79
const _PTRACE_SEIZE_DEVEL = 2147483648
const _PORT_UUID_MAX = 16
const _LONG_LONG_MAX = ___LONG_LONG_MAX__
const _INT8_MIN = (-128)
const ___NR_write = 1
const ___S_IFBLK = 0060000
const _SCHED_FIFO = 1
const __PATH_HEQUIV = "/etc/hosts.equiv"
const _BPF_MSH = 0xa0
const __PC_SYNC_IO = 9
const ___have_sigval_t = 1
const ___NR_recvmsg = 47
const _FASYNC = _O_ASYNC
const _RTMGRP_IPV6_MROUTE = 0x200
const _HAVE_SYNC_BOOL_COMPARE_AND_SWAP_4 = 1
const _EPOLL_CTL_ADD = 1
const _USHRT_MAX = (_SHRT_MAX * 2 + 1)
const __SC_TRACE = 181
const _PTRACE_SINGLESTEP = 9
const _IFLA_LINK = 5
const _NDTPA_RETRANS_TIME = 5
const _HAVE_SYNC_BOOL_COMPARE_AND_SWAP_8 = 1
const _RTM_GETTFILTER = 46
const _SYS_msgrcv = ___NR_msgrcv
const ___NR_msgctl = 71
const _HAVE_RENAMEAT = 1
const _IFLA_XDP_ATTACHED = 2
const _SYS_epoll_create = ___NR_epoll_create
const _EPOLLIN = 1
const _IFLA_BOND_AD_USER_PORT_KEY = 25
const __BITS_POSIX_OPT_H = 1
const _TUNATTACHFILTER_val = 1074812117
const _TCP_MAX_WINSHIFT = 14
const _RTMGRP_DECnet_IFADDR = 0x1000
const _PRIo32 = "o"
const _AF_AX25 = _PF_AX25
const ___NR_open = 2
const _ARPHRD_EUI64 = 27
const _RTA_GATEWAY = 5
const ___NR_truncate = 76
const ___NR_getrlimit = 97
const __POSIX_CHOWN_RESTRICTED = 0
const _AF_ATMSVC = _PF_ATMSVC
const _PR_SET_MM_START_BRK = 6
const _RTAX_LOCK = 1
const _SYS_getdents = ___NR_getdents
const _SO_DOMAIN = 39
const _S_ISVTX = ___S_ISVTX
const _PTRACE_POKEDATA = 5
const _PACKET_ORIGDEV = 9
const _IPOPT_TS = 68
const ___IFLA_OFFLOAD_XSTATS_MAX = 2
const __SC_SHRT_MAX = 113
const _REG_RIP = 16
const _X86_CR4_VME_BIT = 0
const _SA_SIGINFO = 4
const _REG_CSGSFS = 18
const _HAVE_SYSCALL = 1
const __TIME_H = 1
const _SYS_getuid = ___NR_getuid
const _IPV6_PMTUDISC_WANT = 1
const __SC_2_PBS_MESSAGE = 171
const ___NR_membarrier = 324
const _SYS_wait4 = ___NR_wait4
const _BPF_K = 0x00
const _ENOTUNIQ = 76
const _ND_OPT_HOME_AGENT_INFO = 8
const _NI_NAMEREQD = 8
const _IPV6_MULTICAST_HOPS = 18
const _NLM_F_DUMP_INTR = 16
const _LINUX_REBOOT_CMD_POWER_OFF = 0x4321FEDC
const _IFLA_INET6_ADDR_GEN_MODE = 8
const _ENOSR = 63
const _PR_GET_TIMING = 13
const __POSIX_C_SOURCE = 200809
const _TUNSETTXFILTER_val = 1074025681
const _PR_CAP_AMBIENT_IS_SET = 1
const ___SIZEOF_PTHREAD_MUTEXATTR_T = 4
const _SYS_name_to_handle_at = ___NR_name_to_handle_at
const _B576000 = 0010006
const _SEEK_SET = 0
const _BPF_OR = 0x40
const _PF_ROUTE = _PF_NETLINK
const ___FLT64_MIN_EXP__ = (-1021)
const __CS_POSIX_V6_ILP32_OFF32_CFLAGS = 1116
const _TCP_MAXSEG = 2
const _N_IRDA = 11
const _IPV6_RTHDR_STRICT = 1
const _PACKET_RECV_OUTPUT = 3
const _MADV_DONTNEED = 4
const _ND_REDIRECT = 137
const _IPPROTO_ROUTING = 43
const __POSIX_THREAD_CPUTIME = 0
const _RTAX_QUICKACK = 15
const ___FLT32_MAX_10_EXP__ = 38
const _BPF_MUL = 0x20
const _SYS_epoll_wait_old = ___NR_epoll_wait_old
const _IP_PMTUDISC_PROBE = 3
const _SYS_sysfs = ___NR_sysfs
const __SC_LEVEL3_CACHE_SIZE = 194
const _IPTOS_PREC_INTERNETCONTROL = _IPTOS_CLASS_CS6
const _HAVE_ASINL = 1
const _NETLINK_ISCSI = 8
const _NLM_F_ATOMIC = 0x400
const _FS_XFLAG_NOSYMLINKS = 0x00000400
const _F_LOCK = 1
const _ICMP6_PARAMPROB_HEADER = 0
const _ETH_P_IEEE802154 = 0x00F6
const _SIOCGIFHWADDR = 0x8927
const _SYS_semget = ___NR_semget
const _PR_SET_MM_MAP_SIZE = 15
const _RTN_BLACKHOLE = 6
const _SYS_pkey_alloc = ___NR_pkey_alloc
const _AF_INET6 = _PF_INET6
const _HAVE_MATHERR = 1
const _NLA_HDRLEN_val = 4
const _HAVE_REMOVEXATTR = 1
const _ICMP6_RR_FLAGS_SPECSITE = 0x10
const ___NR_setns = 308
const ___WNOTHREAD = 0x20000000
const _ETH_P_LOOP = 0x0060
const _VEOL = 11
const _MS_NODEV = 4
const ___NR_getrandom = 318
const _RTF_ALLONLINK = 0x00020000
const _RTNLGRP_DECnet_RULE = 16
const _LINKER_SUPPORTS_SPLIT_STACK = 1
const _MS_KERNMOUNT = 4194304
const _IUCLC = 0001000
const _HAVE_SEM_TIMEDWAIT = 1
const ___PREFIX_MAX = 3
const _MAP_STACK = 0x20000
const _SYS_personality = ___NR_personality
const __POSIX_MONOTONIC_CLOCK = 0
const _UTIME_OMIT = ((1 << 30) - 2)
const _PRIoLEAST8 = "o"
const _PR_FP_EXC_INV = 0x100000
const _ETHERTYPE_VLAN = 0x8100
const _RTPROT_GATED = 8
const _MS_MOVE = 8192
const _IFLA_BRPORT_DESIGNATED_PORT = 15
const _PR_SET_TSC = 26
const __STDC_PREDEF_H = 1
const _IFF_AUTOMEDIA = 16384
const ___USE_FORTIFY_LEVEL = 0
const _EBFONT = 59
const ___NDTA_MAX = 10
const ___SIZEOF_LONG_LONG__ = 8
const _IPV6_PMTUDISC_DONT = 0
const _IPVLAN_MODE_L3S = 2
const _O_CLOEXEC = ___O_CLOEXEC
const _SKF_AD_MARK = 20
const _IFF_SLAVE = 2048
const _DT_REG = 8
const _FALLOC_FL_PUNCH_HOLE = 2
const _ARPHRD_NETROM = 0
const ___LDBL_DIG__ = 18
const __SC_USER_GROUPS = 166
const __UNISTD_H = 1
const _TCP_MAXWIN = 65535
const _FS_NODUMP_FL = 0x00000040
const _TIOCSLCKTRMIOS = 0x5457
const ___NR_finit_module = 313
const _SKF_AD_MAX = 64
const _REG_R14 = 6
const _IFF_POINTOPOINT = 16
const _FALLOC_FL_ZERO_RANGE = 16
const _IFLA_BR_GC_TIMER = 19
const ___NR_fadvise64 = 221
const _PR_SET_MM_ARG_START = 8
const _EPOLLPRI = 2
const _EAI_FAIL = -4
const __SC_MEMLOCK_RANGE = 18
const ___NR_io_submit = 209
const _N_SMSBLOCK = 12
const _TCPI_OPT_SACK = 2
const _TIOCGETD = 0x5424
const __SC_2_C_DEV = 48
const _NETLINK_SELINUX = 7
const _CLOCK_THREAD_CPUTIME_ID = 3
const __SC_CHAR_BIT = 101
const _SA_RESETHAND = 0x80000000
const _ADJ_STATUS = 0x0010
const _PR_SET_PTRACER = 0x59616d61
const _PR_SET_MM_BRK = 7
const ___ILP32_OFFBIG_CFLAGS = "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
const __SC_2_PBS_LOCATE = 170
const __SYS_USER_H = 1
const __SC_SHARED_MEMORY_OBJECTS = 22
const _RTMGRP_IPV6_ROUTE = 0x400
const _IPVLAN_MODE_MAX = 3
const _B3000000 = 0010015
const _MS_MGC_VAL = 0xC0ED0000
const _ADJ_ESTERROR = 0x0008
const _RTNH_F_LINKDOWN = 16
const _ETH_P_DNA_DL = 0x6001
const _PR_SET_TIMING = 14
const ___NDA_MAX = 11
const ___NR_setgroups = 116
const _WAIT_ANY = (-1)
const ___ORDER_BIG_ENDIAN__ = 4321
const _ARPHRD_X25 = 271
const _LLONG_MAX = ___LONG_LONG_MAX__
const _SO_DONTROUTE = 5
const _CX86_PCR0 = 0x20
const _ARPHRD_ECONET = 782
const ___GNUC_STDC_INLINE__ = 1
const _MS_PRIVATE = 262144
const _MACVLAN_MACADDR_DEL = 1
const _SCHED_RESET_ON_FORK = 0x40000000
const _PORT_PROFILE_RESPONSE_SUCCESS = 256
const _PR_GET_DUMPABLE = 3
const _NDA_UNSPEC = 0
const __SC_RE_DUP_MAX = 44
const _SYS_preadv = ___NR_preadv
const _MOD_MAXERROR = _ADJ_MAXERROR
const _O_DIRECT = ___O_DIRECT
const __SC_PII_INTERNET = 56
const _RTNLGRP_IPV6_IFADDR = 9
const ___IFLA_PORT_MAX = 8
const _RTM_NEWADDR = 20
const _TIOCMIWAIT = 0x545C
const _SYS_sched_setscheduler = ___NR_sched_setscheduler
const _HAVE_SYS_SYSINFO_H = 1
const ___NR_stat = 4
const _VEOF = 4
const _IFA_F_MCAUTOJOIN = 0x400
const __SC_2_VERSION = 46
const _HAVE_DL_ITERATE_PHDR = 1
const ___IFLA_VF_STATS_MAX = 7
const _SYS_init_module = ___NR_init_module
const __POSIX_MQ_OPEN_MAX = 8
const _SYS_lgetxattr = ___NR_lgetxattr
const _SYS_rmdir = ___NR_rmdir
const _ETHERTYPE_AARP = 0x80F3
const _PACKAGE_TARNAME = "libgo"
const _INT_LEAST8_MAX = (127)
const _IPTOS_PREC_ROUTINE = _IPTOS_CLASS_CS0
const _IFA_F_OPTIMISTIC = 0x04
const _NDTPA_UNSPEC = 0
const ___NR_pselect6 = 270
const _F_GETSIG = ___F_GETSIG
const _SO_WIFI_STATUS = 41
const _S_IWOTH = (_S_IWGRP >> 3)
const _INPCK = 0000020
const _NDTPA_APP_PROBES = 9
const ___O_LARGEFILE = 0
const _PORT_VDP_RESPONSE_VTID_VERSION_VIOALTION = 5
const ___NR_setxattr = 188
const ___FLT32_HAS_INFINITY__ = 1
const __CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 1129
const _PR_GET_TSC = 25
const _RTM_GETNEIGH = 30
const _PTRACE_SETOPTIONS = 16896
const ___NR_epoll_create = 213
const _IPTOS_RELIABILITY = 0x04
const ___IFLA_MAX = 44
const _ARPHRD_FRAD = 770
const _SIOCSIFBRDADDR = 0x891a
const ___UINTPTR_MAX__ = 0xffffffffffffffff
const __XLOCALE_H = 1
const ___NR_fanotify_init = 300
const _AT_NO_AUTOMOUNT = 0x800
const ___NR_epoll_create1 = 291
const _SYS_setresgid = ___NR_setresgid
const _N_PROFIBUS_FDL = 10
const _BPF_XOR = 0xa0
const _ICMP6_RR_FLAGS_REQRESULT = 0x40
const _IFLA_IPOIB_MODE = 2
const _MS_SLAVE = 524288
const _SYS_query_module = ___NR_query_module
const _SYS_timer_getoverrun = ___NR_timer_getoverrun
const ___NR_fremovexattr = 199
const _IFA_F_SECONDARY = 0x01
const __SC_JOB_CONTROL = 7
const ___NR_move_pages = 279
const _IFLA_CARRIER_CHANGES = 35
const _INET6_ADDRSTRLEN = 46
const _IFLA_IPOIB_PKEY = 1
const _IPPROTO_DCCP = 33
const _S_IRGRP = (_S_IRUSR >> 3)
const _SOL_IRDA = 266
const _HAVE_UNSHARE = 1
const _PF_TIPC = 30
const ___NR_listen = 50
const _SCNxLEAST16 = "hx"
const _IFLA_MACSEC_PAD = 14
const _AI_CANONIDN = 0x0080
const _PR_MCE_KILL_GET = 34
const _TUN_F_CSUM = 0x01
const ___FLT32X_MAX_EXP__ = 1024
const _AF_PACKET = _PF_PACKET
const _IFLA_BRPORT_MODE = 4
const _PACKET_LOSS = 14
const _MOD_ESTERROR = _ADJ_ESTERROR
const _IFLA_STATS_LINK_64 = 1
const ___NR_fgetxattr = 193
const _TCP_QUICKACK = 12
const _O_TMPFILE = ___O_TMPFILE
const _EFBIG = 27
const __SC_2_C_BIND = 47
const _IPTOS_CLASS_CS0 = 0x00
const _IPTOS_CLASS_CS1 = 0x20
const _IPTOS_CLASS_CS2 = 0x40
const _SYS_fsync = ___NR_fsync
const _IPTOS_CLASS_CS4 = 0x80
const _IPTOS_CLASS_CS5 = 0xa0
const __IOC_DIRSHIFT = (__IOC_SIZESHIFT+__IOC_SIZEBITS)
const _IPTOS_CLASS_CS7 = 0xe0
const ___FLT64X_DIG__ = 18
const _LINUX_REBOOT_MAGIC2A = 85072278
const _PR_MCE_KILL_CLEAR = 0
const _PTRACE_O_MASK = 3145983
const _EXDEV = 18
const _NUD_INCOMPLETE = 0x01
const _X86_CR3_PCD_BIT = 4
const _PTRACE_SETSIGINFO = 16899
const _EL3HLT = 46
const _SYS_fanotify_mark = ___NR_fanotify_mark
const __POSIX_NAME_MAX = 14
const ___NR_timer_getoverrun = 225
const _IPV6_TCLASS = 67
const _NDTA_PARMS = 6
const _AF_X25 = _PF_X25
const _BSDLY = 0020000
const _MSG_PROXY = 16
const _IFLA_MACSEC_UNSPEC = 0
const ___NR_afs_syscall = 183
const ___IFLA_IPVLAN_MAX = 2
const ___UINT_FAST8_MAX__ = 0xff
const __SC_CHAR_MIN = 103
const _FS_COMPR_FL = 0x00000004
const _ICMP6_RR_RESULT_FLAGS_OOB = 0x0200
const _IFLA_BOND_PACKETS_PER_SLAVE = 20
const _IFLA_VF_STATS = 8
const ___NR_mq_open = 240
const _IFF_MASTER = 1024
const _PTRACE_SINGLEBLOCK = 33
const _SYS_gettimeofday = ___NR_gettimeofday
const ___NR_accept = 43
const __POSIX_MESSAGE_PASSING = 200809
const ___PTRDIFF_MAX__ = 0x7fffffffffffffff
const _SI_KERNEL = 128
const __SC_BC_BASE_MAX = 36
const _TUNSETLINK_val = 1074025677
const _SYS_sync_file_range = ___NR_sync_file_range
const _ARPHRD_CSLIP = 257
const _PR_FP_EXC_OVF = 0x020000
const ___NR_socketpair = 53
const _SYS_userfaultfd = ___NR_userfaultfd
const _CLD_DUMPED = 3
const _SYS_migrate_pages = ___NR_migrate_pages
const _CSIZE = 0000060
const _RTMGRP_TC = 8
const _EACCES = 13
const __POSIX_MAX_CANON = 255
const _RTPROT_ZEBRA = 11
const __POSIX_THREAD_THREADS_MAX = 64
const _CLOCK_BOOTTIME = 7
const ___x86_64 = 1
const _CQUIT = 034
const __SC_XOPEN_VERSION = 89
const ___INT16_MAX__ = 0x7fff
const ___NR_io_cancel = 210
const __SYS_CDEFS_H = 1
const _SCNxLEAST32 = "x"
const _ETH_P_MOBITEX = 0x0015
const _SI_TIMER = -2
const _ENOKEY = 126
const _IFLA_BRPORT_TOPOLOGY_CHANGE_ACK = 19
const _ARPHRD_CSLIP6 = 259
const ___WINT_MIN__ = 0
const ___S_IFREG = 0100000
const _INTPTR_MIN = (-9223372036854775807-1)
const ___S_ISUID = 04000
const _PR_SET_SECUREBITS = 28
const _SKF_AD_RXHASH = 32
const _PF_LOCAL = 1
const _ENOTSOCK = 88
const _S_IFMT = ___S_IFMT
const ___NR_kcmp = 312
const _SYS_splice = ___NR_splice
const __POSIX_TRACE_INHERIT = -1
const __SC_SHRT_MIN = 114
const _ARPHRD_LAPB = 516
const _CLOCK_MONOTONIC_RAW = 4
const _MCAST_EXCLUDE = 0
const _SIOCSIFMTU = 0x8922
const _SIOCDELRT = 0x890C
const _SIOCGIFCONF = 0x8912
const _FS_SECRM_FL = 0x00000001
const ___INT_FAST32_WIDTH__ = 64
const __PC_MAX_CANON = 1
const _FIOCLEX = 0x5451
const ___ILP32_OFFBIG_LDFLAGS = "-m32"
const _IFLA_HSR_MULTICAST_SPEC = 3
const ___INT_FAST16_MAX__ = 0x7fffffffffffffff
const _SYS_mlockall = ___NR_mlockall
const _SYS_set_thread_area = ___NR_set_thread_area
const _MS_BIND = 4096
const _ARPOP_InREQUEST = 8
const _SIZEOF_VOID_P = 8
const _SIOCGIFNETMASK = 0x891b
const _SCHED_BATCH = 3
const _RTM_NEWACTION = 48
const _AF_KCM = _PF_KCM
const _SYS_copy_file_range = ___NR_copy_file_range
const _ARPHRD_SLIP = 256
const _MS_RELATIME = 2097152
const _RUSAGE_SELF = 0
const ___F_SETOWN_EX = 15
const ___RLIMIT_NICE = 13
const _SO_ATTACH_FILTER = 26
const _ETH_P_TIPC = 0x88CA
const _IFA_F_HOMEADDRESS = 0x10
const _SKF_LL_OFF = (-0x200000)
const _RTF_THROW = 0x2000
const _SYS_open_by_handle_at = ___NR_open_by_handle_at
const ___SIZEOF_WINT_T__ = 4
const _IFLA_BRPORT_PROXYARP = 10
const _SYS_madvise = ___NR_madvise
const _STA_FREQHOLD = 0x0080
const __PATH_NETWORKS = "/etc/networks"
const _NCCS = 32
const __SC_V6_ILP32_OFF32 = 176
const _CLD_EXITED = 1
const _ETOOMANYREFS = 109
const _RTAX_FEATURE_ECN = (1 << 0)
const _ETH_P_HSR = 0x892F
const _SYS_io_setup = ___NR_io_setup
const _RLIMIT_CORE = 4
const _SYS_keyctl = ___NR_keyctl
const __SC_SEM_NSEMS_MAX = 32
const _EPOLLWAKEUP = 536870912
const ___NR_flistxattr = 196
const __SC_BARRIERS = 133
const _SYS_setgid = ___NR_setgid
const __SC_WORD_BIT = 107
const _SYS_clone = ___NR_clone
const _IN_CLASSB_NSHIFT = 16
const _NDTPA_PROXY_QLEN = 14
const _PRIi16 = "i"
const _IFLA_BOND_AD_INFO_PARTNER_MAC = 5
const ___NR_symlinkat = 266
const _HAVE_FUTIMESAT = 1
const ___PDP_ENDIAN = 3412
const _PTHREAD_KEYS_MAX = 1024
const _MS_NOSUID = 2
const _IFLA_BR_MCAST_QUERY_INTVL = 33
const ___UINTMAX_MAX__ = 0xffffffffffffffff
const _IFLA_WEIGHT = 15
const _IPV6_XFRM_POLICY = 35
const ___NR_access = 21
const __SC_LEVEL1_ICACHE_SIZE = 185
const _RTMGRP_IPV6_IFADDR = 0x100
const ___NR_link = 86
const _FS_XFLAG_REALTIME = 0x00000001
const ___PRIPTR_PREFIX = "l"
const _PTRACE_POKEUSER = 6
const ___SCHAR_MAX__ = 0x7f
const ___IFLA_VRF_MAX = 2
const _AF_IPX = _PF_IPX
const _MS_BORN = (1<<29)
const _IFLA_XDP = 43
const _IFLA_STATS = 7
const _EROFS = 30
const _SO_NO_CHECK = 11
const _BC_BASE_MAX = __POSIX2_BC_BASE_MAX
const _X86_EFLAGS_IF_BIT = 9
const __XOPEN_SHM = 1
const _REG_RSI = 9
const _ARPHRD_LOCALTLK = 773
const __SC_DEVICE_SPECIFIC_R = 142
const __SC_SELECT = 59
const ___IFA_MAX = 9
const _SYS_faccessat = ___NR_faccessat
const _CSTOPB = 0000100
const _MACVLAN_MACADDR_SET = 3
const _UINT_MAX = (_INT_MAX * 2 + 1)
const _PR_TIMING_STATISTICAL = 0
const _SCNdFAST8 = "hhd"
const _MAXTTL = 255
const _EAI_NODATA = -5
const _TCP_CA_CWR = 2
const _IXON = 0002000
const ___gnu_linux__ = 1
const __PATH_SERVICES = "/etc/services"
const ___IFLA_VF_VLAN_INFO_MAX = 2
const _AF_UNIX = _PF_UNIX
const _ETH_P_HDLC = 0x0019
const _PR_MPX_ENABLE_MANAGEMENT = 43
const _RTPROT_BIRD = 12
const _ARPHRD_HWX25 = 272
const _RTM_DELROUTE = 25
const _IFLA_BR_VLAN_PROTOCOL = 8
const _IFLA_BRPORT_UNSPEC = 0
const _RTM_GETADDR = 22
const _TCION = 3
const _AF_KEY = _PF_KEY
const _SYS_fchmodat = ___NR_fchmodat
const _CLONE_NEWUSER = 0x10000000
const _TIOCNOTTY = 0x5422
const _SO_NOFCS = 43
const _SYS_clock_settime = ___NR_clock_settime
const _IP_PKTOPTIONS = 9
const _TCP_QUEUES_NR = 3
const ___FLT64_DECIMAL_DIG__ = 17
const _ICMP6_TIME_EXCEED_REASSEMBLY = 1
const _IPTOS_DSCP_MASK = 0xfc
const _RT_SCOPE_UNIVERSE = 0
const _CLOCK_PROCESS_CPUTIME_ID = 2
const _IFLA_GENEVE_TOS = 4
const _PR_FP_EXC_DISABLED = 0
const _MADV_DODUMP = 17
const _SYS_get_thread_area = ___NR_get_thread_area
const _SOL_PNPIPE = 275
const _MAX_LINKS = 32
const _RTNL_FAMILY_IPMR = 128
const _NL_MMAP_STATUS_COPY = 3
const __SC_READER_WRITER_LOCKS = 153
const __SC_AIO_PRIO_DELTA_MAX = 25
const _ARPHRD_FCFABRIC = 787
const _CLONE_PARENT_SETTID = 0x00100000
const _SYS_newfstatat = ___NR_newfstatat
const _IFF_NOTRAILERS = 32
const _TCP_SAVE_SYN = 27
const _PRIi32 = "i"
const _TIME_ERROR = 5
const ___NR_read = 0
const _VEOL2 = 16
const _ETHERTYPE_NTRAILER = 16
const __SC_MONOTONIC_CLOCK = 149
const ___UINT_LEAST64_MAX__ = 0xffffffffffffffff
const _HAVE_AS_X86_PCREL = 1
const _SYS_setpriority = ___NR_setpriority
const _ATF_MAGIC = 0x80
const _TUN_FLT_ALLMULTI = 0x0001
const _NETLINK_RX_RING = 6
const _ENOTRECOVERABLE = 131
const _PTRACE_INTERRUPT = 16903
const _AF_CAIF = _PF_CAIF
const _SOL_IPV6 = 41
const _IFLA_BROADCAST = 2
const ___LDBL_MANT_DIG__ = 64
const _FFI_TYPE_SINT8 = 6
const ___NR_waitid = 247
const _IXANY = 0004000
const _SYS_sched_setaffinity = ___NR_sched_setaffinity
const ___FLT64X_HAS_QUIET_NAN__ = 1
const _POLL_ERR = 4
const _IFLA_XDP_UNSPEC = 0
const _F_RDLCK = 0
const _SYS_rt_sigprocmask = ___NR_rt_sigprocmask
const _AT_FDCWD = -100
const __SC_PII_OSI_CLTS = 64
const ___USE_EXTERN_INLINES = 1
const _IFLA_BOND_SLAVE_AD_PARTNER_OPER_PORT_STATE = 8
const __CS_GNU_LIBPTHREAD_VERSION = 3
const _TCSADRAIN = 1
const _LONG_MAX = ___LONG_MAX__
const _PRId16 = "d"
const __SYS_INOTIFY_H = 1
const _SYS_bpf = ___NR_bpf
const _RTNLGRP_NOP4 = 17
const __SC_XOPEN_XCU_VERSION = 90
const _PR_MPX_DISABLE_MANAGEMENT = 44
const _INT_LEAST8_MIN = (-128)
const _SIGIO = 29
const ___LINK_XSTATS_TYPE_MAX = 2
const __PC_FILESIZEBITS = 13
const _TIOCGPGRP = 0x540F
const ___FLT32X_MIN_EXP__ = (-1021)
const _TIOCGWINSZ_val = 21523
const __SC_LEVEL2_CACHE_LINESIZE = 193
const _ETH_P_ATMMPOA = 0x884c
const _HAVE_STRINGS_H = 1
const _DN_CREATE = 0x00000004
const _SO_OOBINLINE = 10
const _PACKET_ROLLOVER_STATS = 21
const __POSIX_ASYNCHRONOUS_IO = 200809
const __CS_LFS_LIBS = 1002
const _PACKET_MR_PROMISC = 1
const ___FLT64_MAX__ = 1.79769313486231570814527423731704357e+30864
const ___USE_ISOC11 = 1
const _TCSBRK = 0x5409
const ___PTRDIFF_WIDTH__ = 64
const _BPF_MINOR_VERSION = 1
const ___GNU_LIBRARY__ = 6
const ___STDC_ISO_10646__ = 201605
const _EISNAM = 120
const __SC_LEVEL4_CACHE_LINESIZE = 199
const _IFLA_LINKINFO = 18
const _IP_PMTUDISC_DO = 2
const _PTRACE_OLDSETOPTIONS = 21
const _IP_PKTINFO = 8
const _SPLICE_F_NONBLOCK = 2
const _CLONE_CHILD_CLEARTID = 0x00200000
const _HAVE_OFF64_T = 1
const _FS_EOFBLOCKS_FL = 0x00400000
const __SC_FILE_SYSTEM = 148
const _CHARCLASS_NAME_MAX = 2048
const _INT_MAX = ___INT_MAX__
const ___LP64_OFF64_CFLAGS = "-m64"
const __SC_LEVEL2_CACHE_ASSOC = 192
const _TUN_F_TSO4 = 0x02
const __POSIX_THREADS = 200809
const _RTEXT_FILTER_BRVLAN = (1 << 1)
const _RTAX_REORDERING = 9
const _PF_ATMSVC = 20
const _NSS_BUFLEN_GROUP = 1024
const _PR_TSC_SIGSEGV = 2
const ___NR_semctl = 66
const _SOL_TIPC = 271
const _MLD_LISTENER_REPORT = 131
const _UPAGES = 1
const __SC_PII_OSI_M = 65
const _FS_XFLAG_PROJINHERIT = 0x00000200
const _MSG_ERRQUEUE = 8192
const _ARPHRD_IEEE802154 = 804
const _TIOCPKT = 0x5420
const _ESRCH = 3
const ___SIZEOF_PTHREAD_RWLOCK_T = 56
const __POSIX2_BC_STRING_MAX = 1000
const _IFLA_INET6_UNSPEC = 0
const _ATF_USETRAILERS = 0x10
const _IN_MOVE_SELF = 0x00000800
const ___SIG_ATOMIC_WIDTH__ = 32
const __SC_SYSTEM_DATABASE_R = 163
const _RTA_SESSION = 13
const _PACKAGE_VERSION = "version-unused"
const ___DEC128_SUBNORMAL_MIN__ = 0.000000000000000000000000000000001E-6143
const _B2000000 = 0010013
const _SYS_chmod = ___NR_chmod
const ___UINT_LEAST8_MAX__ = 0xff
const ___INT_FAST16_WIDTH__ = 64
const _SYS_eventfd2 = ___NR_eventfd2
const _SIGBUS = 7
const _FP_XSTATE_MAGIC1 = 0x46505853
const _FP_XSTATE_MAGIC2 = 0x46505845
const _TCGETS_val = 21505
const _NLM_F_REQUEST = 1
const _MADV_NOHUGEPAGE = 15
const _HAVE_INOTIFY_INIT = 1
const _PR_SET_KEEPCAPS = 8
const _PR_ENDIAN_BIG = 0
const _IPPORT_LOGINSERVER = 513
const _SYS_clock_gettime = ___NR_clock_gettime
const _MSG_TRYHARD = 4
const _PR_SET_MM_AUXV = 12
const __POSIX_SYNCHRONIZED_IO = 200809
const _SYS_close = ___NR_close
const _PR_SET_UNALIGN = 6
const _SYS_brk = ___NR_brk
const __NSIG = 65
const __POSIX_FD_SETSIZE = __POSIX_OPEN_MAX
const _ENOTTY = 25
const _RTA_PRIORITY = 6
const _ETH_P_LAT = 0x6004
const _FFI_NATIVE_RAW_API = 0
const _PR_GET_NO_NEW_PRIVS = 39
const _FPE_FLTRES = 6
const _FS_RESERVED_FL = 0x80000000
const _FS_XFLAG_COWEXTSIZE = 0x00010000
const _EPOLLOUT = 4
const _ADJ_TIMECONST = 0x0020
const _VKILL = 3
const _RTMGRP_DECnet_ROUTE = 0x4000
const _SO_ACCEPTCONN = 30
const _NDA_PROBES = 4
const _IFLA_VF_TX_RATE = 3
const __POSIX_TIMER_MAX = 32
const ___NR_mknod = 133
const _REG_EFL = 17
const ___SSE2__ = 1
const _SYS_sched_get_priority_max = ___NR_sched_get_priority_max
const _SOCK_SEQPACKET = 5
const ___WALL = 0x40000000
const _RTM_DELMDB = 85
const _ILL_ILLOPC = 1
const _NLMSG_ERROR = 0x2
const _PR_GET_TID_ADDRESS = 40
const _SYS_vmsplice = ___NR_vmsplice
const _TCP_SYNCNT = 7
const _RT_SCOPE_SITE = 200
const _SYS_execveat = ___NR_execveat
const _IFA_F_TEMPORARY = _IFA_F_SECONDARY
const _IPPORT_TTYLINK = 87
const _TCA_PAD = 9
const ___NR_sched_rr_get_interval = 148
const _POLL_PRI = 5
const _IPV6_2292PKTINFO = 2
const _AI_ALL = 0x0010
const _ETH_P_FCOE = 0x8906
const _RTA_NEWDST = 19
const ___NR_adjtimex = 159
const _MOD_TAI = _ADJ_TAI
const ___FLT_DENORM_MIN__ = 1.1
const _ECHOPRT = 0002000
const _RTA_MULTIPATH = 9
const __CS_POSIX_V7_ILP32_OFF32_CFLAGS = 1132
const _F_SHLCK = 8
const _ETIMEDOUT = 110
const __SC_FILE_LOCKING = 147
const _MSG_PEEK = 2
const _SYS_msync = ___NR_msync
const _ETH_P_1588 = 0x88F7
const __SC_PASS_MAX = 88
const _IFLA_HSR_UNSPEC = 0
const _BRIDGE_MODE_UNSPEC = 0
const _FLUSHO = 0010000
const _SYS_lstat = ___NR_lstat
const _TIOCM_RTS = 0x004
const _ARPHRD_IRDA = 783
const _PTRACE_SYSEMU_SINGLESTEP = 32
const _EPIPE = 32
const ___FLT32X_HAS_DENORM__ = 1
const _STA_FLL = 0x0008
const _ICMP6_RR_FLAGS_TEST = 0x80
const _SYS_alarm = ___NR_alarm
const _IFF_TUN = 0x0001
const ___ENUM_IDTYPE_T = 1
const _PR_FP_MODE_FRE = (1 << 1)
const _MACSEC_VALIDATE_DISABLED = 0
const _IFLA_GENEVE_TTL = 3
const _HAVE_INOTIFY_ADD_WATCH = 1
const _PRIX16 = "X"
const ___FLT_EVAL_METHOD_TS_18661_3__ = 0
const _ND_NA_FLAG_ROUTER = 0x00000080
const _IPV6_RECVPATHMTU = 60
const _MADV_NORMAL = 0
const _PRId32 = "d"
const ___have_siginfo_t = 1
const _HAVE_EXPL = 1
const _IP_MULTICAST_IF = 32
const _EXPR_NEST_MAX = __POSIX2_EXPR_NEST_MAX
const _N_PPP = 3
const _IFLA_PORT_UNSPEC = 0
const _PF_INET6 = 10
const _SYS_chdir = ___NR_chdir
const _PTRACE_EVENT_VFORK = 2
const _SO_RCVTIMEO = 20
const ___NR_times = 100
const __POSIX_UIO_MAXIOV = 16
const _IFLA_BR_MCAST_QUERIER_INTVL = 32
const _IP_TOS = 1
const _TCPI_OPT_ECN_SEEN = 16
const _NLMSG_NOOP = 0x1
const _TUNSETSNDBUF_val = 1074025684
const _ARPD_UPDATE = 0x01
const __CS_LFS_LINTFLAGS = 1003
const __IOC_DIRMASK = ((1 << __IOC_DIRBITS)-1)
const _SYS_capset = ___NR_capset
const _ICMP6_ROUTER_RENUMBERING = 138
const _ILL_ILLADR = 3
const _RLIMIT_DATA = 2
const _PR_GET_FPEXC = 11
const _PR_CAPBSET_READ = 23
const _TCP_MD5SIG = 14
const _HAVE_GETXATTR = 1
const _RTM_DELRULE = 33
const _RTM_NEWSTATS = 92
const _TCSAFLUSH = 2
const __SC_SEMAPHORES = 21
const _IPV6_RTHDRDSTOPTS = 55
const ___NR_madvise = 28
const _IFLA_BR_GROUP_ADDR = 20
const _X86_CR4_TSD_BIT = 2
const _IFLA_BR_NF_CALL_IP6TABLES = 37
const _PTRACE_TRACEME = 0
const _X86_CR0_PE_BIT = 0
const _FFI_CLOSURES = 1
const _IFA_F_MANAGETEMPADDR = 0x100
const _SIOCADDRT = 0x890B
const _TCGETA = 0x5405
const _IFLA_MTU = 4
const _IFLA_BR_ROOT_PORT = 12
const __CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS = 1139
const ___SIZEOF_PTHREAD_COND_T = 48
const ___S_IFIFO = 0010000
const ___PRI64_PREFIX = "l"
const __CS_POSIX_V7_ILP32_OFF32_LINTFLAGS = 1135
const _IFLA_PROMISCUITY = 30
const _PR_SET_CHILD_SUBREAPER = 36
const _IPPORT_TELNET = 23
const _TCGETS = 0x5401
const _SOL_CAIF = 278
const _IFLA_BR_MCAST_MEMBERSHIP_INTVL = 31
const _RTF_REINSTATE = 0x0008
const _TCGETX = 0x5432
const _IFLA_PAD = 42
const _ETH_P_DNA_RC = 0x6002
const _IPPROTO_PIM = 103
const _PROT_READ = 0x1
const _RTF_CACHE = 0x01000000
const ___DEC128_MIN__ = 1E-6143
const _ICMP6_ECHO_REQUEST = 128
const _IFLA_VXLAN_LOCAL = 4
const __SYS_TYPES_H = 1
const _ETH_P_DNA_RT = 0x6003
const __SC_MEMLOCK = 17
const _SYS_finit_module = ___NR_finit_module
const _BPF_A = 0x10
const _BPF_B = 0x10
const _PF_INET = 2
const _ARPHRD_PIMREG = 779
const _SIG_ATOMIC_MIN = (-2147483647-1)
const ___GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = 1
const ___GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = 1
const _SIOCGIFFLAGS = 0x8913
const _REG_R8 = 0
const ___GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = 1
const _FS_APPEND_FL = 0x00000020
const _RTAX_CWND = 7
const __POSIX2_C_BIND = ___POSIX2_THIS_VERSION
const __XOPEN_REALTIME_THREADS = 1
const _BPF_W = 0x00
const _BPF_X = 0x08
const ___INT_MAX__ = 0x7fffffff
const ___GCC_HAVE_DWARF2_CFI_ASM = 1
const _TCPOLEN_TIMESTAMP = 10
const _ETH_P_CAIF = 0x00F7
const _NDA_PORT = 6
const _EPOLLRDHUP = 8192
const ___FLT128_MAX__ = 1.18973149535723176508575932662800702e+4932128
const _TIOCSRS485 = 0x542F
const ___IFLA_INET_MAX = 2
const _RTAX_INITRWND = 14
const _IPOPT_TS_TSANDADDR = 1
const ___LDBL_DECIMAL_DIG__ = 21
const _HAVE_ATANL = 1
const ___ATOMIC_CONSUME = 1
const ___NR_msgget = 68
const ___NR_getsockopt = 55
const _PTRDIFF_MIN = (-9223372036854775807-1)
const _X86_EFLAGS_FIXED_BIT = 1
const __SC_SPORADIC_SERVER = 160
const _SCNu8 = "hhu"
const __SC_THREAD_ROBUST_PRIO_INHERIT = 247
const _IP_RECVTOS = 13
const _PF_NETBEUI = 13
const _NDTPA_IFINDEX = 1
const _IP_MAX_MEMBERSHIPS = 20
const _AI_CANONNAME = 0x0002
const ___NR_mlockall = 151
const _SKF_AD_HATYPE = 28
const ___NR_pipe2 = 293
const _CLONE_CHILD_SETTID = 0x01000000
const __CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 1113
const _IPV6_NEXTHOP = 9
const _RTCF_DOREDIRECT = 0x01000000
const _NDA_IFINDEX = 8
const __SC_PII = 53
const _PF_PACKET = 17
const _SYS_futimesat = ___NR_futimesat
const _IPTOS_PREC_FLASH = _IPTOS_CLASS_CS3
const _ARPHRD_IPGRE = 778
const __SC_SHELL = 157
const _HAVE_LOGL = 1
const _PORT_VDP_RESPONSE_INVALID_FORMAT = 1
const ___USE_POSIX2 = 1
const _ENOMEM = 12
const _IN_CLASSA_NET = 0xff000000
const _ESRMNT = 69
const _IPV6_LEAVE_ANYCAST = 28
const _ENOTEMPTY = 39
const _PTRACE_GETSIGINFO = 16898
const __IOC_NRBITS = 8
const _PIPE_BUF = 4096
const _AF_ISDN = _PF_ISDN
const _ULONG_LONG_MAX = (_LONG_LONG_MAX * 2 + 1)
const _LINK_XSTATS_TYPE_UNSPEC = 0
const _NDTA_NAME = 1
const _ARPHRD_NONE = 0xFFFE
const _SYS_getsockname = ___NR_getsockname
const _ECHOCTL = 0001000
const _RTNLGRP_IPV4_RULE = 8
const _IFLA_BRPORT_STATE = 1
const _IFLA_BR_UNSPEC = 0
const _O_PATH = ___O_PATH
const _TIME_BAD = _TIME_ERROR
const _SYS_sched_getparam = ___NR_sched_getparam
const _PR_SET_NO_NEW_PRIVS = 38
const _RTF_FLOW = 0x02000000
const _SYS_set_mempolicy = ___NR_set_mempolicy
const _WCONTINUED = 8
const _IFF_NOFILTER = 0x1000
const ___time_t_defined = 1
const _B600 = 0000010
const _ARPHRD_BIF = 775
const _O_DSYNC = ___O_DSYNC
const ___NR_msgrcv = 70
const _RTPROT_RA = 9
const _IFLA_VRF_UNSPEC = 0
const _NLM_F_DUMP_FILTERED = 32
const _IFLA_VLAN_QOS_UNSPEC = 0
const __SC_DEVICE_IO = 140
const _IFLA_IPOIB_UMCAST = 3
const _SCHED_RR = 2
const _PRIo8 = "o"
const ___NR_setsockopt = 54
const __LFS_ASYNCHRONOUS_IO = 1
const _IFLA_PORT_REQUEST = 6
const _IFLA_BOND_AD_INFO_AGGREGATOR = 1
const _PACKET_LOOPBACK = 5
const _SYS_fdatasync = ___NR_fdatasync
const _SIOCGIFMAP = 0x8970
const ___GCC_ASM_FLAG_OUTPUTS__ = 1
const ___IFLA_BOND_SLAVE_MAX = 9
const _SIOCSARP = 0x8955
const _SYS_prlimit64 = ___NR_prlimit64
const ___DEC32_MIN__ = 1E-95
const _NLM_F_REPLACE = 0x100
const _TIOCOUTQ = 0x5411
const _IFA_CACHEINFO = 6
const _SYNC_FILE_RANGE_WAIT_BEFORE = 1
const _PR_FP_EXC_UND = 0x040000
const _PACKAGE_BUGREPORT = ""
const _IPV6_2292DSTOPTS = 4
const _IFLA_EXT_MASK = 29
const ___ATOMIC_HLE_ACQUIRE = 65536
const _SYS_timerfd_settime = ___NR_timerfd_settime
const _POSIX_FADV_RANDOM = 1
const _PRIiLEAST16 = "i"
const _IFLA_GENEVE_COLLECT_METADATA = 6
const ___USE_ISOC95 = 1
const __HAVE_STRUCT_TERMIOS_C_OSPEED = 1
const _O_NOFOLLOW = ___O_NOFOLLOW
const _NDA_LINK_NETNSID = 10
const ___USE_ISOC99 = 1
const _RTF_MSS = _RTF_MTU
const ___NR_getuid = 102
const _F_OFD_SETLKW = 38
const _RTA_ENCAP = 22
const _EEXIST = 17
const _PACKET_VERSION = 10
const _TCP_CLOSE = 7
const _SO_ATTACH_BPF = 50
const _PTRACE_EVENT_SECCOMP = 7
const _ARPHRD_CHAOS = 5
const ___FLT32_MANT_DIG__ = 24
const ___IFLA_VF_INFO_MAX = 2
const _ETH_P_BATMAN = 0x4305
const __STAT_VER = __STAT_VER_LINUX
const _POLL_MSG = 3
const _SYS_swapon = ___NR_swapon
const ___LDBL_HAS_QUIET_NAN__ = 1
const _PF_MPLS = 28
const _ICMP6_FILTER_PASSONLY = 4
const _IP_TTL = 2
const _SYS_rt_sigqueueinfo = ___NR_rt_sigqueueinfo
const __SC_XOPEN_ENH_I18N = 93
const ___NR_timer_settime = 223
const _PTRACE_O_SUSPEND_SECCOMP = 2097152
const _SYS_getpmsg = ___NR_getpmsg
const __SYS_RESOURCE_H = 1
const _DEFFILEMODE = (_S_IRUSR|_S_IWUSR|_S_IRGRP|_S_IWGRP|_S_IROTH|_S_IWOTH)
const _RTA_DST = 1
const ___STDC_IEC_559__ = 1
const _SYS_arch_prctl = ___NR_arch_prctl
const _AF_NETROM = _PF_NETROM
const _IPTOS_THROUGHPUT = 0x08
const _NDTA_THRESH2 = 3
const _CLOCK_BOOTTIME_ALARM = 9
const __SC_SPAWN = 159
const _S_IWRITE = _S_IWUSR
const _ICMP6_PARAMPROB_OPTION = 2
const __CS_POSIX_V6_LP64_OFF64_CFLAGS = 1124
const _ETH_P_TR_802_2 = 0x0011
const _TIOCM_DTR = 0x002
const __SC_USER_GROUPS_R = 167
const _ETH_P_ALL = 0x0003
const _SYS_fchown = ___NR_fchown
const _IPPORT_SYSTAT = 11
const ___NR_rt_sigaction = 13
const _SIGSTKFLT = 16
const _RTF_MODIFIED = 0x0020
const _PRIO_PROCESS = 0
const ___NR_semget = 64
const _IFA_F_STABLE_PRIVACY = 0x800
const _RTNH_COMPARE_MASK = (_RTNH_F_DEAD | _RTNH_F_LINKDOWN | _RTNH_F_OFFLOAD)
const _L_INCR = 1
const _PACKET_VNET_HDR = 15
const _EAFNOSUPPORT = 97
const _IFLA_BOND_AD_LACP_RATE = 21
const _SYS_select = ___NR_select
const ___SI_MAX_SIZE = 128
const _IFLA_COST = 8
const _NLMSG_DONE = 0x3
const ___NR_statfs = 137
const ___F_GETOWN_EX = 16
const __CS_POSIX_V6_ILP32_OFFBIG_LIBS = 1122
const ___NR_getdents64 = 217
const _HAVE_INOTIFY_INIT1 = 1
const _AI_V4MAPPED = 0x0008
const _SCNuFAST8 = "hhu"
const _ENETUNREACH = 101
const _ACCESSPERMS = (_S_IRWXU|_S_IRWXG|_S_IRWXO)
const _SIGEV_THREAD_ID = 4
const _FFI_TYPE_INT = 1
const _ICMP6_RR_FLAGS_FORCEAPPLY = 0x20
const _SS_DISABLE = 2
const _O_NDELAY = _O_NONBLOCK
const _ETH_P_CAN = 0x000C
const ___SIZEOF_PTHREAD_BARRIERATTR_T = 4
const ___FLT_EVAL_METHOD__ = 0
const ___NR_semop = 65
const _P_ALL = 0
const _INTPTR_MAX = (9223372036854775807)
const ___NR_pwritev2 = 328
const _SYS_accept4 = ___NR_accept4
const ___RLIMIT_NLIMITS = 16
const _FS_ENCRYPT_FL = 0x00000800
const _IFLA_BOND_SLAVE_QUEUE_ID = 5
const _RTPROT_XORP = 14
const _PACKET_OUTGOING = 4
const _SYS_process_vm_writev = ___NR_process_vm_writev
const _TCA_ACT_TAB = 1
const _ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME = 0x40
const _NDTPA_PROXY_DELAY = 13
const ___RLIMIT_NPROC = 6
const __IOC_NONE = 0
const _IFLA_BOND_SLAVE_MII_STATUS = 2
const _SO_SECURITY_ENCRYPTION_TRANSPORT = 23
const _PROT_GROWSDOWN = 0x01000000
const _MAP_GROWSDOWN = 0x00100
const _EBADMSG = 74
const _MAP_POPULATE = 0x08000
const _TIME_DEL = 2
const ___F_SETOWN = 8
const _UINT16_MAX = (65535)
const _NL_LANGMAX = __POSIX2_LINE_MAX
const _MS_LAZYTIME = 33554432
const _SYS_mkdir = ___NR_mkdir
const _IFLA_MACSEC_WINDOW = 5
const ___NR_io_getevents = 208
const _FFI_DEFAULT_ABI = 2
const _SYS_rename = ___NR_rename
const _ETH_P_DSA = 0x001B
const _PTRACE_SET_THREAD_AREA = 26
const _IP_RECVTTL = 12
const _PTRACE_PEEKTEXT = 1
const _MAX_HANDLE_SZ = 128
const _IFF_DEBUG = 4
const _AF_ECONET = _PF_ECONET
const _TCA_RATE = 5
const __XOPEN_ENH_I18N = 1
const __SC_2_FORT_RUN = 50
const ___NDTPA_MAX = 19
const _IFLA_NUM_VF = 21
const _RTA_EXPIRES = 23
const _SYS_ioprio_get = ___NR_ioprio_get
const _IPOPT_NOP = 1
const _IFNAMSIZ = _IF_NAMESIZE
const _SYS_vhangup = ___NR_vhangup
const _FS_HUGE_FILE_FL = 0x00040000
const _SIGTRAP = 5
const ___FLT128_DIG__ = 33
const _SYS_timerfd_gettime = ___NR_timerfd_gettime
const _BPF_LEN = 0x80
const _BIG_ENDIAN = ___BIG_ENDIAN
const _RTMGRP_IPV4_ROUTE = 0x40
const _B1000000 = 0010010
const _SYS_getcpu = ___NR_getcpu
const ___NR_mq_timedreceive = 243
const _USING_SPLIT_STACK = 1
const _FFI_TYPE_SINT32 = 10
const ___RLIMIT_OFILE = 7
const _IFLA_BR_MCAST_QUERY_RESPONSE_INTVL = 34
const _SIOCGIFMEM = 0x891f
const _HAVE_SYS_SELECT_H = 1
const _O_WRONLY = 01
const ___NR_preadv = 295
const _SYS_acct = ___NR_acct
const _DN_RENAME = 0x00000010
const _SYS_setreuid = ___NR_setreuid
const _EALREADY = 114
const _NDTPA_QUEUE_LEN = 8
const _INR_OPEN_CUR = 1024
const _POLL_IN = 1
const _ILL_PRVOPC = 5
const _TUNGETFEATURES_val = 2147767503
const _RTNLGRP_IPV6_ROUTE = 11
const ___NR_timer_gettime = 224
const _ETH_P_AOE = 0x88A2
const ___NR_getgroups = 115
const _FIOQSIZE = 0x5460
const _IPOPT_CONTROL = 0x00
const _IFLA_VXLAN_GPE = 27
const _MS_NOATIME = 1024
const _CX86_DIR0 = 0xfe
const ___NR_perf_event_open = 298
const ___NR_utimensat = 280
const ___NR_get_mempolicy = 239
const _MCL_CURRENT = 1
const _IP_XFRM_POLICY = 17
const ___SIZEOF_SHORT__ = 2
const _SYS_fstat = ___NR_fstat
const _IFLA_VFINFO_LIST = 22
const __SC_CPUTIME = 138
const _TUN_F_TSO_ECN = 0x08
const ___WORDSIZE_TIME64_COMPAT32 = 1
const _AT_REMOVEDIR = 0x200
const _TIOCSWINSZ = 0x5414
const ___FLT32_HAS_DENORM__ = 1
const _O_NONBLOCK = 04000
const _PACKET_TX_RING = 13
const _TCP_MSS_DEFAULT = 536
const _BC_DIM_MAX = __POSIX2_BC_DIM_MAX
const _IPOPT_LSRR = 131
const _PR_GET_PDEATHSIG = 2
const _SYS_symlink = ___NR_symlink
const ___DEC64_MANT_DIG__ = 16
const _PORT_SELF_VF = -1
const __SC_SYMLOOP_MAX = 173
const _MACVLAN_MACADDR_ADD = 0
const __GRP_H = 1
const ___NR_delete_module = 176
const _SYS_sendto = ___NR_sendto
const _IFLA_VLAN_QOS_MAPPING = 1
const _SIGTERM = 15
const __CS_XBS5_LPBIG_OFFBIG_LIBS = 1114
const __SYS_UCONTEXT_H = 1
const ___NR_readlinkat = 267
const _IFLA_GTP_UNSPEC = 0
const _VLNEXT = 15
const _POSIX_MADV_WILLNEED = 3
const _SYS_security = ___NR_security
const _X86_CR4_SMAP_BIT = 21
const _TUN_F_TSO6 = 0x04
const _AF_CAN = _PF_CAN
const ___NR_rt_sigprocmask = 14
const ___NR_ppoll = 271
const ___NR_flock = 73
const _CLONE_PARENT = 0x00008000
const _RTA_ALIGNTO = 4
const _POSIX_MADV_SEQUENTIAL = 2
const _SYS_sethostname = ___NR_sethostname
const _SYS_vserver = ___NR_vserver
const _X86_EFLAGS_NT_BIT = 14
const _MNT_EXPIRE = 4
const _CHAR_MAX = _SCHAR_MAX
const _EAI_NONAME = -2
const ___NR_restart_syscall = 219
const __SC_THREAD_KEYS_MAX = 74
const _IFLA_BR_MCAST_STARTUP_QUERY_INTVL = 35
const _ICMP6_INFOMSG_MASK = 0x80
const _IPOIB_MODE_CONNECTED = 1
const _CLOCAL = 0004000
const _HAVE_SYS_USER_H = 1
const _X86_EFLAGS_IOPL_BIT = 12
const __CS_LFS_CFLAGS = 1000
const _IFLA_BRPORT_ROOT_ID = 13
const _TCSETA = 0x5406
const _SYS_readahead = ___NR_readahead
const _IFLA_STATS64 = 23
const __SC_UINT_MAX = 116
const _PTRACE_PEEKSIGINFO = 16905
const _RTPROT_NTK = 15
const _EAI_FAMILY = -6
const ___USE_LARGEFILE = 1
const ___SIZE_MAX__ = 0xffffffffffffffff
const _SKF_AD_ALU_XOR_X = 40
const __INTTYPES_H = 1
const _RTNH_F_PERVASIVE = 2
const _SO_TIMESTAMP = 29
const _RTMSG_OVERRUN = _NLMSG_OVERRUN
const _BUS_MCEERR_AO = 5
const ___IFLA_MACVLAN_MAX = 7
const _IPTOS_ECN_MASK = 0x03
const _BUS_MCEERR_AR = 4
const _B500000 = 0010005
const ___STDC_HOSTED__ = 1
const ___INT_LEAST32_WIDTH__ = 32
const _SIOCSIFLINK = 0x8911
const _RENAME_EXCHANGE = (1 << 1)
const __SC_XBS5_LP64_OFF64 = 127
const __LARGEFILE64_SOURCE = 1
const _SEEK_HOLE = 4
const __SC_TRACE_EVENT_FILTER = 182
const _STDERR_FILENO = 2
const _TCP_SEND_QUEUE = 2
const ___O_NOATIME = 01000000
const _PF_SNA = 22
const _SO_PASSSEC = 34
const _IGNPAR = 0000004
const _SYS_time = ___NR_time
const _TCP_NOTSENT_LOWAT = 25
const _IFLA_VXLAN_GROUP = 2
const _NOFLSH = 0000200
const _SOL_DCCP = 269
const _SYS_syslog = ___NR_syslog
const _SYS_io_getevents = ___NR_io_getevents
const _RTM_NEWMDB = 84
const _IFLA_INFO_SLAVE_KIND = 4
const _IFLA_VXLAN_L2MISS = 13
const _HAVE_LINUX_IF_ADDR_H = 1
const _O_CREAT = 0100
const _ENODEV = 19
const ___FLT32_HAS_QUIET_NAN__ = 1
const _TIOCGPGRP_val = 21519
const _SCNuLEAST16 = "hu"
const ___NR_poll = 7
const __SC_THREAD_PRIO_INHERIT = 80
const _GAI_NOWAIT = 1
const _IFA_F_NOPREFIXROUTE = 0x200
const _SYS_write = ___NR_write
const _SYS_fanotify_init = ___NR_fanotify_init
const _ETH_P_ARP = 0x0806
const ___NR_iopl = 172
const _IFLA_VXLAN_AGEING = 8
const _ECHOE = 0000020
const _S_IWUSR = ___S_IWRITE
const _SO_PEERCRED = 17
const _IFLA_BR_HELLO_TIME = 2
const _FALLOC_FL_COLLAPSE_RANGE = 8
const __SC_2_PBS_CHECKPOINT = 175
const _ECHOK = 0000040
const _NDTA_UNSPEC = 0
const _IPV6_JOIN_ANYCAST = 27
const _EAI_INPROGRESS = -100
const _RTNH_ALIGNTO = 4
const _IPOPT_SID = _IPOPT_SATID
const ___FLT32_MAX_EXP__ = 128
const _TCSBRKP = 0x5425
const _FFI_FIRST_ABI = 1
const _NETLINK_ECRYPTFS = 19
const _CX86_GCR = 0xb8
const _IP_ROUTER_ALERT = 5
const ___NR_splice = 275
const _TIOCSCTTY_val = 21518
const ___NR_keyctl = 250
const _MS_NOSEC = (1<<28)
const __SC_NETWORKING = 152
const ___ATOMIC_RELEASE = 3
const _IFLA_VF_UNSPEC = 0
const ___NR_fchmodat = 268
const _RTF_HOST = 0x0004
const _IFF_PERSIST = 0x0800
const _FS_NOCOMP_FL = 0x00000400
const _SO_SECURITY_AUTHENTICATION = 22
const _IFLA_VF_STATS_BROADCAST = 4
const _BPF_JEQ = 0x10
const _FFI_TYPE_UINT32 = 9
const _SYS_inotify_add_watch = ___NR_inotify_add_watch
const _POSIX_MADV_RANDOM = 1
const _RTF_MULTICAST = 0x20000000
const _NTP_API = 4
const _IPV6_MULTICAST_IF = 17
const _SO_MAX_PACING_RATE = 47
const _HAVE_LOG10L = 1
const _IFLA_VF_RSS_QUERY_EN = 7
const ___FLT64_MAX_10_EXP__ = 308
const _IFLA_BOND_AD_INFO_PARTNER_KEY = 4
const _SYS_dup = ___NR_dup
const _ARPHRD_IEEE802154_PHY = 805
const ___NR_io_setup = 206
const _IPOPT_SSRR = 137
const __DIRENT_MATCHES_DIRENT64 = 1
const _PACKET_HOST = 0
const _ARPHRD_DLCI = 15
const _IFLA_INET6_CONF = 2
const _IFLA_VF_LINK_STATE_DISABLE = 2
const ___NR_pivot_root = 155
const ___NR_mbind = 237
const __SYS_PRCTL_H = 1
const ___RLIMIT_RTPRIO = 14
const _CLOCK_MONOTONIC = 1
const ___UINT_FAST32_MAX__ = 0xffffffffffffffff
const _NETLINK_CRYPTO = 21
const _ETH_P_FIP = 0x8914
const _OCRNL = 0000010
const ___NR_setgid = 106
const _IFF_VNET_HDR = 0x4000
const _SCNuLEAST32 = "u"
const _PRIxLEAST16 = "x"
const ___NR_ioprio_set = 251
const __SEMAPHORE_H = 1
const _RTF_STATIC = 0x0400
const _PR_ENDIAN_PPC_LITTLE = 2
const ___FD_SETSIZE = 1024
const _SYS_seccomp = ___NR_seccomp
const ___LDBL_MIN__ = 1.1
const ___DEC32_MAX__ = 9.999999E96
const ___INTPTR_MAX__ = 0x7fffffffffffffff
const ___FILE_defined = 1
const _MOD_NANO = _ADJ_NANO
const ___FLT32_EPSILON__ = 1.19209289550781250000000000000000000e-732
const _X86_EFLAGS_AC_BIT = 18
const _PROT_EXEC = 0x4
const _IFLA_STATS_UNSPEC = 0
const _HAVE_USTAT_H = 1
const _SCHED_OTHER = 0
const _ALLPERMS = (_S_ISUID|_S_ISGID|_S_ISVTX|_S_IRWXU|_S_IRWXG|_S_IRWXO)
const ___NR_getdents = 78
const _NDTPA_BASE_REACHABLE_TIME = 4
const _ETH_P_WCCP = 0x883E
const __CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS = 1123
const _ARPHRD_RAWHDLC = 518
const _CLD_STOPPED = 5
const ___FLT32_DECIMAL_DIG__ = 9
const ___S_ISVTX = 01000
const _AF_IUCV = _PF_IUCV
const _RTNLGRP_NOP2 = 14
const ___code_model_small__ = 1
const _FFI_TYPE_SINT64 = 12
const __SC_THREAD_PRIO_PROTECT = 81
const ___OPTIMIZE__ = 1
const _EDOM = 33
const _SYS_sched_getscheduler = ___NR_sched_getscheduler
const _EXTA = _B19200
const _EXTB = _B38400
const _SYS_perf_event_open = ___NR_perf_event_open
const _SYS_setns = ___NR_setns
const __IOC_SIZEBITS = 14
const __XOPEN_LEGACY = 1
const __POSIX2_LOCALEDEF = ___POSIX2_THIS_VERSION
const _TTY_NAME_MAX = 32
const __POSIX_RE_DUP_MAX = 255
const _IPV6_RECVHOPOPTS = 53
const _NETLINK_BROADCAST_ERROR = 4
const _PR_SET_MM = 35
const __SC_UCHAR_MAX = 115
const _ETH_P_MPLS_UC = 0x8847
const _NLA_TYPE_MASK = ^(_NLA_F_NESTED | _NLA_F_NET_BYTEORDER)
const _BPF_JGT = 0x20
const ___INT64_MAX__ = 0x7fffffffffffffff
const _MOD_FREQUENCY = _ADJ_FREQUENCY
const ___NR_shmdt = 67
const _SYS_getcwd = ___NR_getcwd
const ___SIZEOF_LONG__ = 8
const _BPF_NET_OFF = _SKF_NET_OFF
const _IP_BLOCK_SOURCE = 38
const _ECHRNG = 44
const _EAI_SYSTEM = -11
const ___NR_request_key = 249
const __SC_LEVEL3_CACHE_ASSOC = 195
const _PRIX8 = "X"
const _HAVE_TEE = 1
const _HAVE_CONFIG_H = 1
const __POSIX_CLOCK_SELECTION = 200809
const _TCOOFF = 0
const _TCP_MSS_DESIRED = 1220
const _AI_PASSIVE = 0x0001
const _S_IFLNK = ___S_IFLNK
const _DT_SOCK = 12
const __SC_2_UPE = 97
const _LINUX_REBOOT_CMD_KEXEC = 0x45584543
const __SC_USHRT_MAX = 118
const _SO_BSDCOMPAT = 14
const __K_SS_MAXSIZE = 128
const _RTCF_VALVE = 0x00200000
const _TIOCGDEV_val = 2147767346
const _HAVE_MEMORY_H = 1
const _HAVE_NETINET_IF_ETHER_H = 1
const _AF_MAX = _PF_MAX
const _HAVE_EXPM1L = 1
const _____gwchar_t_defined = 1
const _NTF_SELF = 0x02
const _IPPROTO_ICMPV6 = 58
const _SYS_reboot = ___NR_reboot
const _REG_TRAPNO = 20
const _ADJ_OFFSET_SS_READ = 0xa001
const _ICMP6_PARAM_PROB = 4
const _ETH_P_IEEEPUPAT = 0x0a01
const _NLA_F_NET_BYTEORDER = (1 << 14)
const _IFLA_VF_STATS_MULTICAST = 5
const _RTM_DELTCLASS = 41
const __POSIX_SPAWN = 200809
const _RTAX_RTO_MIN = 13
const __SYS_UTSNAME_H = 1
const _NETLINK_PKTINFO = 3
const _FPE_FLTINV = 7
const ___NR_removexattr = 197
const _F_NOTIFY = 1026
const _MS_INVALIDATE = 2
const _SIOCPROTOPRIVATE = 0x89E0
const ___NR_vhangup = 153
const _CLONE_UNTRACED = 0x00800000
const _IFA_F_PERMANENT = 0x80
const _IP_MAXPACKET = 65535
const _IPOPT_EOL = 0
const _EDEADLOCK = _EDEADLK
const _SYS_getpid = ___NR_getpid
const _ETHERTYPE_LOOPBACK = 0x9000
const __CS_LFS64_CFLAGS = 1004
const _SIGFPE = 8
const _ELIBSCN = 81
const ___DEC64_EPSILON__ = 1E-15
const _INT16_MAX = (32767)
const _SIOCSIFNAME = 0x8923
const ___FLT32_DENORM_MIN__ = 1.40129846432481707092372958328991613e-4532
const _SIGVTALRM = 26
const __SC_NZERO = 109
const ___NR_pause = 34
const _ND_OPT_PI_FLAG_AUTO = 0x40
const _EPOLLRDNORM = 64
const _HAVE_LISTXATTR = 1
const _ETH_P_X25 = 0x0805
const __CS_XBS5_ILP32_OFFBIG_CFLAGS = 1104
const _IFLA_BOND_UPDELAY = 4
const _LINUX_REBOOT_MAGIC2B = 369367448
const _NLM_F_EXCL = 0x200
const ___INT_LEAST16_WIDTH__ = 16
const __SC_T_IOV_MAX = 66
const ___DEC128_EPSILON__ = 1E-33
const _RTM_NEWTCLASS = 40
const ___F_SETSIG = 10
const _PR_CAP_AMBIENT_RAISE = 2
const _N_X25 = 6
const __BITS_SIGTHREAD_H = 1
const _SIOCGIFSLAVE = 0x8929
const ___FLT128_MAX_10_EXP__ = 4932
const _O_RDWR = 02
const __XOPEN_LIM_H = 1
const _S_IRWXG = (_S_IRWXU >> 3)
const _HAVE_FCHOWNAT = 1
const _SYS_clock_nanosleep = ___NR_clock_nanosleep
const _MS_REMOUNT = 32
const _ETH_P_AF_IUCV = 0xFBFB
const _SOL_DECNET = 261
const _SO_DETACH_FILTER = 27
const _RLIM_SAVED_CUR = _RLIM_INFINITY
const _IN_CLASSB_MAX = 65536
const _NI_NOFQDN = 4
const ___GXX_ABI_VERSION = 1012
const _ENOMSG = 42
const _MAXNAMLEN = _NAME_MAX
const ___DEC32_MAX_EXP__ = 97
const _HAVE_SYSCALL_H = 1
const _HAVE_SYS_PTRACE_H = 1
const _SYS_geteuid = ___NR_geteuid
const __SC_PIPE = 145
const _S_IRWXU = (___S_IREAD|___S_IWRITE|___S_IEXEC)
const ___LDBL_HAS_INFINITY__ = 1
const _SYS_mq_unlink = ___NR_mq_unlink
const ___USE_FILE_OFFSET64 = 1
const ___SIZEOF_PTHREAD_ATTR_T = 56
const __SC_AIO_MAX = 24
const ___NR_symlink = 88
const _ERANGE = 34
const _IP_HDRINCL = 3
const _WCHAR_MAX = ___WCHAR_MAX
const _TCP_CA_Recovery = 3
const _TIOCSCTTY = 0x540E
const _RTA_ENCAP_TYPE = 21
const _EPOLLERR = 8
const _SYS_chown = ___NR_chown
const _TAB0 = 0000000
const _TAB1 = 0004000
const _TAB2 = 0010000
const _TAB3 = 0014000
const _TH_RST = 0x04
const _PTRACE_O_TRACEFORK = 2
const ___NR_sched_get_priority_max = 146
const ___NR_sched_getparam = 143
const _RTNETLINK_HAVE_PEERINFO = 1
const __LFS_LARGEFILE = 1
const ___FLT64_HAS_QUIET_NAN__ = 1
const ___NR_setitimer = 38
const _MOD_MICRO = _ADJ_MICRO
const ___NR_ustat = 136
const _IFF_ATTACH_QUEUE = 0x0200
const _IN_CLASSA_HOST = (0xffffffff & ^_IN_CLASSA_NET)
const _RTF_NAT = 0x08000000
const _BPF_ABS = 0x20
const _FS_TOPDIR_FL = 0x00020000
const _RTMGRP_LINK = 1
const ___NR_vserver = 236
const _TIOCSBRK = 0x5427
const ___GLIBC__ = 2
const _HAVE_SYNC_ADD_AND_FETCH_8 = 1
const _ND_RA_FLAG_MANAGED = 0x80
const _INT_LEAST16_MAX = (32767)
const ___NR_sched_setscheduler = 144
const __UCONTEXT_H = 1
const _SYS_rt_tgsigqueueinfo = ___NR_rt_tgsigqueueinfo
const _PR_FP_EXC_PRECISE = 3
const _SYS_sync = ___NR_sync
const _HAVE_STDINT_H = 1
const _ICANON = 0000002
const _PR_SET_THP_DISABLE = 41
const ___NR_epoll_ctl = 233
const _NETLINK_UNCONNECTED = 0
const _IUTF8 = 0040000
const _IFLA_BOND_AD_INFO_UNSPEC = 0
const _IPV6_PATHMTU = 61
const __SC_ATEXIT_MAX = 87
const _SOCK_RDM = 4
const _ETH_P_IP = 0x0800
const ___NR_sync = 162
const __SC_MQ_PRIO_MAX = 28
const __NETINET_TCP_H = 1
const _LINUX_REBOOT_CMD_RESTART2 = 0xA1B2C3D4
const _RTCF_NAT = 0x00800000
const _ND_NA_FLAG_OVERRIDE = 0x00000020
const _HAVE_STDLIB_H = 1
const _SYS_epoll_wait = ___NR_epoll_wait
const _IFF_DYNAMIC = 32768
const _TCP_NO_QUEUE = 0
const __LIBC_LIMITS_H_ = 1
const _IN_DONT_FOLLOW = 0x02000000
const ___SSE__ = 1
const __POSIX_STREAM_MAX = 8
const _SYS_mq_getsetattr = ___NR_mq_getsetattr
const _MAP_32BIT = 0x40
const _INET_ADDRSTRLEN = 16
const ___IFLA_VF_MAX = 13
const _PR_FP_EXC_ASYNC = 2
const _TIOCSERCONFIG = 0x5453
const _MCAST_MSFILTER = 48
const _EDEADLK = 35
const _IPPORT_TFTP = 69
const _SIOCGSTAMP = 0x8906
const _FS_KEY_DESCRIPTOR_SIZE = 8
const __CS_POSIX_V7_LPBIG_OFFBIG_LIBS = 1146
const _IFLA_GENEVE_PORT = 5
const _SYS_capget = ___NR_capget
const ___NR_mlock = 149
const ___GCC_ATOMIC_LONG_LOCK_FREE = 2
const _ETHER_TYPE_LEN = 2
const _HAVE_TANL = 1
const __POSIX_SAVED_IDS = 1
const _BPF_STX = 0x03
const ___DBL_MANT_DIG__ = 53
const _TIOCSPGRP_val = 21520
const _SIOCGIFNAME = 0x8910
const _RTEXT_FILTER_SKIP_STATS = (1 << 3)
const _PRIdLEAST8 = "d"
const _PTRACE_EVENT_VFORK_DONE = 5
const _BPF_MEM = 0x60
const _ND_NEIGHBOR_ADVERT = 136
const __POSIX_CHILD_MAX = 25
const _REG_RAX = 13
const ___INT_LEAST64_MAX__ = 0x7fffffffffffffff
const _BPF_ADD = 0x00
const _ETHERMIN = (_ETHER_MIN_LEN - _ETHER_HDR_LEN - _ETHER_CRC_LEN)
const _IPPORT_RJE = 77
const _FS_IMAGIC_FL = 0x00002000
const _IPV6_PMTUDISC_INTERFACE = 4
const ___IFLA_VLAN_QOS_MAX = 2
const ___GCC_ATOMIC_BOOL_LOCK_FREE = 2
const _SYS_NMLN = __UTSNAME_LENGTH
const _ISIG = 0000001
const _SYS_bind = ___NR_bind
const _IPV6_MTU_DISCOVER = 23
const _IFLA_WIRELESS = 11
const __POSIX_MAPPED_FILES = 200809
const _RTM_NEWNDUSEROPT = 68
const _PTRACE_GETSIGMASK = 16906
const ___NR_sigaltstack = 131
const _NETLINK_CAP_ACK = 10
const ___NR_creat = 85
const _EAI_AGAIN = -3
const __POSIX_JOB_CONTROL = 1
const _SCNi16 = "hi"
const _BPF_SUB = 0x10
const _PRIx16 = "x"
const __HAVE_STRUCT_TERMIOS_C_ISPEED = 1
const _NUD_FAILED = 0x20
const _EMSGSIZE = 90
const _FAPPEND = _O_APPEND
const ___USE_POSIX = 1
const _TIOCINQ = _FIONREAD
const _SI_USER = 0
const ___NR_epoll_wait_old = 215
const _X86_EFLAGS_OF_BIT = 11
const ___FLT128_DECIMAL_DIG__ = 36
const __SC_GETGR_R_SIZE_MAX = 69
const _SYS_utime = ___NR_utime
const _PR_FPEMU_SIGFPE = 2
const _ARPHRD_FDDI = 774
const _SEGV_MAPERR = 1
const _RTA_MP_ALGO = 14
const _BPF_JMP = 0x05
const _SYS_rt_sigaction = ___NR_rt_sigaction
const _HAVE_NET_IF_H = 1
const _RTNLGRP_DECnet_IFADDR = 13
const _IFF_LOOPBACK = 8
const _X86_CR4_PKE_BIT = 22
const _DT_BLK = 6
const ___NR_capset = 126
const __SC_PII_OSI = 57
const _IFLA_BRPORT_FORWARD_DELAY_TIMER = 22
const _UMOUNT_NOFOLLOW = 8
const _PF_ECONET = 19
const _MACSEC_VALIDATE_MAX = 2
const _RT_TABLE_MAX = 4294967295
const _B460800 = 0010004
const __CS_XBS5_LP64_OFF64_LDFLAGS = 1109
const _PRIiLEAST32 = "i"
const _HAVE_SYS_FILE_H = 1
const _TCPOPT_TSTAMP_HDR = (_TCPOPT_NOP<<24|_TCPOPT_NOP<<16|_TCPOPT_TIMESTAMP<<8|_TCPOLEN_TIMESTAMP)
const _PF_FILE = _PF_LOCAL
const _SYS_lsetxattr = ___NR_lsetxattr
const _ECHILD = 10
const ___FINITE_MATH_ONLY__ = 0
const __POSIX_THREAD_ROBUST_PRIO_PROTECT = -1
const ___NR_settimeofday = 164
const _PACKET_MR_MULTICAST = 0
const _SKF_AD_CPU = 36
const ___NR_utime = 132
const ___IFLA_XDP_MAX = 3
const _MACVLAN_MODE_PASSTHRU = 8
const _CRDLY = 0003000
const _ADJ_OFFSET_SINGLESHOT = 0x8001
const _PORT_REQUEST_ASSOCIATE = 2
const ___RLIM_NLIMITS = 16
const __POSIX2_BC_DIM_MAX = 2048
const _ETH_P_802_2 = 0x0004
const _ETH_P_802_3 = 0x0001
const _SO_ERROR = 4
const _TIOCMBIS = 0x5416
const _MS_NOREMOTELOCK = (1<<27)
const ___USE_XOPEN2K = 1
const _IPV6_HOPLIMIT = 52
const ___NR_writev = 20
const _SYS_setsockopt = ___NR_setsockopt
const _SYS_getresgid = ___NR_getresgid
const _ETH_P_PAE = 0x888E
const _PACKET_STATISTICS = 6
const ___UINT8_MAX__ = 0xff
const _IP_MINTTL = 21
const _LINE_MAX = __POSIX2_LINE_MAX
const __PC_NO_TRUNC = 7
const ___DBL_MAX_10_EXP__ = 308
const _MOD_STATUS = _ADJ_STATUS
const _INT_FAST16_MAX = (9223372036854775807)
const _NETLINK_NETFILTER = 12
const __SC_C_LANG_SUPPORT_R = 136
const _ETH_P_PAUSE = 0x8808
const _SYS_unlinkat = ___NR_unlinkat
const _IFLA_GTP_PDP_HASHSIZE = 3
const _IN_CLASSB_NET = 0xffff0000
const _SIGPWR = 30
const _IFLA_BOND_ACTIVE_SLAVE = 2
const _PR_SET_MM_ENV_START = 10
const _SPLICE_F_MORE = 4
const __STDINT_H = 1
const _RTM_GETSTATS = 94
const _TIOCMGET = 0x5415
const _NDTPA_ANYCAST_DELAY = 12
const _PRIx32 = "x"
const _EXTPROC = 0200000
const ___WCHAR_MAX__ = 0x7fffffff
const _IOC_INOUT = ((__IOC_WRITE|__IOC_READ) << __IOC_DIRSHIFT)
const _EFAULT = 14
const _HAVE_SINL = 1
const _IFLA_VLAN_UNSPEC = 0
const _IFF_MULTICAST = 4096
const _PORT_REQUEST_DISASSOCIATE = 3
const _RWF_SYNC = 0x00000004
const _SO_DEBUG = 1
const _RTNH_F_OFFLOAD = 8
const _INT_FAST32_MAX = (9223372036854775807)
const _MS_SUBMOUNT = (1<<26)
const _DN_MODIFY = 0x00000002
const _IPPROTO_UDP = 17
const _IFLA_VRF_PORT_UNSPEC = 0
const _IFLA_INET6_MCAST = 4
const _RTNLGRP_DECnet_ROUTE = 15
const ___NR_tee = 276
const _RTA_IIF = 3
const _ICRNL = 0000400
const _O_RSYNC = _O_SYNC
const _SYS_dup2 = ___NR_dup2
const _SYS_dup3 = ___NR_dup3
const _REG_ERR = 19
const _NETLINK_NFLOG = 5
const _PRIXLEAST8 = "X"
const _SYS_linkat = ___NR_linkat
const ___DBL_HAS_INFINITY__ = 1
const _IPTOS_CLASS_MASK = 0xe0
const __POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4
const _ND_NEIGHBOR_SOLICIT = 135
const _HAVE_LINUX_IF_ETHER_H = 1
const __CS_V7_WIDTH_RESTRICTED_ENVS = 5
const _ARPHRD_PPP = 512
const _SI_ASYNCNL = -60
const _SYS_modify_ldt = ___NR_modify_ldt
const ___FLT64_EPSILON__ = 2.22044604925031308084726333618164062e-1664
const ___O_TMPFILE = (020000000 | ___O_DIRECTORY)
const _X86_EFLAGS_SF_BIT = 7
const _SIOCGIFMTU = 0x8921
const _BPF_LL_OFF = _SKF_LL_OFF
const __SCHED_H = 1
const _IPOPT_SECUR_EFTO = 0x789a
const _PORT_PROFILE_RESPONSE_ERROR = 261
const ___NR_shmat = 30
const ___NR_pkey_alloc = 330
const _IFA_FLAGS = 8
const ___DEC64_MAX_EXP__ = 385
const _RTAX_HOPLIMIT = 10
const _MAP_LOCKED = 0x02000
const _BPF_LDX = 0x01
const _RTA_VIA = 18
const __SC_V7_LPBIG_OFFBIG = 240
const _AF_IB = _PF_IB
const _NL1 = 0000400
const __SC_CLK_TCK = 2
const _MOD_CLKB = _ADJ_TICK
const _ENETDOWN = 100
const _AF_IRDA = _PF_IRDA
const _MCAST_LEAVE_GROUP = 45
const _RTNLGRP_IPV6_MROUTE = 10
const _PTHREAD_DESTRUCTOR_ITERATIONS = __POSIX_THREAD_DESTRUCTOR_ITERATIONS
const __ISOC95_SOURCE = 1
const ___DEC128_MAX_EXP__ = 6145
const _IEXTEN = 0100000
const _IPPORT_ROUTESERVER = 520
const _X86_EFLAGS_CF_BIT = 0
const _SYS_mount = ___NR_mount
const _FS_IMMUTABLE_FL = 0x00000010
const _NI_DGRAM = 16
const ___NR_pkey_free = 331
const __XOPEN_CRYPT = 1
const _RTF_POLICY = 0x04000000
const _IFLA_BOND_DOWNDELAY = 5
const _NTF_ROUTER = 0x80
const _NDTA_PAD = 9
const _SCNxFAST8 = "hhx"
const _DT_WHT = 14
const _PTRACE_SYSEMU = 31
const _SIOCDIFADDR = 0x8936
const _EBADFD = 77
const _IP_MSS = 576
const _SYS_getgid = ___NR_getgid
const _TIOCNXCL = 0x540D
const ___SHRT_MAX__ = 0x7fff
const _MAX_IPOPTLEN = 40
const ___PTHREAD_MUTEX_HAVE_PREV = 1
const __SC_2_PBS = 168
const _SIOGIFINDEX = _SIOCGIFINDEX
const _IPV6_DONTFRAG = 62
const _B2400 = 0000013
const _EL2HLT = 51
const __SC_THREAD_PRIORITY_SCHEDULING = 79
const _WAIT_MYPGRP = 0
const _TCA_STATS2 = 7
const _IFLA_MACVLAN_FLAGS = 2
const ___NR_ftruncate = 77
const _IPPROTO_SCTP = 132
const _SYS_munlockall = ___NR_munlockall
const _RLIMIT_AS = 9
const ___NR_chown = 92
const _ONOCR = 0000020
const __CS_V6_ENV = 1148
const _IP_OFFMASK = 0x1fff
const _ILL_COPROC = 7
const _PACKAGE_URL = ""
const _SYS_readlink = ___NR_readlink
const _IFLA_MACSEC_CIPHER_SUITE = 4
const _RTMSG_NEWRULE = 0x31
const __SC_NL_NMAX = 122
const ___FLT64_HAS_INFINITY__ = 1
const _X86_EFLAGS_VM_BIT = 17
const __POSIX_THREAD_PROCESS_SHARED = 200809
const _FNDELAY = _O_NDELAY
const _IFLA_BR_MCAST_QUERY_USE_IFADDR = 24
const _PRIuLEAST16 = "u"
const _RTF_GATEWAY = 0x0002
const _SYS_lchown = ___NR_lchown
const _SYS_link = ___NR_link
const _IFLA_VXLAN_LOCAL6 = 17
const _IP_RECVORIGDSTADDR = _IP_ORIGDSTADDR
const _RTM_DELLINK = 17
const _RTM_NEWNETCONF = 80
const _IPTOS_DSCP_EF = 0xb8
const _PTRACE_LISTEN = 16904
const _L_XTND = 2
const __POSIX_SEMAPHORES = 200809
const __IOC_TYPEMASK = ((1 << __IOC_TYPEBITS)-1)
const _X86_CR4_MCE_BIT = 6
const ___FLT_HAS_INFINITY__ = 1
const _ETH_P_MACSEC = 0x88E5
const ___LONG_WIDTH__ = 64
const _MOD_CLKA = _ADJ_OFFSET_SINGLESHOT
const __NET_IF_H = 1
const _TIOCSTI = 0x5412
const _SYS_sendfile = ___NR_sendfile
const ___NR_swapon = 167
const _INLCR = 0000100
const _S_IFREG = ___S_IFREG
const _REG_R9 = 1
const _POSIX_MADV_DONTNEED = 4
const ___USE_UNIX98 = 1
const _IN6_ADDR_GEN_MODE_EUI64 = 0
const _IFLA_BRPORT_PROXYARP_WIFI = 12
const _SHUT_WR = 1
const _ECONNREFUSED = 111
const _TCAA_MAX = 1
const _PF_ALG = 38
const ___IFLA_INFO_MAX = 6
const _SYS_inotify_init1 = ___NR_inotify_init1
const __SC_POLL = 58
const ___IFLA_INET6_MAX = 9
const __CS_POSIX_V7_LP64_OFF64_LINTFLAGS = 1143
const _PORT_PROFILE_MAX = 40
const _TCP_COOKIE_PAIR_SIZE = (2*_TCP_COOKIE_MAX)
const _AF_NETBEUI = _PF_NETBEUI
const _PTRACE_PEEKSIGINFO_SHARED = 1
const _NUD_STALE = 0x04
const _NETLINK_FIB_LOOKUP = 10
const _RTM_BASE = 16
const _PF_SECURITY = 14
const _SPLICE_F_MOVE = 1
const ___NR_kill = 62
const _SIGSTKSZ = 8192
const _CR0 = 0000000
const _STA_PPSWANDER = 0x0400
const ___WCHAR_WIDTH__ = 32
const ___INT_FAST8_WIDTH__ = 8
const __SC_XOPEN_STREAMS = 246
const _NDTA_CONFIG = 5
const __SC_REGEXP = 155
const _BPF_IND = 0x40
const _FFI_TYPE_STRUCT = 13
const __ENDIAN_H = 1
const _TCP_FIN_WAIT2 = 5
const _SYS_mq_timedreceive = ___NR_mq_timedreceive
const _epoll_data_offset = 4
const _NDTA_STATS = 7
const _RTPROT_MRT = 10
const _SCM_RIGHTS = 1
const _TCP_RECV_QUEUE = 1
const __POSIX_V6_LP64_OFF64 = 1
const _AF_APPLETALK = _PF_APPLETALK
const ___SIZEOF_FLOAT__ = 4
const _PF_CAN = 29
const _RTF_LOCAL = 0x80000000
const _NLMSG_ALIGNTO = 4
const ___UINT_FAST16_MAX__ = 0xffffffffffffffff
const _SO_SECURITY_ENCRYPTION_NETWORK = 24
const ___SIZEOF_POINTER__ = 8
const ___NR_memfd_create = 319
const _SYS_tgkill = ___NR_tgkill
const _XCASE = 0000004
const _VMIN = 6
const _B57600 = 0010001
const __CS_POSIX_V7_ILP32_OFF32_LDFLAGS = 1133
const _RTPROT_BOOT = 3
const _TCPOPT_TIMESTAMP = 8
const _PRIxLEAST8 = "x"
const _EINPROGRESS = 115
const _IN_CLASSC_NSHIFT = 8
const _SCM_TIMESTAMPNS = _SO_TIMESTAMPNS
const _IFLA_ADDRESS = 1
const _IFLA_VF_INFO_UNSPEC = 0
const _MS_SYNCHRONOUS = 16
const _SYS_renameat = ___NR_renameat
const _ETH_P_QINQ1 = 0x9100
const _ETH_P_QINQ2 = 0x9200
const _ETH_P_QINQ3 = 0x9300
const ___NR_quotactl = 179
const __POSIX2_SW_DEV = ___POSIX2_THIS_VERSION
const _TCSANOW = 0
const _SYS_signalfd = ___NR_signalfd
const _CS7 = 0000040
const _CS8 = 0000060
const _IPPORT_TIMESERVER = 37
const _F_OWNER_PGRP = 2
const _IPPORT_EXECSERVER = 512
const _AF_ATMPVC = _PF_ATMPVC
const _RTMGRP_IPV4_IFADDR = 0x10
const _SYS_recvfrom = ___NR_recvfrom
const ___FLT64X_MIN_10_EXP__ = (-4931)
const _S_IXGRP = (_S_IXUSR >> 3)
const _SYS_mknod = ___NR_mknod
const ___IFLA_VRF_PORT_MAX = 2
const _SYS_utimes = ___NR_utimes
const _FS_XFLAG_HASATTR = 0x80000000
const ___DEC_EVAL_METHOD__ = 2
const _SIGTTIN = 21
const _IPPROTO_ESP = 50
const _SKF_AD_NLATTR = 12
const _EAI_MEMORY = -10
const _SYS_listxattr = ___NR_listxattr
const _ARPOP_NAK = 10
const _BPF_JSET = 0x40
const _N_TTY = 0
const __PC_SOCK_MAXBUF = 12
const _IOCSIZE_MASK = (__IOC_SIZEMASK << __IOC_SIZESHIFT)
const ___FLT32_MIN_EXP__ = (-125)
const __LFS64_LARGEFILE = 1
const _TUNDETACHFILTER_val = 1074812118
const __CS_POSIX_V6_ILP32_OFF32_LINTFLAGS = 1119
const _MADV_HUGEPAGE = 14
const _TCIOFLUSH = 2
const _IFLA_BR_MCAST_HASH_MAX = 27
const _IFLA_PPP_DEV_FD = 1
const _S_ISUID = ___S_ISUID
const _VSTART = 8
const _ETH_P_CANFD = 0x000D
const _BPF_ALU = 0x04
const ___SIZEOF_FLOAT80__ = 16
const __POSIX_SSIZE_MAX = 32767
const __CS_PATH = 0
const _HAVE_UNSETENV = 1
const _FRAME_SIZE = 168
const __SYS_TIMEX_H = 1
const _LINUX_REBOOT_CMD_CAD_OFF = 0x00000000
const _SIGUSR1 = 10
const _SIGUSR2 = 12
const _HAVE_SYS_STAT_H = 1
const _HAVE_FALLOCATE = 1
const ___NR_unshare = 272
const _CX86_CCR0 = 0xc0
const _CX86_CCR1 = 0xc1
const _CX86_CCR2 = 0xc2
const _CX86_CCR3 = 0xc3
const _SYS_rt_sigtimedwait = ___NR_rt_sigtimedwait
const ___NR_tkill = 200
const _CX86_CCR6 = 0xea
const _CX86_CCR7 = 0xeb
const _MSG_MORE = 32768
const _IPOPT_TS_TSONLY = 0
const _HAVE_LINUX_RTNETLINK_H = 1
const _PRIo16 = "o"
const _PTRACE_POKEUSR = 6
const ___NR_getcpu = 309
const _AF_DECnet = _PF_DECnet
const _PACKAGE_NAME = "package-unused"
const __SC_XOPEN_UNIX = 91
const _X86_CR0_NW_BIT = 29
const _EAI_CANCELED = -101
const ___NR_readv = 19
const __POSIX2_RE_DUP_MAX = 255
const _TUNSETIFINDEX_val = 1074025690
const _MAP_HUGE_MASK = 0x3f
const _ND_NA_FLAG_SOLICITED = 0x00000040
const _TUNSETVNETHDRSZ_val = 1074025688
const _EAI_ADDRFAMILY = -9
const ___SIZEOF_FLOAT128__ = 16
const ___NR_vmsplice = 278
const ___NR_uname = 63
const _TCSETS_val = 21506
const ___NR_execveat = 322
const _SYS_times = ___NR_times
const _RTM_F_PREFIX = 0x800
const _SEEK_CUR = 1
const _IFLA_BR_HELLO_TIMER = 16
const __PC_PIPE_BUF = 5
const __CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS = 1131
const _IFLA_GENEVE_REMOTE = 2
const _RTNLGRP_MPLS_ROUTE = 27
const _SYS_timer_settime = ___NR_timer_settime
const _PF_LLC = 26
const _ETH_P_LINK_CTL = 0x886c
const _IP_OPTIONS = 4
const _AI_IDN_USE_STD3_ASCII_RULES = 0x0200
const __POSIX_RTSIG_MAX = 8
const _TIME_INS = 1
const _EISDIR = 21
const __BITS_TYPES_H = 1
const __SYS_SOCKET_H = 1
const ___NR_fsetxattr = 190
const _EIO = 5
const _IPPROTO_HOPOPTS = 0
const __BITS_POSIX2_LIM_H = 1
const _IFLA_PORT_VF = 1
const _IFF_NOARP = 128
const ___FLT64X_MANT_DIG__ = 64
const _EREMOTE = 66
const ___FLT64_MIN__ = 2.22507385850720138309023271733240406e-30864
const _ND_OPT_RTR_ADV_INTERVAL = 7
const _SYS_pipe = ___NR_pipe
const _NTF_EXT_LEARNED = 0x10
const _STA_PPSERROR = 0x0800
const _EREMOTEIO = 121
const _INT_FAST16_MIN = (-9223372036854775807-1)
const _HAVE_LINUX_FILTER_H = 1
const _EIDRM = 43
const __SC_FIFO = 144
const _SI_QUEUE = -1
const _BPF_AND = 0x50
const __CS_POSIX_V6_ILP32_OFF32_LIBS = 1118
const _TCOON = 1
const _F_DUPFD = 0
const _SKF_AD_PAY_OFFSET = 52
const _SYS_setrlimit = ___NR_setrlimit
const _FPE_INTDIV = 1
const _NDTPA_REFCNT = 2
const __SC_TRACE_INHERIT = 183
const ___NR_sendto = 44
const _NETLINK_ROUTE = 0
const _PTRACE_KILL = 8
const _RTNLGRP_MDB = 26
const _NETDB_SUCCESS = 0
const _F_SETFD = 2
const _HAVE_MKDIRAT = 1
const _IFLA_VXLAN_LIMIT = 9
const __SC_HOST_NAME_MAX = 180
const _NLDLY = 0000400
const _ADJ_TICK = 0x4000
const __POSIX2_LINE_MAX = 2048
const _F_SETFL = 4
const __CS_POSIX_V7_LP64_OFF64_LDFLAGS = 1141
const ___NR_setresuid = 117
const ___DEC64_MIN_EXP__ = (-382)
const _L_SET = 0
const _IFLA_NUM_RX_QUEUES = 32
const _SO_SNDLOWAT = 19
const _SIOCSIFTXQLEN = 0x8943
const _SO_TIMESTAMPNS = 35
const _INT_FAST32_MIN = (-9223372036854775807-1)
const _SO_BINDTODEVICE = 25
const _PTRACE_O_TRACESYSGOOD = 1
const _SKF_AD_NLATTR_NEST = 16
const _RTA_TABLE = 15
const _SIOCDRARP = 0x8960
const _ICMP6_DST_UNREACH_NOPORT = 4
const _P_PID = 1
const __UTSNAME_SYSNAME_LENGTH = __UTSNAME_LENGTH
const __POSIX_MEMLOCK_RANGE = 200809
const ___DEC128_MIN_EXP__ = (-6142)
const _SOCK_CLOEXEC = 524288
const ___FLT_MAX__ = 1.1
const _POSIX_FADV_NOREUSE = ___POSIX_FADV_NOREUSE
const _PORT_VDP_RESPONSE_SUCCESS = 0
const _PTRACE_O_TRACEEXEC = 16
const _ETH_P_SNAP = 0x0005
const ___SIZEOF_PTHREAD_BARRIER_T = 32
const _IFLA_BR_TOPOLOGY_CHANGE = 14
const _SYS_quotactl = ___NR_quotactl
const _PTRACE_O_TRACEVFORKDONE = 32
const __SC_LOGIN_NAME_MAX = 71
const _ETHERMTU = _ETH_DATA_LEN
const _POSIX_FADV_DONTNEED = ___POSIX_FADV_DONTNEED
const _RTPROT_BABEL = 42
const _F_GETLEASE = 1025
const __SC_LEVEL4_CACHE_ASSOC = 198
const _IFLA_VLAN_PROTOCOL = 5
const _SO_PASSCRED = 16
const _CLOCK_TAI = 11
const _NGROUPS_MAX = 65536
const _FIOSETOWN = 0x8901
const __SC_PII_OSI_COTS = 63
const _SIOCDARP = 0x8953
const _MAP_HUGE_SHIFT = 26
const _UINTPTR_MAX = (18446744073709551615)
const _ETH_P_WAN_PPP = 0x0007
const _IN_EXCL_UNLINK = 0x04000000
const _X86_CR0_WP_BIT = 16
const _O_EXCL = 0200
const _BPF_NEG = 0x80
const _MSG_NOSIGNAL = 16384
const _IPV6_RXHOPOPTS = _IPV6_HOPOPTS
const _IFLA_MACVLAN_MACADDR_COUNT = 6
const __CS_XBS5_ILP32_OFF32_LDFLAGS = 1101
const _PTRACE_GETREGSET = 16900
const _SKF_AD_IFINDEX = 8
const __SYS_MMAN_H = 1
const _MS_ACTIVE = 1073741824
const _PR_MCE_KILL = 33
const _RPM_PCO_CHANGE = 2
const ___NR_rt_sigreturn = 15
const ___GNUC_PATCHLEVEL__ = 0
const ___NR_getitimer = 36
const ___SIZEOF_INT__ = 4
const ___INT_FAST64_MAX__ = 0x7fffffffffffffff
const _NDTPA_UCAST_PROBES = 10
const _IFLA_BRPORT_PAD = 26
const __XBS5_LP64_OFF64 = 1
const _SIGALRM = 14
const _RTN_THROW = 9
const _IFLA_BRPORT_PRIORITY = 2
const _X86_CR4_PSE_BIT = 4
const __SC_2_FORT_DEV = 49
const ___NR_syslog = 103
const __CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 1128
const ___GCC_ATOMIC_SHORT_LOCK_FREE = 2
const _FFI_UNIX64 = 2
const _TIOCNOTTY_val = 21538
const _AF_PHONET = _PF_PHONET
const _IPPROTO_EGP = 8
const _ETH_FCS_LEN = 4
const _FS_XFLAG_APPEND = 0x00000010
const ___NR_ioctl = 16
const _CX86_ARR_BASE = 0xc4
const _AI_NUMERICSERV = 0x0400
const _PR_TSC_ENABLE = 1
const _SCHED_IDLE = 5
const _F_OK = 0
const _IPOPT_MEASUREMENT = _IPOPT_DEBMEAS
const _RT_TABLE_COMPAT = 252
const ___NR_getpriority = 140
const _FS_NOCOW_FL = 0x00800000
const _IFLA_NUM_TX_QUEUES = 31
const _EAI_INTR = -104
const ___LONG_LONG_MAX__ = 0x7fffffffffffffff
const _RTM_NEWNEIGHTBL = 64
const _TCP_QUEUE_SEQ = 21
const _IFLA_INFO_SLAVE_DATA = 5
const ___VERSION__ = "8.0.0 20171205 (experimental)"
const _IFLA_GENEVE_ID = 1
const _ICMP6_PARAMPROB_NEXTHEADER = 1
const _SYS_delete_module = ___NR_delete_module
const _IPV6_RTHDR = 57
const _LLONG_MIN = (-_LLONG_MAX - 1)
const _ECOMM = 70
const _SYS_timer_gettime = ___NR_timer_gettime
const ___NR_migrate_pages = 256
const _IN_MOVE = (_IN_MOVED_FROM | _IN_MOVED_TO)
const _PORT_REQUEST_PREASSOCIATE = 0
const _N_AX25 = 5
const ___O_CLOEXEC = 02000000
const _VWERASE = 14
const ___INO_T_MATCHES_INO64_T = 1
const _ELIBACC = 79
const _IPOPT_SECUR_UNCLASS = 0x0000
const _MACVLAN_MODE_VEPA = 2
const _ARPHRD_IPDDP = 777
const _IFLA_BOND_SLAVE_STATE = 1
const _RLIMIT_STACK = 3
const _PF_ASH = 18
const ___NR_getpeername = 52
const _IPV6_RECVERR = 25
const _N_STRIP = 4
const _IPPROTO_ICMP = 1
const _POLL_OUT = 2
const _F_GETPIPE_SZ = 1032
const _IOV_MAX = 1024
const _TIME_OOP = 3
const _SYS_open = ___NR_open
const __SYS_MOUNT_H = 1
const _PR_TASK_PERF_EVENTS_ENABLE = 32
const _IPPROTO_PUP = 12
const _ARPHRD_ROSE = 270
const _SYS_inotify_rm_watch = ___NR_inotify_rm_watch
const _TCSETAW = 0x5407
const __SC_XBS5_ILP32_OFF32 = 125
const _FFI_TYPE_UINT8 = 5
const _LINUX_REBOOT_CMD_CAD_ON = 0x89ABCDEF
const _IFLA_BOND_AD_ACTOR_SYS_PRIO = 24
const _PR_SET_DUMPABLE = 4
const _ETH_P_ECONET = 0x0018
const _SYS_shmctl = ___NR_shmctl
const _MS_SHARED = 1048576
const ___IFLA_PPP_MAX = 2
const _HAVE_SYS_STATFS_H = 1
const _TIOCGRS485 = 0x542E
const _IPV6_RECVPKTINFO = 49
const _HAVE_LINUX_REBOOT_H = 1
const _TCP_NODELAY = 1
const _PREFIX_ADDRESS = 1
const _RPM_PCO_ADD = 1
const _TCPOPT_MAXSEG = 2
const _SYS_sched_getaffinity = ___NR_sched_getaffinity
const __REENTRANT = 1
const _IPV6_DROP_MEMBERSHIP = _IPV6_LEAVE_GROUP
const __XOPEN_XPG3 = 1
const _EMFILE = 24
const __SC_XOPEN_REALTIME = 130
const _TH_PUSH = 0x08
const _IFLA_BR_PAD = 40
const _CLD_KILLED = 2
const _SIGTTOU = 22
const _IFLA_VF_SPOOFCHK = 4
const __SC_MB_LEN_MAX = 108
const ___UINT64_MAX__ = 0xffffffffffffffff
const __SC_SINGLE_PROCESS = 151
const ___linux = 1
const _RLIMIT_NOFILE = 7
const _IFLA_BOND_TLB_DYNAMIC_LB = 27
const __POSIX2_C_VERSION = ___POSIX2_THIS_VERSION
const __POSIX_MEMORY_PROTECTION = 200809
const __SC_REGEX_VERSION = 156
const _IFLA_INET6_ICMP6STATS = 6
const __NETDB_H = 1
const _FIOASYNC = 0x5452
const _IFLA_VXLAN_L3MISS = 14
const ___S_ISGID = 02000
const _MS_VERBOSE = 32768
const _NDTA_GC_INTERVAL = 8
const _ETH_P_IRDA = 0x0017
const ___NR_inotify_rm_watch = 255
const _SYS_pwritev = ___NR_pwritev
const ___GCC_ATOMIC_POINTER_LOCK_FREE = 2
const __SC_C_LANG_SUPPORT = 135
const _NL_MMAP_STATUS_RESERVED = 1
const _HAVE_LOFF_T = 1
const __POSIX_HIWAT = __POSIX_PIPE_BUF
const _PR_GET_THP_DISABLE = 42
const __BITS_BYTESWAP_H = 1
const _F_TEST = 3
const _MREMAP_FIXED = 2
const _MAX_ADDR_LEN = 7
const __SC_LONG_BIT = 106
const _STA_MODE = 0x4000
const _SI_MESGQ = -3
const _PRIdFAST8 = "d"
const _IFLA_MACSEC_PORT = 2
const _CBAUD = 0010017
const _SYS_setfsuid = ___NR_setfsuid
const __SC_MAPPED_FILES = 16
const _FFI_LONG_LONG_MAX = _LONG_LONG_MAX
const _ND_RA_FLAG_OTHER = 0x40
const _TRAP_TRACE = 2
const __SC_RAW_SOCKETS = 236
const _FS_XFLAG_SYNC = 0x00000020
const _IFLA_BOND_ARP_IP_TARGET = 8
const __POSIX_REGEXP = 1
const _TCP_INFO = 11
const _PF_NFC = 39
const _S_IFIFO = ___S_IFIFO
const _EAI_NOTCANCELED = -102
const _PTRACE_O_TRACEEXIT = 64
const _STA_RONLY = (_STA_PPSSIGNAL | _STA_PPSJITTER | _STA_PPSWANDER | _STA_PPSERROR | _STA_CLOCKERR | _STA_NANO | _STA_MODE | _STA_CLK)
const _TCP_FIN_WAIT1 = 4
const _IFLA_INET6_STATS = 3
const __IOC_TYPESHIFT = (__IOC_NRSHIFT+__IOC_NRBITS)
const ___FLT128_MIN__ = 3.36210314311209350626267781732175260e-4932128
const _RTF_WINDOW = 0x0080
const _PR_GET_CHILD_SUBREAPER = 37
const _NO_ADDRESS = _NO_DATA
const _SYS_fchownat = ___NR_fchownat
const ___NR_getcwd = 79
const _PREFIX_CACHEINFO = 2
const _O_SYNC = 04010000
const _SYS_fchmod = ___NR_fchmod
const __SC_BC_DIM_MAX = 37
const _SYS_semop = ___NR_semop
const _IFLA_VF_STATS_RX_PACKETS = 0
const _X86_CR0_NE_BIT = 5
const _EBADSLT = 57
const _ETHERTYPE_REVARP = 0x8035
const _HAVE_EPOLL_CREATE1 = 1
const _ETH_P_XDSA = 0x00F8
const ___GNUC__ = 8
const _SCNdLEAST8 = "hhd"
const _B0 = 0000000
const _HAVE_SYS_INOTIFY_H = 1
const ___S_IFDIR = 0040000
const _CLONE_THREAD = 0x00010000
const _MS_POSIXACL = 65536
const _PATH_MAX = 4096
const _IFLA_UNSPEC = 0
const ___NR_reboot = 169
const _SOL_IP = 0
const _TUN_F_UFO = 0x10
const ___FLT64_HAS_DENORM__ = 1
const _IPTOS_PREC_CRITIC_ECP = _IPTOS_CLASS_CS5
const _IN_LOOPBACKNET = 127
const _SOL_AAL = 265
const _SYS_settimeofday = ___NR_settimeofday
const _IPPROTO_IDP = 22
const __SC_2_LOCALEDEF = 52
const _IFLA_VF_STATS_PAD = 6
const _AF_INET = _PF_INET
const _F_SETLK = _F_SETLK64
const _CX86_PCR1 = 0xf0
const ___NR_lremovexattr = 198
const _IPOPT_NOOP = _IPOPT_NOP
const _RTMSG_NEWDEVICE = 0x11
const _HAVE_SETXATTR = 1
const __CS_V5_WIDTH_RESTRICTED_ENVS = 4
const _S_IFSOCK = ___S_IFSOCK
const ___NR_signalfd4 = 289
const __ISOC99_SOURCE = 1
const ___FLT_DIG__ = 6
const ___NR_getpid = 39
const __SC_XOPEN_XPG2 = 98
const _SYS_kill = ___NR_kill
const _B110 = 0000003
const _TCP_REPAIR_QUEUE = 20
const _RTNLGRP_IPV4_IFADDR = 5
const ___FXSR__ = 1
const _IFLA_INFO_UNSPEC = 0
const ___SIZE_WIDTH__ = 64
const __POSIX_TTY_NAME_MAX = 9
const _IFLA_BOND_AD_ACTOR_SYSTEM = 26
const _SO_GET_FILTER = _SO_ATTACH_FILTER
const __UTIME_H = 1
const _SYS_utimensat = ___NR_utimensat
const __SC_2_CHAR_TERM = 95
const _TUNSETOWNER_val = 1074025676
const _PTHREAD_STACK_MIN = 16384
const _SIGPROF = 27
const __SC_LINE_MAX = 43
const ___SIGEV_MAX_SIZE = 64
const _HAVE_SETENV = 1
const __SC_SYSTEM_DATABASE = 162
const _FS_XFLAG_NODUMP = 0x00000080
const _SYS_timer_create = ___NR_timer_create
const __PC_LINK_MAX = 0
const _TCPOPT_WINDOW = 3
const ___UINT_LEAST32_MAX__ = 0xffffffff
const ___NR_mq_notify = 244
const _IPPORT_DAYTIME = 13
const _SYS_stat = ___NR_stat
const _PARENB = 0000400
const _FALLOC_FL_KEEP_SIZE = 1
const __SC_SCHAR_MAX = 111
const _IFLA_BR_MCAST_QUERIER = 25
const _MADV_HWPOISON = 100
const __POSIX_ASYNC_IO = 1
const _IFLA_BOND_SLAVE_AD_ACTOR_OPER_PORT_STATE = 7
const _ND_OPT_PI_FLAG_ONLINK = 0x80
const __SC_THREAD_PROCESS_SHARED = 82
const _SYS_setdomainname = ___NR_setdomainname
const _F_GETOWN_EX = ___F_GETOWN_EX
const _ESTALE = 116
const ___NR_futex = 202
const _IFF_DETACH_QUEUE = 0x0400
const _IFLA_LINKMODE = 17
const _IPOPT_SECURITY = 130
const __PC_NAME_MAX = 3
const _IFLA_GENEVE_UDP_ZERO_CSUM6_TX = 9
const _SIGCONT = 18
const ___NR_getpmsg = 181
const _SYS_fchdir = ___NR_fchdir
const _IFF_PORTSEL = 8192
const _SO_ATTACH_REUSEPORT_CBPF = 51
const __SC_V6_ILP32_OFFBIG = 177
const _MAX_CANON = 255
const _IFLA_BOND_XMIT_HASH_POLICY = 14
const _ETHER_CRC_LEN = 4
const _IFLA_INFO_DATA = 2
const _RWF_DSYNC = 0x00000002
const _NTF_PROXY = 0x08
const __CS_V7_ENV = 1149
const _AI_IDN = 0x0040
const _S_IROTH = (_S_IRGRP >> 3)
const _IPPROTO_GRE = 47
const _WEXITED = 4
const _PACKET_TX_TIMESTAMP = 16
const _EPOLLHUP = 16
const _LT_OBJDIR = ".libs/"
const ___RTAX_MAX = 17
const _PACKET_HDRLEN = 11
const _BPF_LSH = 0x60
const _TCPOLEN_SACK_PERMITTED = 2
const _NDA_VLAN = 5
const ___NR_setreuid = 113
const _FS_XFLAG_NODEFRAG = 0x00002000
const _IP_CHECKSUM = 23
const _SIOCSIFFLAGS = 0x8914
const ___F_GETOWN = 9
const _BPF_MAXINSNS = 4096
const _EAI_IDN_ENCODE = -105
const _IFLA_VF_STATS_TX_PACKETS = 1
const _FILE_DEDUPE_RANGE_SAME = 0
const _IPPROTO_TCP = 6
const _TIOCM_CD = _TIOCM_CAR
const _B134 = 0000004
const _SKF_AD_RANDOM = 56
const _SYS_flock = ___NR_flock
const _HAVE_NETPACKET_PACKET_H = 1
const _ETH_P_PRP = 0x88FB
const _OFILL = 0000100
const __CS_LFS64_LIBS = 1006
const _RLIM_SAVED_MAX = _RLIM_INFINITY
const _IFLA_GTP_FD0 = 1
const _IFLA_GTP_FD1 = 2
const _HAVE_SYNC_FILE_RANGE = 1
const _IFA_LOCAL = 2
const _ND_OPT_PI_FLAG_RADDR = 0x20
const _TCP_DEFER_ACCEPT = 9
const _MCAST_JOIN_SOURCE_GROUP = 46
const _SYS_request_key = ___NR_request_key
const _ICMP6_PACKET_TOO_BIG = 2
const _X86_CR4_PCE_BIT = 8
const _EAI_BADFLAGS = -1
const __CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 1115
const _UTIME_NOW = ((1 << 30) - 1)
const __STRUCT_TIMEVAL = 1
const __POSIX_MAX_INPUT = 255
const _IFLA_BRPORT_ID = 17
const _ETH_DATA_LEN = 1500
const ___RLIMIT_SIGPENDING = 11
const _SYS_io_destroy = ___NR_io_destroy
const _ICMP6_DST_UNREACH = 1
const _ETH_P_PPP_DISC = 0x8863
const _TCPOLEN_MAXSEG = 4
const _ETH_P_802_3_MIN = 0x0600
const _ARPOP_RREPLY = 4
const _IPV6_UNICAST_HOPS = 16
const _NETLINK_NO_ENOBUFS = 5
const ___NR_name_to_handle_at = 303
const ___FLT32_MAX__ = 3.40282346638528859811704183484516925e+3832
const _SYS_timerfd_create = ___NR_timerfd_create
const _IN_MOVED_TO = 0x00000080
const _SYS_gettid = ___NR_gettid
const __POSIX_IPV6 = 200809
const _AF_MPLS = _PF_MPLS
const _SYS_fallocate = ___NR_fallocate
const _AF_WANPIPE = _PF_WANPIPE
const _TCP_THIN_LINEAR_TIMEOUTS = 16
const _STA_CLOCKERR = 0x1000
const _SIGILL = 4
const ___FLT128_HAS_DENORM__ = 1
const _ETHERTYPE_PUP = 0x0200
const __BITS_POSIX1_LIM_H = 1
const _IPV6_RECVDSTOPTS = 58
const ___NR_security = 185
const _ETH_P_802_EX1 = 0x88B5
const _IFA_F_DADFAILED = 0x08
const _SCNx8 = "hhx"
const _CSIGNAL = 0x000000ff
const ___NR_accept4 = 288
const _NI_NUMERICHOST = 1
const _B9600 = 0000015
const _NL_MMAP_STATUS_UNUSED = 0
const _SO_LOCK_FILTER = 44
const _IFLA_VF_MAC = 1
const _IFLA_VXLAN_REMCSUM_TX = 21
const _UCHAR_MAX = (_SCHAR_MAX * 2 + 1)
const _IFLA_BOND_ARP_VALIDATE = 9
const _IPPROTO_MPLS = 137
const _ETH_P_IPV6 = 0x86DD
const _ETH_P_AARP = 0x80F3
const _SYS_sched_setparam = ___NR_sched_setparam
const _ATF_PUBL = 0x08
const _WCOREFLAG = ___WCOREFLAG
const _TIOCGWINSZ = 0x5413
const ___USE_XOPEN2K8XSI = 1
const _PRIi8 = "i"
const _ARPHRD_LOOPBACK = 772
const ___GCC_IEC_559_COMPLEX = 2
const _SO_BROADCAST = 6
const ___GLIBC_MINOR__ = 24
const __SC_STREAMS = 174
const _SYS_shmat = ___NR_shmat
const _IPVLAN_MODE_L2 = 0
const ___MMX__ = 1
const _B150 = 0000005
const _POSIX_FADV_WILLNEED = 3
const _IFLA_VXLAN_RSC = 12
const _PACKET_BROADCAST = 1
const _PF_ATMPVC = 8
const _SYS_preadv2 = ___NR_preadv2
const _IN_CLASSC_NET = 0xffffff00
const _PACKET_COPY_THRESH = 7
const _ETH_ZLEN = 60
const _TCPOPT_EOL = 0
const _IN6_ADDR_GEN_MODE_RANDOM = 3
const _IFLA_MACSEC_ENCODING_SA = 6
const __CS_POSIX_V7_LP64_OFF64_LIBS = 1142
const _ETH_P_PUPAT = 0x0201
const _SYS_getrusage = ___NR_getrusage
const _IFLA_PORT_PROFILE = 2
const _IFLA_BOND_PRIMARY = 11
const _SYS_kcmp = ___NR_kcmp
const _IN_MOVED_FROM = 0x00000040
const __UTSNAME_MACHINE_LENGTH = __UTSNAME_LENGTH
const _IPV6_LEAVE_GROUP = 21
const _SYS_unlink = ___NR_unlink
const _HAVE_STRSIGNAL = 1
const __PC_CHOWN_RESTRICTED = 6
const __SC_XOPEN_REALTIME_THREADS = 131
const _O_FSYNC = _O_SYNC
const _RTM_NEWRULE = 32
const _IN_MASK_ADD = 0x20000000
const __BITS_PTHREADTYPES_H = 1
const _IPTOS_PREC_MASK = _IPTOS_CLASS_MASK
const ___NR_renameat2 = 316
const __SC_IPV6 = 235
const _TCP_ESTABLISHED = 1
const _ARPHRD_ARCNET = 7
const _TIOCSERSWILD = 0x5455
const _ETH_P_PUP = 0x0200
const __POSIX_THREAD_PRIORITY_SCHEDULING = 200809
const _SIGEV_THREAD = 2
const _HAVE_UTIME_H = 1
const _IP_RECVOPTS = 6
const _PR_SET_MM_START_CODE = 1
const ___NR_mkdir = 83
const ___CPU_SETSIZE = 1024
const _PF_DECnet = 12
const _TIOCM_CAR = 0x040
const _SYS_shmget = ___NR_shmget
const ___NR_eventfd2 = 290
const _RTM_DELADDRLABEL = 73
const _R_OK = 4
const _SIOCGIFENCAP = 0x8925
const ___NR_unlinkat = 263
const _IFLA_BR_VLAN_FILTERING = 7
const _MS_ASYNC = 1
const __IOC_READ = 2
const _BLOCK_SIZE = (1<<_BLOCK_SIZE_BITS)
const ___NR_set_robust_list = 273
const _IFLA_GROUP = 27
const _ELIBEXEC = 83
const _WCHAR_MIN = ___WCHAR_MIN
const ___NR_putpmsg = 182
const ___NR_arch_prctl = 158
const _MSG_CTRUNC = 8
const _IFLA_BR_ROOT_PATH_COST = 13
const _MSG_SYN = 1024
const _HAVE_LINUX_NETLINK_H = 1
const _HAVE_SPLICE = 1
const _RE_DUP_MAX = (0x7fff)
const _FPE_FLTDIV = 3
const _IFLA_CARRIER = 33
const __XOPEN_VERSION = 700
const __CS_XBS5_ILP32_OFF32_LIBS = 1102
const _RTNLGRP_NEIGH = 3
const __CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 1117
const __STAT_VER_KERNEL = 0
const _TCPOPT_NOP = 1
const _ICMP6_RR_RESULT_FLAGS_FORBIDDEN = 0x0100
const __POSIX_NO_TRUNC = 1
const _PROT_WRITE = 0x2
const ___NR_epoll_pwait = 281
const _ARPHRD_SIT = 776
const _RTM_NEWPREFIX = 52
const ___RLIMIT_MEMLOCK = 8
const _SYS_lookup_dcookie = ___NR_lookup_dcookie
const ___ORDER_LITTLE_ENDIAN__ = 1234
const _BPF_MISC = 0x07
const _TCPOLEN_WINDOW = 3
const ___GCC_ATOMIC_CHAR16_T_LOCK_FREE = 2
const __POSIX_THREAD_KEYS_MAX = 128
const _AT_EMPTY_PATH = 0x1000
const ___NR_sched_yield = 24
const _HAVE_INOTIFY_RM_WATCH = 1
const __SC_STREAM_MAX = 5
const ___F_GETSIG = 11
const _EMEDIUMTYPE = 124
const _STA_CLK = 0x8000
const _IPTOS_MINCOST = _IPTOS_LOWCOST
const ___FLT64_DENORM_MIN__ = 4.94065645841246544176568792868221372e-32464
const _RLIM64_INFINITY = 0xffffffffffffffff
const _RTNLGRP_IPV4_NETCONF = 24
const _RTAX_FEATURE_TIMESTAMP = (1 << 2)
const _INT32_MAX = (2147483647)
const _ETHERTYPE_IPV6 = 0x86dd
const _MACVLAN_MODE_PRIVATE = 1
const _IFLA_STATS_LINK_XSTATS = 2
const _O_RDONLY = 00
const ___NR_getresuid = 118
const _PTRACE_EVENT_CLONE = 3
const _TCIFLUSH = 0
const ___IFLA_BOND_MAX = 28
const ___NR_linkat = 265
const _FS_NOATIME_FL = 0x00000080
const __SC_ULONG_MAX = 117
const _IPTOS_CLASS_DEFAULT = _IPTOS_CLASS_CS0
const _SYS_shmdt = ___NR_shmdt
const _RTNL_FAMILY_MAX = 129
const _TIME_OK = 0
const _BPF_TXA = 0x80
const __SC_CHILD_MAX = 1
const _SYS_add_key = ___NR_add_key
const _STDC_HEADERS = 1
const _MAP_ANONYMOUS = 0x20
const _X86_CR4_DE_BIT = 3
const _VINTR = 0
const _MINSIGSTKSZ = 2048
const _RTMGRP_IPV4_RULE = 0x80
const _MADV_MERGEABLE = 12
const _HAVE_NETINET_ICMP6_H = 1
const _ARPHRD_ADAPT = 264
const _CPU_SETSIZE = ___CPU_SETSIZE
const _IPVERSION = 4
const _SYS_exit_group = ___NR_exit_group
const _TIOCCBRK = 0x5428
const ___LP64_OFF64_LDFLAGS = "-m64"
const _IPVLAN_MODE_L3 = 1
const __SC_TRACE_EVENT_NAME_MAX = 242
const _SIGINT = 2
const _SYS_fork = ___NR_fork
const _ETHERTYPE_TRAIL = 0x1000
const _RTF_REJECT = 0x0200
const _CLONE_FS = 0x00000200
const _TCA_STAB = 8
const _SIOCGIFTXQLEN = 0x8942
const _PTRACE_GETREGS = 12
const __POSIX_FSYNC = 200809
const _SYS_getxattr = ___NR_getxattr
const _SIOCSIFADDR = 0x8916
const _SYS_mprotect = ___NR_mprotect
const __POSIX_OPEN_MAX = 20
const _TCSETAF = 0x5408
const _TCP_MD5SIG_MAXKEYLEN = 80
const _BPF_DIV = 0x30
const _IPV6_AUTHHDR = 10
const _MSG_TRUNC = 32
const __POSIX2_CHAR_TERM = 200809
const _SIGABRT = 6
const _SYS_read = ___NR_read
const ___SIZEOF_PTHREAD_RWLOCKATTR_T = 8
const _IFLA_BR_MCAST_SNOOPING = 23
const _NETLINK_CONNECTED = 1
const _FS_EXTENT_FL = 0x00080000
const _IFLA_BR_TOPOLOGY_CHANGE_DETECTED = 15
const _SYS_llistxattr = ___NR_llistxattr
const _ETH_ALEN = 6
const _IFF_NO_PI = 0x1000
const _AI_IDN_ALLOW_UNASSIGNED = 0x0100
const ___NR_getgid = 104
const _TCA_KIND = 1
const _ND_OPT_TARGET_LINKADDR = 2
const ___DBL_HAS_DENORM__ = 1
const _TCP_LAST_ACK = 9
const _RT_TABLE_DEFAULT = 253
const _NL_MMAP_STATUS_SKIP = 4
const _HAVE_LOG1PL = 1
const _RT_SCOPE_HOST = 254
const _RTMSG_DELRULE = 0x32
const _IPPROTO_MAX = 256
const _IPOPT_CLASS_MASK = 0x60
const _AT_EACCESS = 0x200
const _SYS_pause = ___NR_pause
const _IFLA_OPERSTATE = 16
const _ND_OPT_PREFIX_INFORMATION = 3
const _SIGURG = 23
const _SIGSEGV = 11
const __SC_TIMER_MAX = 35
const _ND_RA_FLAG_HOME_AGENT = 0x20
const __SC_SCHAR_MIN = 112
const _TCPOLEN_TSTAMP_APPA = (_TCPOLEN_TIMESTAMP+2)
const ___FLT32_DIG__ = 6
const _PF_PHONET = 35
const _RTPROT_REDIRECT = 1
const _IN_DELETE_SELF = 0x00000400
const _NI_IDN = 32
const _TUN_READQ_SIZE = 500
const _STA_PLL = 0x0001
const _IP_ADD_SOURCE_MEMBERSHIP = 39
const _AF_BLUETOOTH = _PF_BLUETOOTH
const _IFLA_BRPORT_MESSAGE_AGE_TIMER = 21
const _ENOTBLK = 15
const _FFI_SIZEOF_ARG = 8
const _VSUSP = 10
const _SOCK_DCCP = 6
const ___X32_SYSCALL_BIT = 0x40000000
const _HAVE_DLFCN_H = 1
const _ETHER_HDR_LEN = _ETH_HLEN
const _SYS_mlock2 = ___NR_mlock2
const _SYS_getrandom = ___NR_getrandom
const ___STDC_IEC_559_COMPLEX__ = 1
const _X86_CR4_OSXSAVE_BIT = 18
const _ENOPROTOOPT = 92
const _RTAX_FEATURES = 12
const _NL_ARGMAX = __POSIX_ARG_MAX
const _SIOCSIFMAP = 0x8971
const ___NR_get_robust_list = 274
const _IFLA_VXLAN_UDP_ZERO_CSUM6_TX = 19
const _FPE_FLTOVF = 4
const _HAVE_WAIT4 = 1
const __SC_AVPHYS_PAGES = 86
const _ILL_BADSTK = 8
const _PR_MCE_KILL_DEFAULT = 2
const ___IFLA_IPOIB_MAX = 4
const _SIGHUP = 1
const _PTRACE_O_TRACEVFORK = 4
const _ENOSPC = 28
const _VDISCARD = 13
const _RTMGRP_NOTIFY = 2
const _SYS_openat = ___NR_openat
const __CS_POSIX_V7_ILP32_OFFBIG_CFLAGS = 1136
const ___NR_tgkill = 234
const ___NR_get_kernel_syms = 177
const _EDOTDOT = 73
const _SIGPIPE = 13
const _EPOLLONESHOT = 1073741824
const _MAP_ANON = _MAP_ANONYMOUS
const ___O_DIRECT = 040000
const _IPTTLDEC = 1
const __SC_NGROUPS_MAX = 3
const ___USE_POSIX199309 = 1
const ___NR_open_by_handle_at = 304
const __CS_XBS5_LP64_OFF64_LIBS = 1110
const _ETH_P_CUST = 0x6006
const _SO_KEEPALIVE = 9
const _SYS_rt_sigreturn = ___NR_rt_sigreturn
const _ICMP6_RR_PCOUSE_RAFLAGS_AUTO = 0x10
const _AF_NETLINK = _PF_NETLINK
const _BYTE_ORDER = ___BYTE_ORDER
const _IPV6_ADDRFORM = 1
const _TIME_WAIT = 4
const _EHOSTDOWN = 112
const _SYS_fadvise64 = ___NR_fadvise64
const _NETLINK_DNRTMSG = 14
const _IPV6_RECVHOPLIMIT = 51
const _TIOCGSOFTCAR = 0x5419
const _PR_GET_ENDIAN = 19
const _SYS_ustat = ___NR_ustat
const _SYS_io_submit = ___NR_io_submit
const _SOMAXCONN = 128
const _IP_MTU = 14
const ___FLT32X_MIN_10_EXP__ = (-307)
const _IFLA_GENEVE_UNSPEC = 0
const _SYS_writev = ___NR_writev
const ___NR_lgetxattr = 192
const _MNT_FORCE = 1
const ___FLT128_DENORM_MIN__ = 6.47517511943802511092443895822764655e-4966128
const ___k8__ = 1
const _SYS_unshare = ___NR_unshare
const _MADV_REMOVE = 9
const _EADV = 68
const _SOL_ALG = 279
const _CLONE_NEWCGROUP = 0x02000000
const __SC_MESSAGE_PASSING = 20
const _MS_MANDLOCK = 64
const __UTSNAME_VERSION_LENGTH = __UTSNAME_LENGTH
const _RTNL_FAMILY_IP6MR = 129
const _IFLA_PHYS_PORT_ID = 34
const _DN_MULTISHOT = 0x80000000
const _B1200 = 0000011
const _EWOULDBLOCK = _EAGAIN
const _IFLA_VF_PORT = 1
const _PTRACE_DETACH = 17
const _NLM_F_MATCH = 0x200
const _ARPHRD_AX25 = 3
const __POSIX_PRIORITY_SCHEDULING = 200809
const _RTF_NOFORWARD = 0x1000
const _F_DUPFD_CLOEXEC = 1030
const _ECANCELED = 125
const _INR_OPEN_MAX = 4096
const _B300 = 0000007
const _IMAXBEL = 0020000
const _PRIdLEAST32 = "d"
const _RUSAGE_CHILDREN = -1
const _X86_CR4_VMXE_BIT = 13
const _F_OFD_SETLK = 37
const _ENODATA = 61
const _SOL_KCM = 281
const _AF_PPPOX = _PF_PPPOX
const _HAVE_SYS_TYPES_H = 1
const _SIOCGIFADDR = 0x8915
const _NDA_DST = 1
const _TIOCM_LE = 0x001
const _SCNoFAST8 = "hho"
const _ARPHRD_SKIP = 771
const ___DEC32_SUBNORMAL_MIN__ = 0.000001E-95
const ___LITTLE_ENDIAN = 1234
const __POSIX_REALTIME_SIGNALS = 200809
const _SYS_msgget = ___NR_msgget
const _HAVE_ATAN2L = 1
const _IFLA_VRF_PORT_TABLE = 1
const _NETLINK_LIST_MEMBERSHIPS = 9
const __FCNTL_H = 1
const ___NR_utimes = 235
const _RTM_GETROUTE = 26
const _UINT8_MAX = (255)
const _FIONBIO = 0x5421
const _IFLA_BR_MCAST_LAST_MEMBER_INTVL = 30
const _IFLA_GENEVE_UDP_CSUM = 8
const _IFLA_MACVLAN_MACADDR_DATA = 5
const __POSIX_PRIORITIZED_IO = 200809
const _NO_DATA = 4
const _RTCF_MASQ = 0x00400000
const _HAVE_AS_X86_64_UNWIND_SECTION_TYPE = 1
const _IPV6_2292RTHDR = 5
const _SYS_mlock = ___NR_mlock
const __FEATURES_H = 1
const _SYS_kexec_load = ___NR_kexec_load
const _EPROTOTYPE = 91
const _NZERO = 20
const _SIOCSIFNETMASK = 0x891c
const _IFLA_MACSEC_ENCRYPT = 7
const ___NR_personality = 135
const _SYS_get_mempolicy = ___NR_get_mempolicy
const _EILSEQ = 84
const _SYS_setregid = ___NR_setregid
const _SOCK_STREAM = 1
const _PR_GET_SECCOMP = 21
const _IFLA_MACSEC_SCI = 1
const _ETH_HLEN = 14
const _SCM_CREDENTIALS = 2
const ___USE_LARGEFILE64 = 1
const _RTM_GETRULE = 34
const __NETINET_IN_H = 1
const __SC_LEVEL1_DCACHE_LINESIZE = 190
const _EDQUOT = 122
const _IFLA_VXLAN_TOS = 6
const ___S_IREAD = 0400
const _F_GETFD = 1
const _ARPHRD_DDCMP = 517
const ___NR_userfaultfd = 323
const _F_GETFL = 3
const _IPOPT_COPY = 0x80
const _IPV6_CHECKSUM = 7
const _ETH_P_PPP_SES = 0x8864
const __SC_LEVEL1_DCACHE_SIZE = 188
const _TUNGETSNDBUF_val = 2147767507
const _FS_XFLAG_PREALLOC = 0x00000002
const _ETH_P_TEB = 0x6558
const _CBAUDEX = 0010000
const _SKF_AD_PKTTYPE = 4
const _LINUX_REBOOT_MAGIC1 = 0xfee1dead
const _LINUX_REBOOT_MAGIC2 = 672274793
const _PF_BRIDGE = 7
const _MS_I_VERSION = 8388608
const _MADV_RANDOM = 1
const __UTSNAME_NODENAME_LENGTH = __UTSNAME_LENGTH
const _SCNoLEAST8 = "hho"
const __SC_PII_SOCKET = 55
const _ARPHRD_IEEE802 = 6
const _ADJ_OFFSET = 0x0001
const _ELOOP = 40
const ___IFLA_GTP_MAX = 4
const _RTNLGRP_PHONET_IFADDR = 21
const _PR_GET_TIMERSLACK = 30
const _LITTLE_ENDIAN = ___LITTLE_ENDIAN
const ___BYTE_ORDER = ___LITTLE_ENDIAN
const _TCPI_OPT_TIMESTAMPS = 1
const ___TCA_MAX = 10
const _RTA_METRICS = 8
const _SOL_PPPOL2TP = 273
const __SC_IOV_MAX = 60
const _MAX_VLAN_LIST_LEN = 1
const _SYNC_FILE_RANGE_WAIT_AFTER = 4
const __POSIX_MQ_PRIO_MAX = 32
const __POSIX_VERSION = 200809
const _HOST_NOT_FOUND = 1
const _F_OWNER_PID = 1
const _TIOCPKT_IOCTL = 64
const _ETH_P_MPLS_MC = 0x8848
const ___INT_FAST8_MAX__ = 0x7f
const _SYS_chroot = ___NR_chroot
const _EPROTONOSUPPORT = 93
const _IFLA_BR_GROUP_FWD_MASK = 9
const _IPPORT_RESERVED = 1024
const _IN_ONLYDIR = 0x01000000
const _REG_OLDMASK = 21
const _IFLA_MACSEC_ES = 10
const ___WINT_WIDTH__ = 32
const __POSIX_PIPE_BUF = 512
const _IPOPT_SECUR_SECRET = 0xd788
const _ISTRIP = 0000040
const ___RTM_MAX = 95
const _IPOPT_SECUR_CONFID = 0xf135
const _ESPIPE = 29
const _AF_SNA = _PF_SNA
const _RTA_PROTOINFO = 10
const ___NR_bpf = 321
const _SYS_afs_syscall = ___NR_afs_syscall
const _UINT_FAST8_MAX = (255)
const _STA_NANO = 0x2000
const _O_LARGEFILE = ___O_LARGEFILE
const ___NR_sched_setaffinity = 203
const _SOL_LLC = 268
const ___IFLA_VXLAN_MAX = 28
const _EISCONN = 106
const _TIOCPKT_START = 8
const _IFLA_GSO_MAX_SEGS = 40
const _SO_LINGER = 13
const ___UINT_LEAST16_MAX__ = 0xffff
const _OLCUC = 0000002
const ___NR_pkey_mprotect = 329
const ___NR_lstat = 6
const __POSIX_SYMLOOP_MAX = 8
const _RTNLGRP_NOTIFY = 2
const ___DBL_DIG__ = 15
const __CS_XBS5_LP64_OFF64_LINTFLAGS = 1111
const _RTN_UNREACHABLE = 7
const __CS_POSIX_V6_LP64_OFF64_LDFLAGS = 1125
const ___DEC64_MAX__ = 9.999999999999999E384
const _IFLA_HSR_SLAVE1 = 1
const __POSIX_THREAD_ATTR_STACKSIZE = 200809
const _HAVE_NETINET_IP_H = 1
const _IFHWADDRLEN = 6
const _TCSETSF = 0x5404
const ___USE_GNU = 1
const ___WCHAR_MAX = ___WCHAR_MAX__
const __SC_SSIZE_MAX = 110
const _IP_UNICAST_IF = 50
const _SO_RCVBUFFORCE = 33
const _SYS_nfsservctl = ___NR_nfsservctl
const _BUS_ADRALN = 1
const _IPV6_PKTINFO = 50
const _SYS_lremovexattr = ___NR_lremovexattr
const _TCSETSW = 0x5403
const _EAI_SOCKTYPE = -7
const __SC_V7_ILP32_OFF32 = 237
const _SYS_io_cancel = ___NR_io_cancel
const _IPPROTO_IPIP = 4
const _linux = 1
const _WNOWAIT = 0x01000000
const ___LOCK_ATOMIC = 16
const _IPV6_RECVRTHDR = 56
const _TCP_CA_Open = 0
const __SC_LEVEL3_CACHE_LINESIZE = 196
const _LINUX_REBOOT_CMD_HALT = 0xCDEF0123
const _ICMP6_FILTER = 1
const _HAVE_NET_ROUTE_H = 1
const _SO_BUSY_POLL = 46
const _ENFILE = 23
const __SC_THREADS = 67
const __IOC_SIZEMASK = ((1 << __IOC_SIZEBITS)-1)
const _RTNLGRP_DCB = 23
const _IP_IPSEC_POLICY = 16
const _RTMSG_CONTROL = 0x40
const _SO_MARK = 36
const _MAP_PRIVATE = 0x02
const __PC_REC_XFER_ALIGN = 17
const __BITS_TYPESIZES_H = 1
const _FFI_TYPE_LONGDOUBLE = 4
const ___NR_add_key = 248
const ___SIG_ATOMIC_MAX__ = 0x7fffffff
const _P_PGID = 2
const _EAI_SERVICE = -8
const _RTA_FLOW = 11
const _IN_CREATE = 0x00000100
const __POSIX_TRACE_LOG = -1
const _SCNdLEAST16 = "hd"
const _RTN_BROADCAST = 3
const _RTEXT_FILTER_BRVLAN_COMPRESSED = (1 << 2)
const _INT16_MIN = (-32767-1)
const _AF_ROSE = _PF_ROSE
const _SCNd16 = "hd"
const __SC_PII_INTERNET_DGRAM = 62
const _HAVE_MKNODAT = 1
const _IFLA_LINK_NETNSID = 37
const _SYS_socket = ___NR_socket
const _SIOCRTMSG = 0x890D
const __ERRNO_H = 1
const _PF_APPLETALK = 5
const __SC_NL_TEXTMAX = 124
const _TIOCSERGETMULTI = 0x545A
const _IFLA_BOND_SLAVE_UNSPEC = 0
const _IFLA_BOND_RESEND_IGMP = 15
const _RTM_DELQDISC = 37
const _IFLA_BOND_PRIMARY_RESELECT = 12
const _RENAME_NOREPLACE = (1 << 0)
const _TCP_CLOSE_WAIT = 8
const ___NR_brk = 12
const _ENAMETOOLONG = 36
const __SC_TTY_NAME_MAX = 72
const _B50 = 0000001
const _SYS_fgetxattr = ___NR_fgetxattr
const _IFLA_INET6_FLAGS = 1
const ___NR_mq_timedsend = 242
const __POSIX2_C_DEV = ___POSIX2_THIS_VERSION
const _NDTPA_PAD = 18
const ___NR_set_tid_address = 218
const _STDIN_FILENO = 0
const ___NR_timerfd_create = 283
const ___linux__ = 1
const _PR_FP_EXC_RES = 0x080000
const _SYS_memfd_create = ___NR_memfd_create
const __CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 1130
const _ICMP6_FILTER_PASS = 2
const _SA_RESTART = 0x10000000
const _TIOCGLCKTRMIOS = 0x5456
const __SC_PRIORITIZED_IO = 13
const _PTRACE_SECCOMP_GET_FILTER = 16908
const _CLONE_NEWIPC = 0x08000000
const _USE_LIBFFI = 1
const _SA_ONESHOT = _SA_RESETHAND
const _IFLA_IFALIAS = 20
const _ENXIO = 6
const ___NR_epoll_wait = 232
const __SC_XOPEN_SHM = 94
const _IFLA_VF_VLAN_LIST = 12
const _IFLA_NET_NS_FD = 28
const ___PRAGMA_REDEFINE_EXTNAME = 1
const __SC_RTSIG_MAX = 31
const _SIGWINCH = 28
const _MADV_FREE = 8
const _IFLA_PHYS_SWITCH_ID = 36
const _SYS_symlinkat = ___NR_symlinkat
const _IFA_F_TENTATIVE = 0x40
const _IPV6_RECVTCLASS = 66
const ___FLT32X_HAS_QUIET_NAN__ = 1
const _PORT_VDP_RESPONSE_OUT_OF_SYNC = 6
const _PF_NETROM = 6
const _PR_SET_MM_END_CODE = 2
const _STA_PPSTIME = 0x0004
const _ARPD_LOOKUP = 0x02
const _F_SETOWN_EX = ___F_SETOWN_EX
const _BC_SCALE_MAX = __POSIX2_BC_SCALE_MAX
const _SIOCSIFSLAVE = 0x8930
const _ENOSTR = 60
const _FS_SYNC_FL = 0x00000008
const ___NR_sched_setparam = 142
const __SC_THREAD_THREADS_MAX = 76
const _SKF_AD_VLAN_TPID = 60
const _IFLA_HSR_SLAVE2 = 2
const _PACKET_FANOUT = 18
const _SA_NODEFER = 0x40000000
const _NLMSG_MIN_TYPE = 0x10
const _TIOCM_RI = _TIOCM_RNG
const _IPTOS_ECN_ECT0 = 0x02
const _SYS_fcntl = ___NR_fcntl
const _SIOCSIFMEM = 0x8920
const _IFLA_IPVLAN_UNSPEC = 0
const __BITS_UIO_H = 1
const _RTN_LOCAL = 2
const _TUNSETOFFLOAD_val = 1074025680
const _IFLA_VXLAN_GROUP6 = 16
const _RT_SCOPE_NOWHERE = 255
const _SCNoLEAST16 = "ho"
const _SCNd32 = "d"
const _FFI_TYPE_UINT64 = 11
const _PF_CAIF = 37
const _CLONE_SETTLS = 0x00080000
const ___DEC64_SUBNORMAL_MIN__ = 0.000000000000001E-383
const ___O_NOFOLLOW = 0400000
const _NETLINK_DROP_MEMBERSHIP = 2
const ___NR_inotify_init = 253
const _IFLA_INFO_KIND = 1
const _ARPOP_RREQUEST = 3
const ___NR_timerfd_settime = 286
const _IFLA_INET_UNSPEC = 0
const __RPC_NETDB_H = 1
const _RT_TABLE_MAIN = 254
const _SKF_AD_OFF = (-0x1000)
const ___DEC32_MANT_DIG__ = 7
const _BMAP_IOCTL = 1
const _RTM_NEWTFILTER = 44
const _SA_NOMASK = _SA_NODEFER
const _MAP_EXECUTABLE = 0x01000
const _STA_UNSYNC = 0x0040
const _ENOTDIR = 20
const _EINVAL = 22
const _TUNGETFILTER_val = 2148553947
const ___NR_sched_getattr = 315
const _TUNSETDEBUG_val = 1074025673
const _SCNx16 = "hx"
const _IP_FREEBIND = 15
const _IN_CLASSA_MAX = 128
const _B75 = 0000002
const _EPOLL_CLOEXEC = 524288
const _NETLINK_GENERIC = 16
const _PTRACE_PEEKUSR = 3
const _PACKET_OTHERHOST = 3
const ___FLT64_DIG__ = 15
const _ARPHRD_IEEE802_TR = 800
const _TCIOFF = 2
const _RT_TABLE_UNSPEC = 0
const __SC_ASYNCHRONOUS_IO = 12
const _ND_ROUTER_ADVERT = 134
const _PACKET_DROP_MEMBERSHIP = 2
const _IN_CLOSE_WRITE = 0x00000008
const _NETLINK_CONNECTOR = 11
const _TIOCM_SR = 0x010
const _F_GETLK = _F_GETLK64
const _TIOCM_ST = 0x008
const _EKEYEXPIRED = 127
const _TCOFLUSH = 1
const _SIOCATMARK = 0x8905
const __SC_LEVEL2_CACHE_SIZE = 191
const _FFI_TYPE_DOUBLE = 3
const _SIOCGIFBRDADDR = 0x8919
const _RTM_GETACTION = 50
const _SOL_ATM = 264
const __SC_TZNAME_MAX = 6
const ___WCHAR_MIN__ = (-___WCHAR_MAX__ - 1)
const __SC_XBS5_LPBIG_OFFBIG = 128
const _PORT_PROFILE_RESPONSE_BADSTATE = 259
const _IPPORT_SMTP = 25
const _TIOCCONS = 0x541D
const _IF_NAMESIZE = 16
const _EBADE = 52
const _EBADF = 9
const ___NR_clock_adjtime = 305
const _SYS_fstatfs = ___NR_fstatfs
const _ECHOKE = 0004000
const _HAVE_SYS_UTSNAME_H = 1
const _PRIx8 = "x"
const _B3500000 = 0010016
const ___NR_sendfile = 40
const ___NR_fchownat = 260
const _EBADR = 53
const _REG_RSP = 15
const _SIGCHLD = 17
const ___NR_fork = 57
const _AF_FILE = _PF_FILE
const _CLOCK_REALTIME_ALARM = 8
const __SC_THREAD_STACK_MIN = 75
const _IFLA_VXLAN_PORT = 15
const _IFLA_MACSEC_VALIDATION = 13
const _IFLA_BOND_ARP_ALL_TARGETS = 10
const __XOPEN_UNIX = 1
const _EHOSTUNREACH = 113
const _IP_RETOPTS = 7
const _S_BLKSIZE = 512
const ___unix = 1
const ___NR_fchmod = 91
const _SCNoLEAST32 = "o"
const _EL3RST = 47
const _IFLA_VF_STATS_TX_BYTES = 3
const _TCSETXF = 0x5434
const _IFLA_PHYS_PORT_NAME = 38
const _CRTSCTS = 020000000000
const ___IFLA_MACSEC_MAX = 15
const _IFLA_NET_NS_PID = 19
const _SIOCSIFHWADDR = 0x8924
const _TCP_FASTOPEN = 23
const _TIOCVHANGUP = 0x5437
const _ATF_NETMASK = 0x20
const _TCSETXW = 0x5435
const _SOL_NFC = 280
const ___SIZEOF_INT128__ = 16
const ___STDC_UTF_16__ = 1
const _TIOCPKT_DOSTOP = 32
const _DT_LNK = 10
const ___FLT32_MIN_10_EXP__ = (-37)
const _ENOLCK = 37
const _SYS_sched_rr_get_interval = ___NR_sched_rr_get_interval
const _AF_RXRPC = _PF_RXRPC
const _PR_GET_UNALIGN = 5
const _IN_CLASSB_HOST = (0xffffffff & ^_IN_CLASSB_NET)
const _NSS_BUFLEN_PASSWD = 1024
const __SC_THREAD_SAFE_FUNCTIONS = 68
const _NDTPA_MCAST_REPROBES = 17
const _IPV6_RXDSTOPTS = _IPV6_DSTOPTS
const ___NR_faccessat = 269
const _ETH_P_MVRP = 0x88F5
const __SC_XOPEN_LEGACY = 129
const _PAGE_SIZE = (1 << _PAGE_SHIFT)
const _RTF_NONEXTHOP = 0x00200000
const __BITS_WCHAR_H = 1
const _PR_SET_PDEATHSIG = 1
const _SYS_ioperm = ___NR_ioperm
const __CS_POSIX_V7_ILP32_OFF32_LIBS = 1134
const _IFLA_VF_VLAN_INFO_UNSPEC = 0
const _MS_NOEXEC = 8
const _VTIME = 5
const ___INT_FAST64_WIDTH__ = 64
const _BUS_ADRERR = 2
const _SCNo16 = "ho"
const _N_HDLC = 13
const _PORT_VDP_RESPONSE_VTID_VIOLATION = 4
const __SC_THREAD_ATTR_STACKADDR = 77
const _ETH_P_IPX = 0x8137
const _PRIuLEAST32 = "u"
const _IFLA_MACVLAN_MACADDR_MODE = 3
const _FS_FL_USER_MODIFIABLE = 0x000380FF
const ___GCC_ATOMIC_TEST_AND_SET_TRUEVAL = 1
const ___NR_renameat = 264
const _TIOCSIG_val = 1074025526
const __PATH_NSSWITCH_CONF = "/etc/nsswitch.conf"
const _SYS_accept = ___NR_accept
const _PACKET_RESERVE = 12
const _STA_PPSJITTER = 0x0200
const ___NR_signalfd = 282
const _SO_PEERSEC = 31
const _IFLA_BOND_SLAVE_LINK_FAILURE_COUNT = 3
const ___INT_WIDTH__ = 32
const _IFLA_BRPORT_LEARNING = 8
const _NTF_USE = 0x01
const ___BIG_ENDIAN = 4321
const _PREFIX_UNSPEC = 0
const _SEGV_ACCERR = 2
const _SCNo32 = "o"
const ___NR_recvfrom = 45
const _TCP_COOKIE_IN_ALWAYS = (1 << 0)
const _SYS_readv = ___NR_readv
const _PF_RDS = 21
const _IPV6_DSTOPTS = 59
const __SYS_PTRACE_H = 1
const _RTM_F_NOTIFY = 0x100
const _TCPOPT_SACK = 5
const _IFLA_BOND_ALL_SLAVES_ACTIVE = 17
const _IFF_BROADCAST = 2
const _IPOPT_SATID = 136
const _TIOCMBIC = 0x5417
const _FS_INDEX_FL = 0x00001000
const _SYS_uname = ___NR_uname
const _MOD_TIMECONST = _ADJ_TIMECONST
const _MCAST_INCLUDE = 1
const _IFF_TUN_EXCL = 0x8000
const _PR_TASK_PERF_EVENTS_DISABLE = 31
const _IP_MTU_DISCOVER = 10
const _IFLA_VXLAN_PORT_RANGE = 10
const ___NR_sched_setattr = 314
const __SYSCALL_H = 1
const _ESTRPIPE = 86
const _RTF_IRTT = 0x0100
const _TCA_OPTIONS = 2
const _SEEK_DATA = 3
const _F_OWNER_GID = 2
const _ENOLINK = 67
const _FFI_GO_CLOSURES = 1
const _VSWTC = 7
const _SA_INTERRUPT = 0x20000000
const ___DBL_HAS_QUIET_NAN__ = 1
const _ARPOP_InREPLY = 9
const _SYS_sendmsg = ___NR_sendmsg
const _RTMSG_DELROUTE = 0x22
const _TIOCGSID = 0x5429
const __POSIX_LINK_MAX = 8
const _N_MOUSE = 2
const ___NR_fchdir = 81
const ___have_sigevent_t = 1
const _PTRACE_SETREGSET = 16901
const _IN_NONBLOCK = 2048
const ___NR_inotify_init1 = 294
const _FFI_TYPE_VOID = 0
const _FD_CLOEXEC = 1
const __SYS_EPOLL_H = 1
const _ECHONL = 0000100
const ___MAX_BAUD = _B4000000
const __PATH_PROTOCOLS = "/etc/protocols"
const _PACKET_QDISC_BYPASS = 20
const _CLONE_NEWUTS = 0x04000000
const _SYS_semtimedop = ___NR_semtimedop
const _ETH_P_PHONET = 0x00F5
const _IFLA_OFFLOAD_XSTATS_CPU_HIT = 1
const __PWD_H = 1
const __POSIX_SHELL = 1
const _FFI_SIZEOF_JAVA_RAW = _FFI_SIZEOF_ARG
const ___WCHAR_MIN = ___WCHAR_MIN__
const _NETDB_INTERNAL = -1
const ___USE_MISC = 1
const _PRIO_MAX = 20
const _ETHERTYPE_ARP = 0x0806
const _INT32_MIN = (-2147483647-1)
const __POSIX_TIMEOUTS = 200809
const _SPLICE_F_GIFT = 8
const ___BYTE_ORDER__ = ___ORDER_LITTLE_ENDIAN__
const ___RTNLGRP_MAX = 29
const __SC_SAVED_IDS = 8
const _SYS_setgroups = ___NR_setgroups
const _SCM_TIMESTAMP = _SO_TIMESTAMP
const _IFF_PROMISC = 256
const _ADJ_SETOFFSET = 0x0100
const _PRIXLEAST16 = "X"
const _TH_FIN = 0x01
const _RTM_GETADDRLABEL = 74
const ___SIGRTMAX = (__NSIG - 1)
const _ERESTART = 85
const __SC_V7_ILP32_OFFBIG = 238
const __PC_ASYNC_IO = 10
const _MADV_DOFORK = 11
const ___unix__ = 1
const ___error_t_defined = 1
const __SS_SIZE = 128
const _NGREG = 23
const _TCP_CLOSING = 11
const _RTF_XRESOLVE = 0x0800
const _BPF_RET = 0x06
const _HAVE_STRERROR_R = 1
const _SYS_sendmmsg = ___NR_sendmmsg
const __SC_NL_SETMAX = 123
const __SYS_SYSMACROS_H = 1
const _NDA_CACHEINFO = 3
const _CLONE_VM = 0x00000100
const _FILE_DEDUPE_RANGE_DIFFERS = 1
const __IOC_DIRBITS = 2
const _WUNTRACED = 2
const _PR_MCE_KILL_SET = 1
const _SKF_AD_QUEUE = 24
const ___NR_lchown = 94
const _PR_SET_MM_START_STACK = 5
const ___FLOAT_WORD_ORDER__ = ___ORDER_LITTLE_ENDIAN__
const __POSIX_SIGQUEUE_MAX = 32
const ___USE_REENTRANT = 1
const ___SIZEOF_SEM_T = 32
const _XATTR_SIZE_MAX = 65536
const ___NR_modify_ldt = 154
const _SYS_epoll_ctl = ___NR_epoll_ctl
const _TCPI_OPT_WSCALE = 4
const __SC_LEVEL1_ICACHE_ASSOC = 186
const _IPV6_RTHDR_LOOSE = 0
const __POSIX_THREAD_ROBUST_PRIO_INHERIT = 200809
const _IPPORT_BIFFUDP = 512
const _FIONREAD = 0x541B
const _MLD_LISTENER_REDUCTION = 132
const _CX86_CCR5 = 0xe9
const _TIOCSERGWILD = 0x5454
const ___NR_epoll_ctl_old = 214
const _EKEYREJECTED = 129
const _X86_CR0_CD_BIT = 30
const _MAP_NONBLOCK = 0x10000
const _SYS_syncfs = ___NR_syncfs
const _TABDLY = 0014000
const ___GNUC_MINOR__ = 0
const _HAVE_SEMAPHORE_H = 1
const _SIG_UNBLOCK = 1
const ___NR_prctl = 157
const _IFLA_INFO_XSTATS = 3
const ___NR_process_vm_writev = 311
const _IFLA_BR_MCAST_STARTUP_QUERY_CNT = 29
const _IPPORT_DISCARD = 9
const _NBPG = _PAGE_SIZE
const __CS_XBS5_LP64_OFF64_CFLAGS = 1108
const _SYS_ioctl = ___NR_ioctl
const _SYS_poll = ___NR_poll
const _BC_STRING_MAX = __POSIX2_BC_STRING_MAX
const _IPV6_2292PKTOPTIONS = 6
const _TIOCM_CTS = 0x020
const _PTRDIFF_MAX = (9223372036854775807)
const _RTA_PAD = 24
const _SYS_iopl = ___NR_iopl
const _NET_MAJOR = 36
const _SYS_msgsnd = ___NR_msgsnd
const ___S_IEXEC = 0100
const __SC_DELAYTIMER_MAX = 26
const _SYS_exit = ___NR_exit
const _SYS_restart_syscall = ___NR_restart_syscall
const _PRIXLEAST32 = "X"
const _IFLA_HSR_SUPERVISION_ADDR = 4
const __POSIX_TYPED_MEMORY_OBJECTS = -1
const _FS_XFLAG_FILESTREAM = 0x00004000
const _EUCLEAN = 117
const _PR_SET_FPEMU = 10
const _ETH_P_ATALK = 0x809B
const _PF_IB = 27
const ___USE_POSIX199506 = 1
const _SYS_nanosleep = ___NR_nanosleep
const _IP_DROP_MEMBERSHIP = 36
const _WINT_MAX = (4294967295)
const _IFLA_VXLAN_UDP_ZERO_CSUM6_RX = 20
const _ECONNABORTED = 103
const _PR_UNALIGN_NOPRINT = 1
const _FS_DIRSYNC_FL = 0x00010000
const _SIOCDEVPRIVATE = 0x89F0
const __SC_TIMEOUTS = 164
const ___INT_LEAST32_MAX__ = 0x7fffffff
const _IN_CLOSE = (_IN_CLOSE_WRITE | _IN_CLOSE_NOWRITE)
const _RTM_NEWNSID = 88
const _IPPORT_MTP = 57
const _X86_EFLAGS_TF_BIT = 8
const ___NR_unlink = 87
const _IPTOS_PREC_IMMEDIATE = _IPTOS_CLASS_CS2
const _UINT_LEAST16_MAX = (65535)
const ___NR_geteuid = 107
const _S_IWGRP = (_S_IWUSR >> 3)
const _SYS_mkdirat = ___NR_mkdirat
const _TIOCPKT_DATA = 0
const __CS_V6_WIDTH_RESTRICTED_ENVS = 1
const _RTCF_DIRECTSRC = 0x04000000
const ___NR_sync_file_range = 277
const _IFLA_PORT_VSI_TYPE = 3
const _ADJ_TAI = 0x0080
const _NDUSEROPT_UNSPEC = 0
const __UTSNAME_DOMAIN_LENGTH = __UTSNAME_LENGTH
const _NR_FILE = 8192
const _PF_PPPOX = 24
const _SO_PEEK_OFF = 42
const _SO_RCVBUF = 8
const __SC_XBS5_ILP32_OFFBIG = 126
const ___SIZEOF_PTHREAD_CONDATTR_T = 4
const _N_HCI = 15
const _PRIuLEAST8 = "u"
const _RTAX_SSTHRESH = 6
const _IFF_MULTI_QUEUE = 0x0100
const _RT_CLASS_LOCAL = 255
const _FIOGETOWN = 0x8903
const ___NR_shmget = 29
const _X86_EFLAGS_DF_BIT = 10
const _SO_SELECT_ERR_QUEUE = 45
const _SOCK_NONBLOCK = 2048
const _UINT_LEAST32_MAX = (4294967295)
const _SIGXFSZ = 25
const _IFLA_PROTINFO = 12
const ___NR_munlockall = 152
const _IP_MULTICAST_ALL = 49
const _ECHO = 0000010
const _ARPHRD_EETHER = 2
const _CLD_CONTINUED = 6
const _ETHERTYPE_AT = 0x809B
const _SCHAR_MAX = ___SCHAR_MAX__
const _IFLA_MACSEC_SCB = 11
const _IFLA_BRPORT_DESIGNATED_COST = 16
const _IFLA_BR_NF_CALL_ARPTABLES = 38
const _NDTPA_REACHABLE_TIME = 3
const _HAVE_AS_COMDAT_GAS = 1
const _NLM_F_MULTI = 2
const _SYS_mremap = ___NR_mremap
const _X86_CR4_PGE_BIT = 7
const _IFA_ADDRESS = 1
const _SIOCSIFDSTADDR = 0x8918
const _VREPRINT = 12
const _EPOLL_CTL_DEL = 2
const _CX86_DIR1 = 0xff
const _IFLA_QDISC = 6
const ___ELF__ = 1
const _IN_OPEN = 0x00000020
const _ETH_P_TSN = 0x22F0
const _ETH_P_CONTROL = 0x0016
const _IFLA_BOND_AD_INFO_NUM_PORTS = 2
const _DT_FIFO = 1
const _SCNiFAST8 = "hhi"
const _TIOCSETD = 0x5423
const __CS_XBS5_ILP32_OFF32_LINTFLAGS = 1103
const _IPOPT_OFFSET = 2
const ___NR_fstatfs = 138
const ___NR_set_thread_area = 205
const _IFLA_BOND_ARP_INTERVAL = 7
const _PR_SET_MM_START_DATA = 3
const _IPPROTO_IGMP = 2
const _SYS_sysinfo = ___NR_sysinfo
const _SYS_setsid = ___NR_setsid
const _NUD_NONE = 0x00
const _OFDEL = 0000200
const __PC_PRIO_IO = 11
const ___FLT_MIN__ = 1.1
const ___NR_copy_file_range = 326
const _CLONE_NEWNET = 0x40000000
const _RTA_OIF = 4
const _SI_SIGIO = -5
const __XOPEN_REALTIME = 1
const ___NR_seccomp = 317
const _IFLA_MACSEC_ICV_LEN = 3
const _IFLA_BR_TCN_TIMER = 17
const _PRIu16 = "u"
const _ND_OPT_SOURCE_LINKADDR = 1
const _IFA_F_DEPRECATED = 0x20
const _RTNH_F_DEAD = 1
const _FFI_TYPE_FLOAT = 2
const _VERASE = 2
const _RT_CLASS_MAIN = 254
const _ENOANO = 55
const __BITS_UIO_H_FOR_SYS_UIO_H = 1
const __BITS_TIMEX_H = 1
const __SC_NL_ARGMAX = 119
const _IFA_MULTICAST = 7
const _IPPROTO_BEETPH = 94
const _IPOPT_SECUR_TOPSECRET = 0x6bc5
const ___S_IWRITE = 0200
const _ENOTCONN = 107
const _PTRACE_SETFPXREGS = 19
const __CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS = 1145
const ___S_IFMT = 0170000
const _IPOIB_MODE_DATAGRAM = 0
const ___FLT64X_DECIMAL_DIG__ = 21
const __SC_PAGESIZE = 30
const _ARPHRD_CISCO = 513
const ___IFLA_BR_MAX = 43
const _IPPROTO_DSTOPTS = 60
const _RLIMIT_CPU = 0
const _MADV_DONTDUMP = 16
const ___FLT128_HAS_INFINITY__ = 1
const __CS_POSIX_V6_LP64_OFF64_LINTFLAGS = 1127
const __SC_NPROCESSORS_CONF = 83
const _IFLA_GENEVE_UDP_ZERO_CSUM6_RX = 10
const _TCA_XSTATS = 4
const _PACKET_MR_ALLMULTI = 2
const ___SSE2_MATH__ = 1
const _O_NOCTTY = 0400
const _CLONE_IO = 0x80000000
const _SIOCSIFHWBROADCAST = 0x8937
const _IN6_ADDR_GEN_MODE_STABLE_PRIVACY = 2
const _HAVE_ACCEPT4 = 1
const __CS_GNU_LIBC_VERSION = 2
const _NLM_F_CREATE = 0x400
const _RT_CLASS_DEFAULT = 253
const _HAVE_UNLINKAT = 1
const _ENOSYS = 38
const _RTM_GETMULTICAST = 58
const ___IFLA_HSR_MAX = 7
const _EPOLL_CTL_MOD = 3
const __SC_PII_XTI = 54
const __CS_XBS5_ILP32_OFFBIG_LIBS = 1106
const _AF_ALG = _PF_ALG
const _IFLA_PPP_UNSPEC = 0
const _SO_RCVLOWAT = 18
const _X86_CR0_PG_BIT = 31
const _IPPORT_WHOSERVER = 513
const _HAVE_SYS_MMAN_H = 1
const ___NR_pwrite64 = 18
const _RTNLGRP_NONE = 0
const _IFLA_BOND_LP_INTERVAL = 19
const _PTRACE_GETFPREGS = 14
const _CLONE_FILES = 0x00000400
const _MSG_WAITALL = 256
const _PR_SET_MM_ENV_END = 11
const ___NR_sendmsg = 46
const _IFLA_VXLAN_LABEL = 26
const ___NR_getsid = 124
const ___NR_ioprio_get = 252
const _IFLA_VF_IB_NODE_GUID = 10
const _MS_REC = 16384
const __POSIX_TRACE = -1
const ___FLT128_HAS_QUIET_NAN__ = 1
const _LOCK_NB = 4
const _PDP_ENDIAN = ___PDP_ENDIAN
const ___LONG_MAX__ = 0x7fffffffffffffff
const _PR_MCE_KILL_EARLY = 1
const _NETLINK_AUDIT = 9
const _ICMP6_FILTER_BLOCKOTHERS = 3
const __SC_SPIN_LOCKS = 154
const _IFLA_BOND_AD_INFO_ACTOR_KEY = 3
const _PR_FP_MODE_FR = (1 << 0)
const _RTM_GETTCLASS = 42
const _AI_ADDRCONFIG = 0x0020
const _TCP_LISTEN = 10
const _MADV_UNMERGEABLE = 13
const _PRIu32 = "u"
const _SYS_shutdown = ___NR_shutdown
const _HAVE_LINUX_FS_H = 1
const _N_R3964 = 9
const _IPPROTO_AH = 51
const _EXFULL = 54
const __POSIX_RAW_SOCKETS = 200809
const _EBUSY = 16
const _B2500000 = 0010014
const ___NR_getsockname = 51
const _PRIXFAST8 = "X"
const _SYS_tkill = ___NR_tkill
const ___amd64__ = 1
const _IPTOS_PREC_PRIORITY = _IPTOS_CLASS_CS1
const _CTIME = 0
const ___FLT32X_HAS_INFINITY__ = 1
const _EUNATCH = 49
const __SC_2_PBS_ACCOUNTING = 169
const __POSIX_THREAD_SPORADIC_SERVER = -1
const ___NR_mlock2 = 325
const _IPPORT_WHOIS = 43
const ___NR_get_thread_area = 211
const _F_OFD_GETLK = 36
const _NLA_ALIGNTO = 4
const _ENOMEDIUM = 123
const __GNU_SOURCE = 1
const _SYS_ptrace = ___NR_ptrace
const _SIOCGIFINDEX = 0x8933
const _E2BIG = 7
const __XOPEN_SOURCE_EXTENDED = 1
const _SI_TKILL = -6
const __SC_THREAD_SPORADIC_SERVER = 161
const ___x86_64__ = 1
const _SYS_futex = ___NR_futex
const _IN_DELETE = 0x00000200
const _FFDLY = 0100000
const _MCAST_LEAVE_SOURCE_GROUP = 47
const _S_IXUSR = ___S_IEXEC
const __SYS_SELECT_H = 1
const ___NR_inotify_add_watch = 254
const _RWF_HIPRI = 0x00000001
const _MCL_ONFAULT = 4
const _FS_EA_INODE_FL = 0x00200000
const ___NR_openat = 257
const _TUNSETPERSIST_val = 1074025675
const ___NR_fdatasync = 75
const _F_SETLEASE = 1024
const __SC_FD_MGMT = 143
const ___BITS_PER_LONG = 64
const _PRIO_MIN = -20
const ___NR_prlimit64 = 302
const _RTM_DELTFILTER = 45
const _RTEXT_FILTER_VF = (1 << 0)
const __POSIX_SOURCE = 1
const ___NETINET_IF_ETHER_H = 1
const _SYS_recvmmsg = ___NR_recvmmsg
const _HAVE_SCHED_H = 1
const _ETH_P_RARP = 0x8035
const ___ORDER_PDP_ENDIAN__ = 3412
const _SO_REUSEPORT = 15
const __POSIX_SEM_NSEMS_MAX = 256
const ___LDBL_EPSILON__ = 1.1
const ___clock_t_defined = 1
const _MAP_TYPE = 0x0f
const _NETLINK_SOCK_DIAG = 4
const ___USE_XOPEN_EXTENDED = 1
const _PACKET_TX_HAS_OFF = 19
const _TCP_REPAIR = 19
const _IFLA_VLAN_FLAGS = 2
const ___NR_dup = 32
const _AF_TIPC = _PF_TIPC
const _RTM_SETNEIGHTBL = 67
const ___NR_futimesat = 261
const ___USE_KERNEL_IPV6_DEFS = 0
const _IFLA_VXLAN_PROXY = 11
const _HAVE_UNISTD_H = 1
const _X86_CR0_AM_BIT = 18
const _IFLA_VXLAN_REMCSUM_NOPARTIAL = 24
const _IFLA_MACVLAN_MACADDR = 4
const _IPTOS_PREC_FLASHOVERRIDE = _IPTOS_CLASS_CS4
const ___SIGRTMIN = 32
const ___NR_fcntl = 72
const _SYS__sysctl = ___NR__sysctl
const _ETH_P_LOCALTALK = 0x0009
const _SYS_mq_timedsend = ___NR_mq_timedsend
const _TIOCSERGETLSR = 0x5459
const _SOL_IUCV = 277
const _RLIMIT_FSIZE = 1
const ___RTA_MAX = 25
const _BPF_TAX = 0x00
const _RTA_PREF = 20
const __SC_SYNCHRONIZED_IO = 14
const ___RTN_MAX = 12
const __SC_V7_LP64_OFF64 = 239
const _ND_OPT_MTU = 5
const _MSG_DONTROUTE = 4
const __SC_EQUIV_CLASS_MAX = 41
const __POSIX_CLOCKRES_MIN = 20000000
const ___GCC_ATOMIC_INT_LOCK_FREE = 2
const _POSIX_FADV_NORMAL = 0
const _IP_DROP_SOURCE_MEMBERSHIP = 40
const _SEEK_MAX = _SEEK_HOLE
const _ARPHRD_METRICOM = 23
const _IFLA_VLAN_EGRESS_QOS = 3
const ___NR_clock_nanosleep = 230
const __SYS_TIMES_H = 1
const ___FLT64X_MAX_EXP__ = 16384
const _S_ISGID = ___S_ISGID
const _IPV6_RTHDR_TYPE_0 = 0
const _SIGSTOP = 19
const _FS_UNRM_FL = 0x00000002
const __POSIX_THREAD_SAFE_FUNCTIONS = 200809
const _PR_FP_EXC_NONRECOV = 1
const _TUNGETVNETHDRSZ_val = 2147767511
const _IGNBRK = 0000001
const ___NETPACKET_PACKET_H = 1
const _SYS_sched_get_priority_min = ___NR_sched_get_priority_min
const _N_MASC = 8
const _IFLA_BOND_AD_SELECT = 22
const _IPV6_IPSEC_POLICY = 34
const _AF_LLC = _PF_LLC
const _SIGUNUSED = 31
const _SIOCSRARP = 0x8962
const _RTA_PREFSRC = 7
const _SO_SNDBUFFORCE = 32
const ___WCLONE = 0x80000000
const ___FLT_HAS_DENORM__ = 1
const _RUSAGE_THREAD = 1
const __POSIX_THREAD_ATTR_STACKADDR = 200809
const _MACSEC_VALIDATE_STRICT = 2
const ___ATOMIC_HLE_RELEASE = 131072
const _SYS_getrlimit = ___NR_getrlimit
const _RTM_SETDCB = 79
const _RTMSG_DELDEVICE = 0x12
const _ICMP6_RR_PCOUSE_RAFLAGS_ONLINK = 0x20
const _SYS_membarrier = ___NR_membarrier
const _SIOCGPGRP = 0x8904
const __CS_LFS64_LDFLAGS = 1005
const __LFS64_ASYNCHRONOUS_IO = 1
const _HAVE_LINUX_IF_TUN_H = 1
const _ARPHRD_APPLETLK = 8
const _PR_GET_SECUREBITS = 27
const _CMIN = 1
const ___NR_pread64 = 17
const _IFLA_VXLAN_TTL = 5
const ___GCC_ATOMIC_CHAR32_T_LOCK_FREE = 2
const _IN_CLOSE_NOWRITE = 0x00000010
const ___ATOMIC_SEQ_CST = 5
const _SYS_inotify_init = ___NR_inotify_init
const _TIOCSERGSTRUCT = 0x5458
const _NLM_F_DUMP = (_NLM_F_ROOT|_NLM_F_MATCH)
const _S_IFBLK = ___S_IFBLK
const __PC_REC_MAX_XFER_SIZE = 15
const _SIOCADDDLCI = 0x8980
const ___LDBL_MAX_EXP__ = 16384
const __LFS64_STDIO = 1
const _SYS_tuxcall = ___NR_tuxcall
const __SYS_UN_H = 1
const _ICMP6_FILTER_BLOCK = 1
const _EREMCHG = 78
const _NETLINK_ADD_MEMBERSHIP = 1
const _X86_EFLAGS_VIP_BIT = 20
const _TCPI_OPT_SYN_DATA = 32
const ___NR_umask = 95
const _WINT_MIN = (0)
const __POSIX_MEMLOCK = 200809
const __SC_CHARCLASS_NAME_MAX = 45
const __POSIX_READER_WRITER_LOCKS = 200809
const _HAVE_LINUX_PTRACE_H = 1
const _X86_CR4_SMXE_BIT = 14
const _IXOFF = 0010000
const _MS_NOUSER = -2147483648
const ___BIGGEST_ALIGNMENT__ = 16
const _ETH_P_DDCMP = 0x0006
const ___NR_rt_sigsuspend = 130
const _X_OK = 1
const _O_ASYNC = 020000
const _TIOCLINUX = 0x541C
const ___SIZEOF_SIZE_T__ = 8
const _NUD_NOARP = 0x40
const _S_IFDIR = ___S_IFDIR
const ___USE_XOPEN2KXSI = 1
const _NTF_MASTER = 0x04
const ___ATOMIC_ACQUIRE = 2
const _N_6PACK = 7
const _IP_DF = 0x4000
const _IPOPT_OPTVAL = 0
const __PATH_HOSTS = "/etc/hosts"
const ___NR_eventfd = 284
const _SO_SNDBUF = 7
const ___NR_lseek = 8
const ___NR_mkdirat = 258
const _DT_UNKNOWN = 0
const _IFLA_VLAN_ID = 1
const __SC_PII_INTERNET_STREAM = 61
const _F_SETOWN = ___F_SETOWN
const __CS_POSIX_V6_LP64_OFF64_LIBS = 1126
const _TIOCSSERIAL = 0x541F
const _ENONET = 64
const _ARPHRD_ATM = 19
const _X86_EFLAGS_AF_BIT = 4
const ___NR_setresgid = 119
const _SYS_munmap = ___NR_munmap
const _NI_IDN_ALLOW_UNASSIGNED = 64
const ___INTMAX_MAX__ = 0x7fffffffffffffff
const ___NR_chroot = 161
const ___GCC_ATOMIC_CHAR_LOCK_FREE = 2
const _ETH_FRAME_LEN = 1514
const _PTRACE_EVENT_FORK = 1
const _IFLA_BOND_NUM_PEER_NOTIF = 16
const _CLOCK_REALTIME = 0
const __PC_REC_INCR_XFER_SIZE = 14
const _IFLA_PROTO_DOWN = 39
const __XOPEN_IOV_MAX = __POSIX_UIO_MAXIOV
const __SC_2_PBS_TRACK = 172
const _ARPD_FLUSH = 0x03
const _SCNxLEAST8 = "hhx"
const _TRY_AGAIN = 2
const __SYS_SYSINFO_H = 1
const _ETHERTYPE_IP = 0x0800
const _ARPHRD_IEEE1394 = 24
const _IN_ACCESS = 0x00000001
const _IFLA_IFNAME = 3
const _TCP_USER_TIMEOUT = 18
const _ARPHRD_IEEE80211 = 801
const _IFLA_AF_SPEC = 26
const _B1152000 = 0010011
const _ETH_P_TDLS = 0x890D
const _PF_BLUETOOTH = 31
const __BITS_SIGCONTEXT_H = 1
const _TIOCSWINSZ_val = 21524
const ___LDBL_MAX_10_EXP__ = 4932
const _RTN_PROHIBIT = 8
const _UINT_FAST32_MAX = (18446744073709551615)
const __SYS_FILE_H = 1
const _IP_ORIGDSTADDR = 20
const _ETH_P_SCA = 0x6007
const _RTMGRP_IPV6_PREFIX = 0x20000
const ___NR_setpriority = 141
const _TIOCPKT_NOSTOP = 16
const _IP_PMTUDISC_OMIT = 5
const _COLL_WEIGHTS_MAX = 255
const _O_TRUNC = 01000
const ___NR_sethostname = 170
const _FIONCLEX = 0x5450
const _FS_XFLAG_IMMUTABLE = 0x00000008
const _FS_INLINE_DATA_FL = 0x10000000
const _PF_AX25 = 3
const ___ATOMIC_ACQ_REL = 4
const ___NR_sysinfo = 99
const _FS_XFLAG_DAX = 0x00008000
const _IPV6_ROUTER_ALERT = 22
const _IFLA_BR_BRIDGE_ID = 11
const _RTM_GETANYCAST = 62
const __SC_VERSION = 29
const _PTRACE_SEIZE = 16902
const _IPV6_HDRINCL = 36
const _IFLA_BRPORT_UNICAST_FLOOD = 9
const _RTM_DELNEIGH = 29
const ___STDC_VERSION__ = 199901
const _ITIMER_PROF = 2
const _ADJ_FREQUENCY = 0x0002
const ___LONG_LONG_WIDTH__ = 64
const _AF_ASH = _PF_ASH
const _IP_PMTUDISC_DONT = 0
const _HAVE_SYNC_FETCH_AND_ADD_4 = 1
const _IPV6_JOIN_GROUP = 20
const _SKF_AD_VLAN_TAG = 44
const _PTRACE_GET_THREAD_AREA = 25
const ___SIZEOF_PTHREAD_MUTEX_T = 40
const _SO_TYPE = 3
const ___IFLA_VLAN_MAX = 6
const _PTRACE_SETSIGMASK = 16907
const _CLONE_VFORK = 0x00004000
const ___NR_newfstatat = 262
const _ENOEXEC = 8
const _SO_INCOMING_CPU = 49
const _PR_SET_FPEXC = 12
const _TCP_WINDOW_CLAMP = 10
const _SO_RXQ_OVFL = 40
const _SYS_vfork = ___NR_vfork
const _IN_CLOEXEC = 524288
const _TCA_FCNT = 6
const ___FLT64X_HAS_INFINITY__ = 1
const __SC_SEM_VALUE_MAX = 33
const __NETINET_ICMP6_H = 1
const _PRIxLEAST32 = "x"
const ___RLIMIT_MSGQUEUE = 12
const _IPPROTO_COMP = 108
const _B38400 = 0000017
const _PACKET_RX_RING = 5
const _SO_BPF_EXTENSIONS = 48
const _EADDRNOTAVAIL = 99
const ___FLT32_MIN__ = 1.17549435082228750796873653722224568e-3832
const _IFLA_BR_FORWARD_DELAY = 1
const ___SSE_MATH__ = 1
const _SYS_waitid = ___NR_waitid
const _SCOPE_DELIMITER = '%'
const ___NR_socket = 41
const ___NET_ETHERNET_H = 1
const _S_IRUSR = ___S_IREAD
const _IFLA_XDP_FD = 1
const _IPV6_MTU = 24
const _FS_XFLAG_NOATIME = 0x00000040
const _FS_JOURNAL_DATA_FL = 0x00004000
const ___NR_capget = 125
const _RTN_ANYCAST = 4
const _POLL_HUP = 6
const _HAVE_GETIPINFO = 1
const _MS_UNBINDABLE = 131072
const _PACKET_MULTICAST = 2
const __POSIX_SPIN_LOCKS = 200809
const __POSIX_V6_LPBIG_OFFBIG = -1
const _ARPHRD_FCAL = 785
const _S_IFCHR = ___S_IFCHR
const _MCAST_BLOCK_SOURCE = 43
const _SYS_getgroups = ___NR_getgroups
const ___NR_rt_tgsigqueueinfo = 297
const _UINT32_MAX = (4294967295)
const _TIME_UTC = 1
const _IN_Q_OVERFLOW = 0x00004000
const _IFLA_BRPORT_HOLD_TIMER = 23
const _IFLA_INET6_CACHEINFO = 5
const _TIMER_ABSTIME = 1
const _MAP_FIXED = 0x10
const _F_OWNER_TID = 0
const __SC_CLOCK_SELECTION = 137
const _HAVE_FCHMODAT = 1
const __CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS = 1144
const _PORT_VDP_RESPONSE_INSUFFICIENT_RESOURCES = 2
const _TCP_TIME_WAIT = 6
const _BPF_ST = 0x02
const __POSIX_SPORADIC_SERVER = -1
const _AF_SECURITY = _PF_SECURITY
const _PF_X25 = 9
const _PTRACE_ARCH_PRCTL = 30
const _ESOCKTNOSUPPORT = 94
const _TIOCGSERIAL = 0x541E
const _SYS_mbind = ___NR_mbind
const _IFLA_VF_VLAN = 2
const _SYS_pkey_mprotect = ___NR_pkey_mprotect
const _IFA_BROADCAST = 4
const _BPF_RSH = 0x70
const _IFLA_BR_MCAST_LAST_MEMBER_CNT = 28
const _IFLA_BR_MCAST_HASH_ELASTICITY = 26
const _RTAX_WINDOW = 3
const _MS_SILENT = 32768
const _SCM_WIFI_STATUS = _SO_WIFI_STATUS
const __SC_FILE_ATTRIBUTES = 146
const __POSIX_SEM_VALUE_MAX = 32767
const ___FLT64X_MIN_EXP__ = (-16381)
const _PRIuFAST8 = "u"
const ___timer_t_defined = 1
const __POSIX_HOST_NAME_MAX = 255
const __SC_SIGQUEUE_MAX = 34
const _IOC_OUT = (__IOC_READ << __IOC_DIRSHIFT)
const _EMLINK = 31
const ___WCOREFLAG = 0x80
const _ERFKILL = 132
const __UTSNAME_LENGTH = 65
const _SIG_BLOCK = 0
const _SYS_mincore = ___NR_mincore
const _EAI_OVERFLOW = -12
const _AF_NFC = _PF_NFC
const _SYS_getppid = ___NR_getppid
const _MACVLAN_FLAG_NOPROMISC = 1
const _IPOPT_SECUR_MMMM = 0xbc4d
const _IFLA_BR_STP_STATE = 5
const ___NR_getxattr = 191
const _IFLA_VF_TRUST = 9
const _NDA_LLADDR = 2
const _RTCF_LOG = 0x02000000
const ___FLOAT_WORD_ORDER = ___BYTE_ORDER
const ___NR_mprotect = 10
const _SHUT_RDWR = 2
const _SIOCSIFMETRIC = 0x891e
const __SC_AIO_LISTIO_MAX = 23
const _MAP_DENYWRITE = 0x00800
const _SIOCSPGRP = 0x8902
const _SI_ASYNCIO = -4
const _TUNSETIFF_val = 1074025674
const _RTA_UNSPEC = 0
const ___GCC_IEC_559 = 2
const _RTF_LINKRT = 0x00100000
const _SYS_move_pages = ___NR_move_pages
const _SKF_AD_VLAN_TAG_PRESENT = 48
const _HAVE_LDEXPL = 1
const ___NR_mq_unlink = 241
const ___NR_create_module = 174
const _MACVLAN_MODE_BRIDGE = 4
const _DT_DIR = 4
const _STA_PPSSIGNAL = 0x0100
const _SYS_setfsgid = ___NR_setfsgid
const ___RLIMIT_RTTIME = 15
const _HAVE_OPEN64 = 1
const _TRAP_BRKPT = 1
const _NETLINK_LISTEN_ALL_NSID = 8
const __STRING_INLINE_unaligned = 1
const __SC_DEVICE_SPECIFIC = 141
const _IPFRAGTTL = 60
const __SC_NL_MSGMAX = 121
const _SYS_sched_setattr = ___NR_sched_setattr
const _PR_SET_MM_END_DATA = 4
const _RTAX_ADVMSS = 8
const _SOL_RAW = 255
const _LOCK_EX = 2
const ___NR_munmap = 11
const ___GCC_ATOMIC_LLONG_LOCK_FREE = 2
const __SC_PHYS_PAGES = 85
const _SYS_remap_file_pages = ___NR_remap_file_pages
const _MS_SYNC = 4
const _F_UNLCK = 2
const _PR_GET_FPEMU = 9
const ___NR_remap_file_pages = 216
const _IPOPT_NUMBER_MASK = 0x1f
const _SYS_setuid = ___NR_setuid
const _IP_PASSSEC = 18
const _SYS_socketpair = ___NR_socketpair
const _NDTPA_LOCKTIME = 15
const _TCP_COOKIE_MIN = 8
const _RTMSG_AR_FAILED = 0x51
const _ARPOP_REPLY = 2
const _HAVE_STRING_H = 1
const _INT_FAST8_MAX = (127)
const ___NR__sysctl = 156
const _RTF_BROADCAST = 0x10000000
const _PF_KCM = 41
const __PC_MAX_INPUT = 2
const _IN_MODIFY = 0x00000002
const _SIGQUIT = 3
const _TCP_CORK = 3
const _SYS_removexattr = ___NR_removexattr
const ___FLT_EPSILON__ = 1.1
const ___UINT32_MAX__ = 0xffffffff
const ___NR_fchown = 93
const _RTNLGRP_LINK = 1
const __SC_TRACE_LOG = 184
const _TCP_KEEPINTVL = 5
const _PR_GET_KEEPCAPS = 7
const _INT_LEAST32_MAX = (2147483647)
const ___LDBL_MIN_EXP__ = (-16381)
const _SCNi32 = "i"
const ___NR_rename = 82
const _PTRACE_O_TRACESECCOMP = 128
const _IN_IGNORED = 0x00008000
const _BPF_IMM = 0x00
const _IPPROTO_MH = 135
const _IFLA_VXLAN_LINK = 3
const _ESHUTDOWN = 108
const _SOL_PACKET = 263
const ___NR_init_module = 175
const _CLONE_NEWNS = 0x00020000
const _RTPROT_MROUTED = 17
const __SC_SS_REPL_MAX = 241
const _SYS_truncate = ___NR_truncate
const ___MACSEC_VALIDATE_END = 3
const _X86_EFLAGS_VIF_BIT = 19
const __SC_MULTI_PROCESS = 150
const _B1500000 = 0010012
const ___NR_pwritev = 296
const _SO_REUSEADDR = 2
const _NCC = 8
const _TCP_CA_Loss = 4
const _MS_MGC_MSK = 0xffff0000
const _S_IXOTH = (_S_IXGRP >> 3)
const _SOL_NETLINK = 270
const _ILL_PRVREG = 6
const ___FLT32X_MANT_DIG__ = 53
const _SCNuLEAST8 = "hhu"
const _ULLONG_MAX = (_LLONG_MAX * 2 + 1)
const __IOC_SIZESHIFT = (__IOC_TYPESHIFT+__IOC_TYPEBITS)
const ___NR_nfsservctl = 180
const ___FLT_MIN_10_EXP__ = (-37)
const _NDTPA_DELAY_PROBE_TIME = 7
const _ARPHRD_RSRVD = 260
const __POSIX2_BC_BASE_MAX = 99
const _PACKET_ADD_MEMBERSHIP = 1
const ___NR_rt_sigpending = 127
const ___O_PATH = 010000000
const _ETH_P_BPQ = 0x08FF
const _TCP_TIMESTAMP = 24
const _SIOCSIFPFLAGS = 0x8934
const _RTM_NEWLINK = 16
const _IP_MULTICAST_TTL = 33
const __POSIX_CPUTIME = 0
const _PACKET_FASTROUTE = 6
const _IFLA_IPVLAN_MODE = 1
const _PF_IPX = 4
const _NUD_PERMANENT = 0x80
const ___NR_io_destroy = 207
const _RTAX_RTT = 4
const ___RLIMIT_RSS = 5
const ___NR_gettid = 186
const ___NR_ioperm = 173
const _IFLA_IPOIB_UNSPEC = 0
const ___NR_tuxcall = 184
const ___O_DIRECTORY = 0200000
const _SYS_connect = ___NR_connect
const _TCP_CC_INFO = 26
const _PACKAGE_STRING = "package-unused version-unused"
const _SYS_sched_getattr = ___NR_sched_getattr
const __POSIX2_BC_SCALE_MAX = 99
const _PTRACE_POKETEXT = 4
const _ETH_P_DEC = 0x6000
const _SYS_flistxattr = ___NR_flistxattr
const _NLMSG_OVERRUN = 0x4
const _NETLINK_IP6_FW = 13
const _IFLA_BR_AGEING_TIME = 4
const _TCSETS = 0x5402
const _RTM_F_EQUALIZE = 0x400
const _HAVE_DUP3 = 1
const _BRIDGE_MODE_HAIRPIN = 1
const _TCSETX = 0x5433
const __SC_FSYNC = 15
const __BITS_SOCKADDR_H = 1
const _SYS_setitimer = ___NR_setitimer
const _PTRACE_EVENT_STOP = 128
const _AT_SYMLINK_NOFOLLOW = 0x100
const _HAVE_SYS_VFS_H = 1
const _PF_KEY = 15
const _IFLA_STATS_LINK_XSTATS_SLAVE = 3
const _NL_MMAP_MSG_ALIGNMENT = _NLMSG_ALIGNTO
const _IFLA_VXLAN_UDP_CSUM = 18
const ___NR_wait4 = 61
const _SOL_RDS = 276
const _RTAX_FEATURE_MASK = (_RTAX_FEATURE_ECN | _RTAX_FEATURE_SACK | _RTAX_FEATURE_TIMESTAMP | _RTAX_FEATURE_ALLFRAG)
const _RTM_GETNETCONF = 82
const ___FLT64_MAX_EXP__ = 1024
const _IPPROTO_RSVP = 46
const _RTM_GETNSID = 90
const _ONLCR = 0000004
const _ARPHRD_TUNNEL = 768
const _HAVE_MINCORE = 1
const ___SIZEOF_PTRDIFF_T__ = 8
const _TCP_KEEPCNT = 6
const _TCP_SYN_RECV = 3
const _NLM_F_APPEND = 0x800
const _SYS_mmap = ___NR_mmap
const _SYS_clock_adjtime = ___NR_clock_adjtime
const _RTNLGRP_TC = 4
const _ADJ_NANO = 0x2000
const _NETLINK_TX_RING = 7
const _SYS_eventfd = ___NR_eventfd
const __SC_TRACE_NAME_MAX = 243
const __SC_BC_SCALE_MAX = 38
const __CS_LFS_LDFLAGS = 1001
const ___NR_setregid = 114
const _EOWNERDEAD = 130
const ___NR_readlink = 89
const _TIOCGPTN_val = 2147767344
const ___FLT64X_MAX_10_EXP__ = 4932
const _RTSIG_MAX = 32
const ___SIZEOF_LONG_DOUBLE__ = 16
const _VT0 = 0000000
const _VT1 = 0040000
const _RTNLGRP_IPV4_MROUTE = 6
const _X86_CR0_TS_BIT = 3
const ___NR_sysfs = 139
const _X86_CR4_PAE_BIT = 5
const __POSIX_TZNAME_MAX = 6
const _SIOCSIFENCAP = 0x8926
const _TCP_CA_Disorder = 1
const ___WORDSIZE = 64
const _IP_MF = 0x2000
const _PROT_GROWSUP = 0x02000000
const _RTF_ADDRCLASSMASK = 0xF8000000
const ___amd64 = 1
const _ARPHRD_PRONET = 4
const _B921600 = 0010007
const _EADDRINUSE = 98
const _FS_FL_USER_VISIBLE = 0x0003DFFF
const ___NR_timerfd_gettime = 287
const _CLONE_NEWPID = 0x20000000
const _RTNLGRP_IPV6_RULE = 19
const _ETHER_MIN_LEN = (_ETH_ZLEN + _ETHER_CRC_LEN)
const _PF_ROSE = 11
const _IFLA_PORT_SELF = 25
const _LINK_XSTATS_TYPE_BRIDGE = 1
const __SYS_STAT_H = 1
const ___IFLA_BOND_AD_INFO_MAX = 6
const _F_SETSIG = ___F_SETSIG
const _WSTOPPED = 2
const __PC_VDISABLE = 8
const __SC_MQ_OPEN_MAX = 27
const _X86_EFLAGS_PF_BIT = 2
const _RTM_NEWADDRLABEL = 72
const _SOCK_PACKET = 10
const __SIGSET_H_fns = 1
const _RTMGRP_NEIGH = 4
const _PF_WANPIPE = 25
const _RTM_DELADDR = 21
const _IPV6_HOPOPTS = 54
const _MACVLAN_MACADDR_FLUSH = 2
const _HAVE_STRUCT_EXCEPTION = 1
const _RTPROT_DNROUTED = 13
const _MACVLAN_MODE_SOURCE = 16
const _SYS_setpgid = ___NR_setpgid
const ___IFLA_GENEVE_MAX = 12
const _SIOCADDMULTI = 0x8931
const _RTMSG_NEWROUTE = 0x21
const _FFI_TYPE_COMPLEX = 15
const _HAVE_COSL = 1
const _NI_MAXHOST = 1025
const _HAVE_SYS_MOUNT_H = 1
const _NO_RECOVERY = 3
const _IFLA_VXLAN_UNSPEC = 0
const _IFLA_BOND_MIIMON = 3
const _IPDEFTTL = 64
const _RTAX_MTU = 2
const _ENETRESET = 102
const ___FLT_HAS_QUIET_NAN__ = 1
const _IFLA_INET_CONF = 1
const _SIG_ATOMIC_MAX = (2147483647)
const _STA_PPSFREQ = 0x0002
const _ICMP6_ECHO_REPLY = 129
const _TCXONC = 0x540A
const _AF_BRIDGE = _PF_BRIDGE
const _PR_TIMING_TIMESTAMP = 1
const _IPV6_PMTUDISC_OMIT = 5
const _ILL_ILLTRP = 4
const _IPOPT_RESERVED2 = 0x60
const ___NDUSEROPT_MAX = 2
const _SYNC_FILE_RANGE_WRITE = 2
const _STA_INS = 0x0010
const __POSIX2_COLL_WEIGHTS_MAX = 2
const __XOPEN_XCU_VERSION = 4
const _ENOCSI = 50
const _XATTR_LIST_MAX = 65536
const _RTMGRP_IPV4_MROUTE = 0x20
const _SYS_pselect6 = ___NR_pselect6
const _TOSTOP = 0000400
const _TIOCPKT_STOP = 4
const _IFLA_BRPORT_PROTECT = 6
const __SC_SIGNALS = 158
const _SYS_setxattr = ___NR_setxattr
const _RENAME_WHITEOUT = (1 << 2)
const _IFA_F_NODAD = 0x02
const __LARGEFILE_SOURCE = 1
const ___WINT_MAX__ = 0xffffffff
const _EPFNOSUPPORT = 96
const _SYS_sigaltstack = ___NR_sigaltstack
const _SCNdLEAST32 = "d"
const _IP_PMTUDISC = 10
const _RTNH_F_ONLINK = 4
const _GAI_WAIT = 0
const ___NR_lookup_dcookie = 212
const ___NR_mincore = 27
const _ARPHRD_TUNNEL6 = 769
const _SOL_RXRPC = 272
const __PC_2_SYMLINKS = 20
const _ICMP6_DST_UNREACH_NOROUTE = 0
const _DN_ATTRIB = 0x00000020
const _PTRACE_SETREGS = 13
const ___LP64__ = 1
const _RTM_F_LOOKUP_TABLE = 0x1000
const _MLD_LISTENER_QUERY = 130
const _EAI_ALLDONE = -103
const ___NR_acct = 163
const _MSG_FASTOPEN = 536870912
const _MSG_OOB = 1
const __CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 1121
const _IFLA_MACVLAN_UNSPEC = 0
const _PACKET_AUXDATA = 8
const _IFLA_BOND_UNSPEC = 0
const _IFLA_GENEVE_LABEL = 11
const _PR_UNALIGN_SIGBUS = 2
const _F_TLOCK = 2
const _PF_RXRPC = 33
const _TCP_KEEPIDLE = 4
const ___UINT_FAST64_MAX__ = 0xffffffffffffffff
const ___NR_llistxattr = 195
const __CS_XBS5_ILP32_OFF32_CFLAGS = 1100
const _O_ACCMODE = 0003
const _TIOCM_RNG = 0x080
const ___NR_kexec_file_load = 320
const _IPPORT_FTP = 21
const ___NR_rmdir = 84
const _ETH_P_AX25 = 0x0002
const _HAVE_INTTYPES_H = 1
const _EDESTADDRREQ = 89
const _REG_R10 = 2
const _REG_R11 = 3
const _REG_R12 = 4
const _REG_R13 = 5
const ___have_pthread_attr_t = 1
const _REG_R15 = 7
const _NI_MAXSERV = 32
const _ARPHRD_HDLC = _ARPHRD_CISCO
const _PF_UNIX = _PF_LOCAL
const ___SYSCALL_WORDSIZE = 64
const _SYS_creat = ___NR_creat
const ___NR_getppid = 110
const _FFI_LAST_ABI = 3
const _NDA_MASTER = 9
const _ETH_P_IEEEPUP = 0x0a00
const _PF_IRDA = 23
const _HAVE_SYS_TIMEX_H = 1
const ___FLT_DECIMAL_DIG__ = 9
const ___NR_timer_create = 222
const _SYS_getpgid = ___NR_getpgid
const _FFI_64_BIT_MAX = 9223372036854775807
const _B1800 = 0000012
const _BS0 = 0000000
const _TIOCSSOFTCAR = 0x541A
const __SYS_TIME_H = 1
const __POSIX_ARG_MAX = 4096
const ___SCHAR_WIDTH__ = 8
const ___FLT_RADIX__ = 2
const _X86_CR3_PWT_BIT = 3
const _PORT_VDP_RESPONSE_UNUSED_VTID = 3
const ___DEC32_EPSILON__ = 1E-6
const _IFLA_VXLAN_LEARNING = 7
const _EPOLLET = 2147483648
const _F_SETLKW64 = 7
const ___USE_ATFILE = 1
const _S_IREAD = _S_IRUSR
const _PTRACE_SETFPREGS = 15
const _IFF_RUNNING = 64
const _HAVE_UTIMENSAT = 1
const __PC_SYMLINK_MAX = 19
const _X86_EFLAGS_ZF_BIT = 6
const _F_SETLK64 = 6
const __POSIX_PATH_MAX = 256
const _IN_CLASSA_NSHIFT = 24
const _PACKET_TIMESTAMP = 17
const ___POSIX_FADV_DONTNEED = 4
const _IPPROTO_MTP = 92
type _iface struct {}
type ___locale_data struct {}
