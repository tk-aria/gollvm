{
  "comments": [
    {
      "key": {
        "uuid": "e5c3a0e7_24c2e7ae",
        "filename": "bridge/go-llvm.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2678,
      "author": {
        "id": 14020
      },
      "writtenOn": "2019-06-25T17:18:44Z",
      "side": 1,
      "message": "We can add the mapaccess1 variants here also, if I am reading the code correctly?",
      "revId": "3a2dc668e0d14bbb939f54fc311baf8454352d69",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f65eab05_593c0033",
        "filename": "bridge/go-llvm.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2678,
      "author": {
        "id": 13315
      },
      "writtenOn": "2019-06-25T22:30:28Z",
      "side": 1,
      "message": "Done.\n\nYou\u0027re right. It probably won\u0027t make much difference, as the only use is probably to dereference it immediately, and the frontend probably already marks it as nil check not needed.",
      "parentUuid": "e5c3a0e7_24c2e7ae",
      "revId": "3a2dc668e0d14bbb939f54fc311baf8454352d69",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44140818_1b374431",
        "filename": "bridge/go-llvm.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2691,
      "author": {
        "id": 14020
      },
      "writtenOn": "2019-06-25T16:51:04Z",
      "side": 1,
      "message": "In general this seems like a good idea. I worry a little about the exact semantics of ReadOnly (I\u0027ve been hunting around for some real documentation on it) -- strictly speaking a call to one of these map routines could trigger a stack split, which could write to memory... but I this maybe this is ok, since there is no way to access the memory from any LLVM-compiled function. Maybe I am being too paranoid.",
      "revId": "3a2dc668e0d14bbb939f54fc311baf8454352d69",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfeb5fb5_744c1c13",
        "filename": "bridge/go-llvm.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2691,
      "author": {
        "id": 13315
      },
      "writtenOn": "2019-06-25T22:30:28Z",
      "side": 1,
      "message": "I kind of think it just as \"pure\", which is true, I think, from the caller\u0027s perspective. The memory managed by the split-stack code is not accessible to Go. So I think it is fine. To be on the safe side I added condition on !compilingRuntime, so it is ok even if some runtime internal state changes.",
      "parentUuid": "44140818_1b374431",
      "revId": "3a2dc668e0d14bbb939f54fc311baf8454352d69",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d498586_1e88bfa9",
        "filename": "bridge/go-llvm.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2691,
      "author": {
        "id": 14020
      },
      "writtenOn": "2019-06-25T23:06:29Z",
      "side": 1,
      "message": "OK, SGTM.",
      "parentUuid": "dfeb5fb5_744c1c13",
      "revId": "3a2dc668e0d14bbb939f54fc311baf8454352d69",
      "serverId": "62eb7196-b449-3ce5-99f1-c037f21e1705",
      "unresolved": false
    }
  ]
}